(()=>{var wr="173",ai={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ci={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Cd=0,Nd=1,Pd=2;var Id=0,Dd=1;var Rr=3,Ni=0,St=1,Ui=2,Bi=0,Tn=1,Cr=2,Nr=3,Pr=4,El=5,Sn=100,wl=101,Rl=102,Ld=103,Fd=104,Cl=200,Nl=201,Pl=202,Il=203,cr=204,lr=205,Dl=206,Ll=207,Fl=208,Ul=209,Bl=210;var Ir=0,Dr=1,Lr=2,Pi=3,Fr=4,Ur=5,Br=6,Or=7,Vr=0,Ud=1,Bd=2,Oi=0,Od=1,Vd=2,Gd=3,zd=4;var kd=6,Hd=7;var va=300,li=301,Vi=302,ys=303,vs=304,Ta=306,Ii=1e3,yn=1001,Di=1002,Xe=1003,Ol=1004;var Ts=1005;var _t=1006,Sa=1007;var hn=1008,Wd=1008,zt=1009,Ss=1010,bs=1011,Gi=1012,tt=1013,ke=1014,yt=1015,bt=1016,qd=1017,Xd=1018,zi=1020,Vl=35902,$d=1021,ba=1022,dn=1023,Yd=1024,Kd=1025,vn=1026,ni=1027,Ma=1028,Aa=1029,Ms=1030,Ea=1031,Zd=1032,wa=1033,Ra=33776,Gr=33777,zr=33778,kr=33779,Gl=35840,zl=35841,kl=35842,Hl=35843,Wl=36196,Ca=37492,Na=37496,Pa=37808,Ia=37809,Da=37810,La=37811,Fa=37812,Ua=37813,Ba=37814,Oa=37815,Va=37816,Ga=37817,za=37818,ka=37819,Ha=37820,Wa=37821,qa=36492;var jd=36283,ql=36284,Xl=36285,$l=36286;var ur=2300,Lo=2301,Po=2302,Tl=2400,Sl=2401,bl=2402;var Mn=0,Qd=1,ui="",K="srgb",ln="srgb-linear",Ml="linear",as="srgb",Jd=0,jn=7680,ef=7681,tf=7682,nf=7683,sf=34055,rf=34056,of=5386,af=512,cf=513,lf=514,uf=515,hf=516,df=517,ff=518,Fo=519,Yl=512,Xa=513,Kl=514,Zl=515,jl=516,Ql=517,Jl=518,eu=519,hr=35044,ki=35048;var gt=2e3,$t=2001;var Ft=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});let n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){let n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){let n=this._listeners;if(n===void 0)return;let i=n[e];if(i!==void 0){let s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){let t=this._listeners;if(t===void 0)return;let n=t[e.type];if(n!==void 0){e.target=this;let i=n.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,e);e.target=null}}},ot=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],zx=1234567,Io=Math.PI/180,Li=180/Math.PI;function ei(){let o=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(ot[o&255]+ot[o>>8&255]+ot[o>>16&255]+ot[o>>24&255]+"-"+ot[e&255]+ot[e>>8&255]+"-"+ot[e>>16&15|64]+ot[e>>24&255]+"-"+ot[t&63|128]+ot[t>>8&255]+"-"+ot[t>>16&255]+ot[t>>24&255]+ot[n&255]+ot[n>>8&255]+ot[n>>16&255]+ot[n>>24&255]).toLowerCase()}function se(o,e,t){return Math.max(e,Math.min(t,o))}function pf(o,e){return(o%e+e)%e}function Cb(o,e,t,n,i){return n+(o-e)*(i-n)/(t-e)}function Nb(o,e,t){return o!==e?(t-o)/(e-o):0}function Do(o,e,t){return(1-t)*o+t*e}function Pb(o,e,t,n){return Do(o,e,1-Math.exp(-t*n))}function Ib(o,e=1){return e-Math.abs(pf(o,e*2)-e)}function Db(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*(3-2*o))}function Lb(o,e,t){return o<=e?0:o>=t?1:(o=(o-e)/(t-e),o*o*o*(o*(o*6-15)+10))}function Fb(o,e){return o+Math.floor(Math.random()*(e-o+1))}function Ub(o,e){return o+Math.random()*(e-o)}function Bb(o){return o*(.5-Math.random())}function Ob(o){o!==void 0&&(zx=o);let e=zx+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Vb(o){return o*Io}function Gb(o){return o*Li}function zb(o){return(o&o-1)===0&&o!==0}function kb(o){return Math.pow(2,Math.ceil(Math.log(o)/Math.LN2))}function Hb(o){return Math.pow(2,Math.floor(Math.log(o)/Math.LN2))}function Wb(o,e,t,n,i){let s=Math.cos,r=Math.sin,c=s(t/2),a=r(t/2),l=s((e+n)/2),u=r((e+n)/2),h=s((e-n)/2),d=r((e-n)/2),f=s((n-e)/2),m=r((n-e)/2);switch(i){case"XYX":o.set(c*u,a*h,a*d,c*l);break;case"YZY":o.set(a*d,c*u,a*h,c*l);break;case"ZXZ":o.set(a*h,a*d,c*u,c*l);break;case"XZX":o.set(c*u,a*m,a*f,c*l);break;case"YXY":o.set(a*f,c*u,a*m,c*l);break;case"ZYZ":o.set(a*m,a*f,c*u,c*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function mt(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return o/4294967295;case Uint16Array:return o/65535;case Uint8Array:return o/255;case Int32Array:return Math.max(o/2147483647,-1);case Int16Array:return Math.max(o/32767,-1);case Int8Array:return Math.max(o/127,-1);default:throw new Error("Invalid component type.")}}function ie(o,e){switch(e.constructor){case Float32Array:return o;case Uint32Array:return Math.round(o*4294967295);case Uint16Array:return Math.round(o*65535);case Uint8Array:return Math.round(o*255);case Int32Array:return Math.round(o*2147483647);case Int16Array:return Math.round(o*32767);case Int8Array:return Math.round(o*127);default:throw new Error("Invalid component type.")}}var Hr={DEG2RAD:Io,RAD2DEG:Li,generateUUID:ei,clamp:se,euclideanModulo:pf,mapLinear:Cb,inverseLerp:Nb,lerp:Do,damp:Pb,pingpong:Ib,smoothstep:Db,smootherstep:Lb,randInt:Fb,randFloat:Ub,randFloatSpread:Bb,seededRandom:Ob,degToRad:Vb,radToDeg:Gb,isPowerOfTwo:zb,ceilPowerOfTwo:kb,floorPowerOfTwo:Hb,setQuaternionFromProperEuler:Wb,normalize:ie,denormalize:mt},H=class o{constructor(e=0,t=0){o.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=se(this.x,e.x,t.x),this.y=se(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=se(this.x,e,t),this.y=se(this.y,e,t),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(se(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;let n=this.dot(e)/t;return Math.acos(se(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,r=this.y-e.y;return this.x=s*n-r*i+e.x,this.y=s*i+r*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Q=class o{constructor(e,t,n,i,s,r,c,a,l){o.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,r,c,a,l)}set(e,t,n,i,s,r,c,a,l){let u=this.elements;return u[0]=e,u[1]=i,u[2]=c,u[3]=t,u[4]=s,u[5]=a,u[6]=n,u[7]=r,u[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,i=t.elements,s=this.elements,r=n[0],c=n[3],a=n[6],l=n[1],u=n[4],h=n[7],d=n[2],f=n[5],m=n[8],g=i[0],_=i[3],x=i[6],T=i[1],A=i[4],E=i[7],N=i[2],R=i[5],P=i[8];return s[0]=r*g+c*T+a*N,s[3]=r*_+c*A+a*R,s[6]=r*x+c*E+a*P,s[1]=l*g+u*T+h*N,s[4]=l*_+u*A+h*R,s[7]=l*x+u*E+h*P,s[2]=d*g+f*T+m*N,s[5]=d*_+f*A+m*R,s[8]=d*x+f*E+m*P,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],c=e[5],a=e[6],l=e[7],u=e[8];return t*r*u-t*c*l-n*s*u+n*c*a+i*s*l-i*r*a}invert(){let e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],c=e[5],a=e[6],l=e[7],u=e[8],h=u*r-c*l,d=c*a-u*s,f=l*s-r*a,m=t*h+n*d+i*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);let g=1/m;return e[0]=h*g,e[1]=(i*l-u*n)*g,e[2]=(c*n-i*r)*g,e[3]=d*g,e[4]=(u*t-i*a)*g,e[5]=(i*s-c*t)*g,e[6]=f*g,e[7]=(n*a-l*t)*g,e[8]=(r*t-n*s)*g,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,r,c){let a=Math.cos(s),l=Math.sin(s);return this.set(n*a,n*l,-n*(a*r+l*c)+r+e,-i*l,i*a,-i*(-l*r+a*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(id.makeScale(e,t)),this}rotate(e){return this.premultiply(id.makeRotation(-e)),this}translate(e,t){return this.premultiply(id.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){let t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}},id=new Q;function tu(o){for(let e=o.length-1;e>=0;--e)if(o[e]>=65535)return!0;return!1}function Al(o){return document.createElementNS("http://www.w3.org/1999/xhtml",o)}function mf(){let o=Al("canvas");return o.style.display="block",o}var kx={};function As(o){o in kx||(kx[o]=!0,console.warn(o))}var Hx=new Q().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Wx=new Q().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function qb(){let o={enabled:!0,workingColorSpace:ln,spaces:{},convert:function(i,s,r){return this.enabled===!1||s===r||!s||!r||(this.spaces[s].transfer===as&&(i.r=ti(i.r),i.g=ti(i.g),i.b=ti(i.b)),this.spaces[s].primaries!==this.spaces[r].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[r].fromXYZ)),this.spaces[r].transfer===as&&(i.r=ar(i.r),i.g=ar(i.g),i.b=ar(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===ui?Ml:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,r){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[r].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return o.define({[ln]:{primaries:e,whitePoint:n,transfer:Ml,toXYZ:Hx,fromXYZ:Wx,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:K},outputColorSpaceConfig:{drawingBufferColorSpace:K}},[K]:{primaries:e,whitePoint:n,transfer:as,toXYZ:Hx,fromXYZ:Wx,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:K}}}),o}var Ae=qb();function ti(o){return o<.04045?o*.0773993808:Math.pow(o*.9478672986+.0521327014,2.4)}function ar(o){return o<.0031308?o*12.92:1.055*Math.pow(o,.41666)-.055}var Ks,Uo=class{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ks===void 0&&(Ks=Al("canvas")),Ks.width=e.width,Ks.height=e.height;let n=Ks.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ks}return t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){let t=Al("canvas");t.width=e.width,t.height=e.height;let n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);let i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let r=0;r<s.length;r++)s[r]=ti(s[r]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){let t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(ti(t[n]/255)*255):t[n]=ti(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},Xb=0,dr=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Xb++}),this.uuid=ei(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){let t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];let n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let r=0,c=i.length;r<c;r++)i[r].isDataTexture?s.push(sd(i[r].image)):s.push(sd(i[r]))}else s=sd(i);n.url=s}return t||(e.images[this.uuid]=n),n}};function sd(o){return typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&o instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&o instanceof ImageBitmap?Uo.getDataURL(o):o.data?{data:Array.from(o.data),width:o.width,height:o.height,type:o.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var $b=0,xt=class o extends Ft{constructor(e=o.DEFAULT_IMAGE,t=o.DEFAULT_MAPPING,n=yn,i=yn,s=_t,r=hn,c=dn,a=zt,l=o.DEFAULT_ANISOTROPY,u=ui){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:$b++}),this.uuid=ei(),this.name="",this.source=new dr(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=l,this.format=c,this.internalFormat=null,this.type=a,this.offset=new H(0,0),this.repeat=new H(1,1),this.center=new H(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Q,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){let t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];let n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==va)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ii:e.x=e.x-Math.floor(e.x);break;case yn:e.x=e.x<0?0:1;break;case Di:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ii:e.y=e.y-Math.floor(e.y);break;case yn:e.y=e.y<0?0:1;break;case Di:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};xt.DEFAULT_IMAGE=null;xt.DEFAULT_MAPPING=va;xt.DEFAULT_ANISOTROPY=1;var re=class o{constructor(e=0,t=0,n=0,i=1){o.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,n=this.y,i=this.z,s=this.w,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12]*s,this.y=r[1]*t+r[5]*n+r[9]*i+r[13]*s,this.z=r[2]*t+r[6]*n+r[10]*i+r[14]*s,this.w=r[3]*t+r[7]*n+r[11]*i+r[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s,a=e.elements,l=a[0],u=a[4],h=a[8],d=a[1],f=a[5],m=a[9],g=a[2],_=a[6],x=a[10];if(Math.abs(u-d)<.01&&Math.abs(h-g)<.01&&Math.abs(m-_)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+g)<.1&&Math.abs(m+_)<.1&&Math.abs(l+f+x-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;let A=(l+1)/2,E=(f+1)/2,N=(x+1)/2,R=(u+d)/4,P=(h+g)/4,I=(m+_)/4;return A>E&&A>N?A<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(A),i=R/n,s=P/n):E>N?E<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(E),n=R/i,s=I/i):N<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(N),n=P/s,i=I/s),this.set(n,i,s,t),this}let T=Math.sqrt((_-m)*(_-m)+(h-g)*(h-g)+(d-u)*(d-u));return Math.abs(T)<.001&&(T=1),this.x=(_-m)/T,this.y=(h-g)/T,this.z=(d-u)/T,this.w=Math.acos((l+f+x-1)/2),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=se(this.x,e.x,t.x),this.y=se(this.y,e.y,t.y),this.z=se(this.z,e.z,t.z),this.w=se(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=se(this.x,e,t),this.y=se(this.y,e,t),this.z=se(this.z,e,t),this.w=se(this.w,e,t),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(se(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},Ut=class extends Ft{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new re(0,0,e,t),this.scissorTest=!1,this.viewport=new re(0,0,e,t);let i={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:_t,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);let s=new xt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];let r=n.count;for(let c=0;c<r;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=e,this.textures[i].image.height=t,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,i=e.textures.length;n<i;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0,this.textures[n].renderTarget=this;let t=Object.assign({},e.texture.image);return this.texture.source=new dr(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},Bo=class extends Ut{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}},Oo=class extends xt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Xe,this.minFilter=Xe,this.wrapR=yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}};var Bt=class{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,r,c){let a=n[i+0],l=n[i+1],u=n[i+2],h=n[i+3],d=s[r+0],f=s[r+1],m=s[r+2],g=s[r+3];if(c===0){e[t+0]=a,e[t+1]=l,e[t+2]=u,e[t+3]=h;return}if(c===1){e[t+0]=d,e[t+1]=f,e[t+2]=m,e[t+3]=g;return}if(h!==g||a!==d||l!==f||u!==m){let _=1-c,x=a*d+l*f+u*m+h*g,T=x>=0?1:-1,A=1-x*x;if(A>Number.EPSILON){let N=Math.sqrt(A),R=Math.atan2(N,x*T);_=Math.sin(_*R)/N,c=Math.sin(c*R)/N}let E=c*T;if(a=a*_+d*E,l=l*_+f*E,u=u*_+m*E,h=h*_+g*E,_===1-c){let N=1/Math.sqrt(a*a+l*l+u*u+h*h);a*=N,l*=N,u*=N,h*=N}}e[t]=a,e[t+1]=l,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,r){let c=n[i],a=n[i+1],l=n[i+2],u=n[i+3],h=s[r],d=s[r+1],f=s[r+2],m=s[r+3];return e[t]=c*m+u*h+a*f-l*d,e[t+1]=a*m+u*d+l*h-c*f,e[t+2]=l*m+u*f+c*d-a*h,e[t+3]=u*m-c*h-a*d-l*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){let n=e._x,i=e._y,s=e._z,r=e._order,c=Math.cos,a=Math.sin,l=c(n/2),u=c(i/2),h=c(s/2),d=a(n/2),f=a(i/2),m=a(s/2);switch(r){case"XYZ":this._x=d*u*h+l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h-d*f*m;break;case"YXZ":this._x=d*u*h+l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h+d*f*m;break;case"ZXY":this._x=d*u*h-l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h-d*f*m;break;case"ZYX":this._x=d*u*h-l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h+d*f*m;break;case"YZX":this._x=d*u*h+l*f*m,this._y=l*f*h+d*u*m,this._z=l*u*m-d*f*h,this._w=l*u*h-d*f*m;break;case"XZY":this._x=d*u*h-l*f*m,this._y=l*f*h-d*u*m,this._z=l*u*m+d*f*h,this._w=l*u*h+d*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+r)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,n=t[0],i=t[4],s=t[8],r=t[1],c=t[5],a=t[9],l=t[2],u=t[6],h=t[10],d=n+c+h;if(d>0){let f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-a)*f,this._y=(s-l)*f,this._z=(r-i)*f}else if(n>c&&n>h){let f=2*Math.sqrt(1+n-c-h);this._w=(u-a)/f,this._x=.25*f,this._y=(i+r)/f,this._z=(s+l)/f}else if(c>h){let f=2*Math.sqrt(1+c-n-h);this._w=(s-l)/f,this._x=(i+r)/f,this._y=.25*f,this._z=(a+u)/f}else{let f=2*Math.sqrt(1+h-n-c);this._w=(r-i)/f,this._x=(s+l)/f,this._y=(a+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(se(this.dot(e),-1,1)))}rotateTowards(e,t){let n=this.angleTo(e);if(n===0)return this;let i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let n=e._x,i=e._y,s=e._z,r=e._w,c=t._x,a=t._y,l=t._z,u=t._w;return this._x=n*u+r*c+i*l-s*a,this._y=i*u+r*a+s*c-n*l,this._z=s*u+r*l+n*a-i*c,this._w=r*u-n*c-i*a-s*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);let n=this._x,i=this._y,s=this._z,r=this._w,c=r*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=r,this._x=n,this._y=i,this._z=s,this;let a=1-c*c;if(a<=Number.EPSILON){let f=1-t;return this._w=f*r+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}let l=Math.sqrt(a),u=Math.atan2(l,c),h=Math.sin((1-t)*u)/l,d=Math.sin(t*u)/l;return this._w=r*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){let e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(e),i*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},M=class o{constructor(e=0,t=0,n=0){o.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(qx.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(qx.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,n=this.y,i=this.z,s=e.elements,r=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*r,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*r,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*r,this}applyQuaternion(e){let t=this.x,n=this.y,i=this.z,s=e.x,r=e.y,c=e.z,a=e.w,l=2*(r*i-c*n),u=2*(c*t-s*i),h=2*(s*n-r*t);return this.x=t+a*l+r*h-c*u,this.y=n+a*u+c*l-s*h,this.z=i+a*h+s*u-r*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=se(this.x,e.x,t.x),this.y=se(this.y,e.y,t.y),this.z=se(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=se(this.x,e,t),this.y=se(this.y,e,t),this.z=se(this.z,e,t),this}clampLength(e,t){let n=this.length();return this.divideScalar(n||1).multiplyScalar(se(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){let n=e.x,i=e.y,s=e.z,r=t.x,c=t.y,a=t.z;return this.x=i*a-s*c,this.y=s*r-n*a,this.z=n*c-i*r,this}projectOnVector(e){let t=e.lengthSq();if(t===0)return this.set(0,0,0);let n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return rd.copy(this).projectOnVector(e),this.sub(rd)}reflect(e){return this.sub(rd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;let n=this.dot(e)/t;return Math.acos(se(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){let i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}},rd=new M,qx=new Bt,ii=class{constructor(e=new M(1/0,1/0,1/0),t=new M(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(on.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(on.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let n=on.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);let n=e.geometry;if(n!==void 0){let s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let r=0,c=s.count;r<c;r++)e.isMesh===!0?e.getVertexPosition(r,on):on.fromBufferAttribute(s,r),on.applyMatrix4(e.matrixWorld),this.expandByPoint(on);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),nl.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),nl.copy(n.boundingBox)),nl.applyMatrix4(e.matrixWorld),this.union(nl)}let i=e.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,on),on.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Eo),il.subVectors(this.max,Eo),Zs.subVectors(e.a,Eo),js.subVectors(e.b,Eo),Qs.subVectors(e.c,Eo),bi.subVectors(js,Zs),Mi.subVectors(Qs,js),is.subVectors(Zs,Qs);let t=[0,-bi.z,bi.y,0,-Mi.z,Mi.y,0,-is.z,is.y,bi.z,0,-bi.x,Mi.z,0,-Mi.x,is.z,0,-is.x,-bi.y,bi.x,0,-Mi.y,Mi.x,0,-is.y,is.x,0];return!od(t,Zs,js,Qs,il)||(t=[1,0,0,0,1,0,0,0,1],!od(t,Zs,js,Qs,il))?!1:(sl.crossVectors(bi,Mi),t=[sl.x,sl.y,sl.z],od(t,Zs,js,Qs,il))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,on).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(on).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Xn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Xn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Xn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Xn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Xn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Xn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Xn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Xn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Xn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},Xn=[new M,new M,new M,new M,new M,new M,new M,new M],on=new M,nl=new ii,Zs=new M,js=new M,Qs=new M,bi=new M,Mi=new M,is=new M,Eo=new M,il=new M,sl=new M,ss=new M;function od(o,e,t,n,i){for(let s=0,r=o.length-3;s<=r;s+=3){ss.fromArray(o,s);let c=i.x*Math.abs(ss.x)+i.y*Math.abs(ss.y)+i.z*Math.abs(ss.z),a=e.dot(ss),l=t.dot(ss),u=n.dot(ss);if(Math.max(-Math.max(a,l,u),Math.min(a,l,u))>c)return!1}return!0}var Yb=new ii,wo=new M,ad=new M,cs=class{constructor(e=new M,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let n=this.center;t!==void 0?n.copy(t):Yb.setFromPoints(e).getCenter(n);let i=0;for(let s=0,r=e.length;s<r;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;wo.subVectors(e,this.center);let t=wo.lengthSq();if(t>this.radius*this.radius){let n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(wo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(ad.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(wo.copy(e.center).add(ad)),this.expandByPoint(wo.copy(e.center).sub(ad))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}},$n=new M,cd=new M,rl=new M,Ai=new M,ld=new M,ol=new M,ud=new M,ls=class{constructor(e=new M,t=new M(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,$n)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=$n.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):($n.copy(this.origin).addScaledVector(this.direction,t),$n.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){cd.copy(e).add(t).multiplyScalar(.5),rl.copy(t).sub(e).normalize(),Ai.copy(this.origin).sub(cd);let s=e.distanceTo(t)*.5,r=-this.direction.dot(rl),c=Ai.dot(this.direction),a=-Ai.dot(rl),l=Ai.lengthSq(),u=Math.abs(1-r*r),h,d,f,m;if(u>0)if(h=r*a-c,d=r*c-a,m=s*u,h>=0)if(d>=-m)if(d<=m){let g=1/u;h*=g,d*=g,f=h*(h+r*d+2*c)+d*(r*h+d+2*a)+l}else d=s,h=Math.max(0,-(r*d+c)),f=-h*h+d*(d+2*a)+l;else d=-s,h=Math.max(0,-(r*d+c)),f=-h*h+d*(d+2*a)+l;else d<=-m?(h=Math.max(0,-(-r*s+c)),d=h>0?-s:Math.min(Math.max(-s,-a),s),f=-h*h+d*(d+2*a)+l):d<=m?(h=0,d=Math.min(Math.max(-s,-a),s),f=d*(d+2*a)+l):(h=Math.max(0,-(r*s+c)),d=h>0?s:Math.min(Math.max(-s,-a),s),f=-h*h+d*(d+2*a)+l);else d=r>0?-s:s,h=Math.max(0,-(r*d+c)),f=-h*h+d*(d+2*a)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(cd).addScaledVector(rl,d),f}intersectSphere(e,t){$n.subVectors(e.center,this.origin);let n=$n.dot(this.direction),i=$n.dot($n)-n*n,s=e.radius*e.radius;if(i>s)return null;let r=Math.sqrt(s-i),c=n-r,a=n+r;return a<0?null:c<0?this.at(a,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;let n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){let n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,r,c,a,l=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,i=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,i=(e.min.x-d.x)*l),u>=0?(s=(e.min.y-d.y)*u,r=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,r=(e.min.y-d.y)*u),n>r||s>i||((s>n||isNaN(n))&&(n=s),(r<i||isNaN(i))&&(i=r),h>=0?(c=(e.min.z-d.z)*h,a=(e.max.z-d.z)*h):(c=(e.max.z-d.z)*h,a=(e.min.z-d.z)*h),n>a||c>i)||((c>n||n!==n)&&(n=c),(a<i||i!==i)&&(i=a),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,$n)!==null}intersectTriangle(e,t,n,i,s){ld.subVectors(t,e),ol.subVectors(n,e),ud.crossVectors(ld,ol);let r=this.direction.dot(ud),c;if(r>0){if(i)return null;c=1}else if(r<0)c=-1,r=-r;else return null;Ai.subVectors(this.origin,e);let a=c*this.direction.dot(ol.crossVectors(Ai,ol));if(a<0)return null;let l=c*this.direction.dot(ld.cross(Ai));if(l<0||a+l>r)return null;let u=-c*Ai.dot(ud);return u<0?null:this.at(u/r,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},ue=class o{constructor(e,t,n,i,s,r,c,a,l,u,h,d,f,m,g,_){o.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,r,c,a,l,u,h,d,f,m,g,_)}set(e,t,n,i,s,r,c,a,l,u,h,d,f,m,g,_){let x=this.elements;return x[0]=e,x[4]=t,x[8]=n,x[12]=i,x[1]=s,x[5]=r,x[9]=c,x[13]=a,x[2]=l,x[6]=u,x[10]=h,x[14]=d,x[3]=f,x[7]=m,x[11]=g,x[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new o().fromArray(this.elements)}copy(e){let t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){let t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,n=e.elements,i=1/Js.setFromMatrixColumn(e,0).length(),s=1/Js.setFromMatrixColumn(e,1).length(),r=1/Js.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*r,t[9]=n[9]*r,t[10]=n[10]*r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){let t=this.elements,n=e.x,i=e.y,s=e.z,r=Math.cos(n),c=Math.sin(n),a=Math.cos(i),l=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){let d=r*u,f=r*h,m=c*u,g=c*h;t[0]=a*u,t[4]=-a*h,t[8]=l,t[1]=f+m*l,t[5]=d-g*l,t[9]=-c*a,t[2]=g-d*l,t[6]=m+f*l,t[10]=r*a}else if(e.order==="YXZ"){let d=a*u,f=a*h,m=l*u,g=l*h;t[0]=d+g*c,t[4]=m*c-f,t[8]=r*l,t[1]=r*h,t[5]=r*u,t[9]=-c,t[2]=f*c-m,t[6]=g+d*c,t[10]=r*a}else if(e.order==="ZXY"){let d=a*u,f=a*h,m=l*u,g=l*h;t[0]=d-g*c,t[4]=-r*h,t[8]=m+f*c,t[1]=f+m*c,t[5]=r*u,t[9]=g-d*c,t[2]=-r*l,t[6]=c,t[10]=r*a}else if(e.order==="ZYX"){let d=r*u,f=r*h,m=c*u,g=c*h;t[0]=a*u,t[4]=m*l-f,t[8]=d*l+g,t[1]=a*h,t[5]=g*l+d,t[9]=f*l-m,t[2]=-l,t[6]=c*a,t[10]=r*a}else if(e.order==="YZX"){let d=r*a,f=r*l,m=c*a,g=c*l;t[0]=a*u,t[4]=g-d*h,t[8]=m*h+f,t[1]=h,t[5]=r*u,t[9]=-c*u,t[2]=-l*u,t[6]=f*h+m,t[10]=d-g*h}else if(e.order==="XZY"){let d=r*a,f=r*l,m=c*a,g=c*l;t[0]=a*u,t[4]=-h,t[8]=l*u,t[1]=d*h+g,t[5]=r*u,t[9]=f*h-m,t[2]=m*h-f,t[6]=c*u,t[10]=g*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Kb,e,Zb)}lookAt(e,t,n){let i=this.elements;return It.subVectors(e,t),It.lengthSq()===0&&(It.z=1),It.normalize(),Ei.crossVectors(n,It),Ei.lengthSq()===0&&(Math.abs(n.z)===1?It.x+=1e-4:It.z+=1e-4,It.normalize(),Ei.crossVectors(n,It)),Ei.normalize(),al.crossVectors(It,Ei),i[0]=Ei.x,i[4]=al.x,i[8]=It.x,i[1]=Ei.y,i[5]=al.y,i[9]=It.y,i[2]=Ei.z,i[6]=al.z,i[10]=It.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let n=e.elements,i=t.elements,s=this.elements,r=n[0],c=n[4],a=n[8],l=n[12],u=n[1],h=n[5],d=n[9],f=n[13],m=n[2],g=n[6],_=n[10],x=n[14],T=n[3],A=n[7],E=n[11],N=n[15],R=i[0],P=i[4],I=i[8],G=i[12],z=i[1],$=i[5],j=i[9],oe=i[13],xe=i[2],Ce=i[6],Si=i[10],qn=i[14],rn=i[3],Je=i[7],rt=i[11],Pt=i[15];return s[0]=r*R+c*z+a*xe+l*rn,s[4]=r*P+c*$+a*Ce+l*Je,s[8]=r*I+c*j+a*Si+l*rt,s[12]=r*G+c*oe+a*qn+l*Pt,s[1]=u*R+h*z+d*xe+f*rn,s[5]=u*P+h*$+d*Ce+f*Je,s[9]=u*I+h*j+d*Si+f*rt,s[13]=u*G+h*oe+d*qn+f*Pt,s[2]=m*R+g*z+_*xe+x*rn,s[6]=m*P+g*$+_*Ce+x*Je,s[10]=m*I+g*j+_*Si+x*rt,s[14]=m*G+g*oe+_*qn+x*Pt,s[3]=T*R+A*z+E*xe+N*rn,s[7]=T*P+A*$+E*Ce+N*Je,s[11]=T*I+A*j+E*Si+N*rt,s[15]=T*G+A*oe+E*qn+N*Pt,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],r=e[1],c=e[5],a=e[9],l=e[13],u=e[2],h=e[6],d=e[10],f=e[14],m=e[3],g=e[7],_=e[11],x=e[15];return m*(+s*a*h-i*l*h-s*c*d+n*l*d+i*c*f-n*a*f)+g*(+t*a*f-t*l*d+s*r*d-i*r*f+i*l*u-s*a*u)+_*(+t*l*h-t*c*f-s*r*h+n*r*f+s*c*u-n*l*u)+x*(-i*c*u-t*a*h+t*c*d+i*r*h-n*r*d+n*a*u)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){let i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){let e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],r=e[4],c=e[5],a=e[6],l=e[7],u=e[8],h=e[9],d=e[10],f=e[11],m=e[12],g=e[13],_=e[14],x=e[15],T=h*_*l-g*d*l+g*a*f-c*_*f-h*a*x+c*d*x,A=m*d*l-u*_*l-m*a*f+r*_*f+u*a*x-r*d*x,E=u*g*l-m*h*l+m*c*f-r*g*f-u*c*x+r*h*x,N=m*h*a-u*g*a-m*c*d+r*g*d+u*c*_-r*h*_,R=t*T+n*A+i*E+s*N;if(R===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let P=1/R;return e[0]=T*P,e[1]=(g*d*s-h*_*s-g*i*f+n*_*f+h*i*x-n*d*x)*P,e[2]=(c*_*s-g*a*s+g*i*l-n*_*l-c*i*x+n*a*x)*P,e[3]=(h*a*s-c*d*s-h*i*l+n*d*l+c*i*f-n*a*f)*P,e[4]=A*P,e[5]=(u*_*s-m*d*s+m*i*f-t*_*f-u*i*x+t*d*x)*P,e[6]=(m*a*s-r*_*s-m*i*l+t*_*l+r*i*x-t*a*x)*P,e[7]=(r*d*s-u*a*s+u*i*l-t*d*l-r*i*f+t*a*f)*P,e[8]=E*P,e[9]=(m*h*s-u*g*s-m*n*f+t*g*f+u*n*x-t*h*x)*P,e[10]=(r*g*s-m*c*s+m*n*l-t*g*l-r*n*x+t*c*x)*P,e[11]=(u*c*s-r*h*s-u*n*l+t*h*l+r*n*f-t*c*f)*P,e[12]=N*P,e[13]=(u*g*i-m*h*i+m*n*d-t*g*d-u*n*_+t*h*_)*P,e[14]=(m*c*i-r*g*i-m*n*a+t*g*a+r*n*_-t*c*_)*P,e[15]=(r*h*i-u*c*i+u*n*a-t*h*a-r*n*d+t*c*d)*P,this}scale(e){let t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let n=Math.cos(t),i=Math.sin(t),s=1-n,r=e.x,c=e.y,a=e.z,l=s*r,u=s*c;return this.set(l*r+n,l*c-i*a,l*a+i*c,0,l*c+i*a,u*c+n,u*a-i*r,0,l*a-i*c,u*a+i*r,s*a*a+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,r){return this.set(1,n,s,0,e,1,r,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){let i=this.elements,s=t._x,r=t._y,c=t._z,a=t._w,l=s+s,u=r+r,h=c+c,d=s*l,f=s*u,m=s*h,g=r*u,_=r*h,x=c*h,T=a*l,A=a*u,E=a*h,N=n.x,R=n.y,P=n.z;return i[0]=(1-(g+x))*N,i[1]=(f+E)*N,i[2]=(m-A)*N,i[3]=0,i[4]=(f-E)*R,i[5]=(1-(d+x))*R,i[6]=(_+T)*R,i[7]=0,i[8]=(m+A)*P,i[9]=(_-T)*P,i[10]=(1-(d+g))*P,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){let i=this.elements,s=Js.set(i[0],i[1],i[2]).length(),r=Js.set(i[4],i[5],i[6]).length(),c=Js.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],an.copy(this);let l=1/s,u=1/r,h=1/c;return an.elements[0]*=l,an.elements[1]*=l,an.elements[2]*=l,an.elements[4]*=u,an.elements[5]*=u,an.elements[6]*=u,an.elements[8]*=h,an.elements[9]*=h,an.elements[10]*=h,t.setFromRotationMatrix(an),n.x=s,n.y=r,n.z=c,this}makePerspective(e,t,n,i,s,r,c=gt){let a=this.elements,l=2*s/(t-e),u=2*s/(n-i),h=(t+e)/(t-e),d=(n+i)/(n-i),f,m;if(c===gt)f=-(r+s)/(r-s),m=-2*r*s/(r-s);else if(c===$t)f=-r/(r-s),m=-r*s/(r-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return a[0]=l,a[4]=0,a[8]=h,a[12]=0,a[1]=0,a[5]=u,a[9]=d,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=m,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,r,c=gt){let a=this.elements,l=1/(t-e),u=1/(n-i),h=1/(r-s),d=(t+e)*l,f=(n+i)*u,m,g;if(c===gt)m=(r+s)*h,g=-2*h;else if(c===$t)m=s*h,g=-1*h;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-d,a[1]=0,a[5]=2*u,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=g,a[14]=-m,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){let t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){let n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}},Js=new M,an=new ue,Kb=new M(0,0,0),Zb=new M(1,1,1),Ei=new M,al=new M,It=new M,Xx=new ue,$x=new Bt,Ot=class o{constructor(e=0,t=0,n=0,i=o.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){let i=e.elements,s=i[0],r=i[4],c=i[8],a=i[1],l=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(t){case"XYZ":this._y=Math.asin(se(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-se(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(c,f),this._z=Math.atan2(a,l)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(se(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-r,l)):(this._y=0,this._z=Math.atan2(a,s));break;case"ZYX":this._y=Math.asin(-se(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(a,s)):(this._x=0,this._z=Math.atan2(-r,l));break;case"YZX":this._z=Math.asin(se(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(c,f));break;case"XZY":this._z=Math.asin(-se(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Xx.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Xx,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return $x.setFromEuler(this),this.setFromQuaternion($x,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Ot.DEFAULT_ORDER="XYZ";var Vo=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},jb=0,Yx=new M,er=new Bt,Yn=new ue,cl=new M,Ro=new M,Qb=new M,Jb=new Bt,Kx=new M(1,0,0),Zx=new M(0,1,0),jx=new M(0,0,1),Qx={type:"added"},eM={type:"removed"},tr={type:"childadded",child:null},hd={type:"childremoved",child:null},ze=class o extends Ft{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:jb++}),this.uuid=ei(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=o.DEFAULT_UP.clone();let e=new M,t=new Ot,n=new Bt,i=new M(1,1,1);function s(){n.setFromEuler(t,!1)}function r(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ue},normalMatrix:{value:new Q}}),this.matrix=new ue,this.matrixWorld=new ue,this.matrixAutoUpdate=o.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=o.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Vo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return er.setFromAxisAngle(e,t),this.quaternion.multiply(er),this}rotateOnWorldAxis(e,t){return er.setFromAxisAngle(e,t),this.quaternion.premultiply(er),this}rotateX(e){return this.rotateOnAxis(Kx,e)}rotateY(e){return this.rotateOnAxis(Zx,e)}rotateZ(e){return this.rotateOnAxis(jx,e)}translateOnAxis(e,t){return Yx.copy(e).applyQuaternion(this.quaternion),this.position.add(Yx.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Kx,e)}translateY(e){return this.translateOnAxis(Zx,e)}translateZ(e){return this.translateOnAxis(jx,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Yn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?cl.copy(e):cl.set(e,t,n);let i=this.parent;this.updateWorldMatrix(!0,!1),Ro.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yn.lookAt(Ro,cl,this.up):Yn.lookAt(cl,Ro,this.up),this.quaternion.setFromRotationMatrix(Yn),i&&(Yn.extractRotation(i.matrixWorld),er.setFromRotationMatrix(Yn),this.quaternion.premultiply(er.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(Qx),tr.child=e,this.dispatchEvent(tr),tr.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}let t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(eM),hd.child=e,this.dispatchEvent(hd),hd.child=null),this}removeFromParent(){let e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Yn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Yn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Yn),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(Qx),tr.child=e,this.dispatchEvent(tr),tr.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){let r=this.children[n].getObjectByProperty(e,t);if(r!==void 0)return r}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);let i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ro,e,Qb),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ro,Jb,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){let t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){let n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){let i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){let t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});let i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,a){return c[a.uuid]===void 0&&(c[a.uuid]=a.toJSON(e)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);let c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){let a=c.shapes;if(Array.isArray(a))for(let l=0,u=a.length;l<u;l++){let h=a[l];s(e.shapes,h)}else s(e.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){let c=[];for(let a=0,l=this.material.length;a<l;a++)c.push(s(e.materials,this.material[a]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){let a=this.animations[c];i.animations.push(s(e.animations,a))}}if(t){let c=r(e.geometries),a=r(e.materials),l=r(e.textures),u=r(e.images),h=r(e.shapes),d=r(e.skeletons),f=r(e.animations),m=r(e.nodes);c.length>0&&(n.geometries=c),a.length>0&&(n.materials=a),l.length>0&&(n.textures=l),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),m.length>0&&(n.nodes=m)}return n.object=i,n;function r(c){let a=[];for(let l in c){let u=c[l];delete u.metadata,a.push(u)}return a}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){let i=e.children[n];this.add(i.clone())}return this}};ze.DEFAULT_UP=new M(0,1,0);ze.DEFAULT_MATRIX_AUTO_UPDATE=!0;ze.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;var cn=new M,Kn=new M,dd=new M,Zn=new M,nr=new M,ir=new M,Jx=new M,fd=new M,pd=new M,md=new M,gd=new re,_d=new re,xd=new re,Qn=class o{constructor(e=new M,t=new M,n=new M){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),cn.subVectors(e,t),i.cross(cn);let s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){cn.subVectors(i,t),Kn.subVectors(n,t),dd.subVectors(e,t);let r=cn.dot(cn),c=cn.dot(Kn),a=cn.dot(dd),l=Kn.dot(Kn),u=Kn.dot(dd),h=r*l-c*c;if(h===0)return s.set(0,0,0),null;let d=1/h,f=(l*a-c*u)*d,m=(r*u-c*a)*d;return s.set(1-f-m,m,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Zn)===null?!1:Zn.x>=0&&Zn.y>=0&&Zn.x+Zn.y<=1}static getInterpolation(e,t,n,i,s,r,c,a){return this.getBarycoord(e,t,n,i,Zn)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(s,Zn.x),a.addScaledVector(r,Zn.y),a.addScaledVector(c,Zn.z),a)}static getInterpolatedAttribute(e,t,n,i,s,r){return gd.setScalar(0),_d.setScalar(0),xd.setScalar(0),gd.fromBufferAttribute(e,t),_d.fromBufferAttribute(e,n),xd.fromBufferAttribute(e,i),r.setScalar(0),r.addScaledVector(gd,s.x),r.addScaledVector(_d,s.y),r.addScaledVector(xd,s.z),r}static isFrontFacing(e,t,n,i){return cn.subVectors(n,t),Kn.subVectors(e,t),cn.cross(Kn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return cn.subVectors(this.c,this.b),Kn.subVectors(this.a,this.b),cn.cross(Kn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return o.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return o.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return o.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return o.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return o.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let n=this.a,i=this.b,s=this.c,r,c;nr.subVectors(i,n),ir.subVectors(s,n),fd.subVectors(e,n);let a=nr.dot(fd),l=ir.dot(fd);if(a<=0&&l<=0)return t.copy(n);pd.subVectors(e,i);let u=nr.dot(pd),h=ir.dot(pd);if(u>=0&&h<=u)return t.copy(i);let d=a*h-u*l;if(d<=0&&a>=0&&u<=0)return r=a/(a-u),t.copy(n).addScaledVector(nr,r);md.subVectors(e,s);let f=nr.dot(md),m=ir.dot(md);if(m>=0&&f<=m)return t.copy(s);let g=f*l-a*m;if(g<=0&&l>=0&&m<=0)return c=l/(l-m),t.copy(n).addScaledVector(ir,c);let _=u*m-f*h;if(_<=0&&h-u>=0&&f-m>=0)return Jx.subVectors(s,i),c=(h-u)/(h-u+(f-m)),t.copy(i).addScaledVector(Jx,c);let x=1/(_+g+d);return r=g*x,c=d*x,t.copy(n).addScaledVector(nr,r).addScaledVector(ir,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},cy={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},wi={h:0,s:0,l:0},ll={h:0,s:0,l:0};function yd(o,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?o+(e-o)*6*t:t<1/2?e:t<2/3?o+(e-o)*6*(2/3-t):o}var q=class{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){let i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=K){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ae.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ae.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ae.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ae.workingColorSpace){if(e=pf(e,1),t=se(t,0,1),n=se(n,0,1),t===0)this.r=this.g=this.b=n;else{let s=n<=.5?n*(1+t):n+t-n*t,r=2*n-s;this.r=yd(r,s,e+1/3),this.g=yd(r,s,e),this.b=yd(r,s,e-1/3)}return Ae.toWorkingColorSpace(this,i),this}setStyle(e,t=K){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s,r=i[1],c=i[2];switch(r){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){let s=i[1],r=s.length;if(r===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(r===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=K){let n=cy[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ti(e.r),this.g=ti(e.g),this.b=ti(e.b),this}copyLinearToSRGB(e){return this.r=ar(e.r),this.g=ar(e.g),this.b=ar(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=K){return Ae.fromWorkingColorSpace(at.copy(this),e),Math.round(se(at.r*255,0,255))*65536+Math.round(se(at.g*255,0,255))*256+Math.round(se(at.b*255,0,255))}getHexString(e=K){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ae.workingColorSpace){Ae.fromWorkingColorSpace(at.copy(this),t);let n=at.r,i=at.g,s=at.b,r=Math.max(n,i,s),c=Math.min(n,i,s),a,l,u=(c+r)/2;if(c===r)a=0,l=0;else{let h=r-c;switch(l=u<=.5?h/(r+c):h/(2-r-c),r){case n:a=(i-s)/h+(i<s?6:0);break;case i:a=(s-n)/h+2;break;case s:a=(n-i)/h+4;break}a/=6}return e.h=a,e.s=l,e.l=u,e}getRGB(e,t=Ae.workingColorSpace){return Ae.fromWorkingColorSpace(at.copy(this),t),e.r=at.r,e.g=at.g,e.b=at.b,e}getStyle(e=K){Ae.fromWorkingColorSpace(at.copy(this),e);let t=at.r,n=at.g,i=at.b;return e!==K?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(wi),this.setHSL(wi.h+e,wi.s+t,wi.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(wi),e.getHSL(ll);let n=Do(wi.h,ll.h,t),i=Do(wi.s,ll.s,t),s=Do(wi.l,ll.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){let t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}},at=new q;q.NAMES=cy;var tM=0,Ze=class extends Ft{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:tM++}),this.uuid=ei(),this.name="",this.type="Material",this.blending=Tn,this.side=Ni,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=cr,this.blendDst=lr,this.blendEquation=Sn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new q(0,0,0),this.blendAlpha=0,this.depthFunc=Pi,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Fo,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=jn,this.stencilZFail=jn,this.stencilZPass=jn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(let t in e){let n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}let i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){let t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});let n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Tn&&(n.blending=this.blending),this.side!==Ni&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==cr&&(n.blendSrc=this.blendSrc),this.blendDst!==lr&&(n.blendDst=this.blendDst),this.blendEquation!==Sn&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Pi&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Fo&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==jn&&(n.stencilFail=this.stencilFail),this.stencilZFail!==jn&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==jn&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){let r=[];for(let c in s){let a=s[c];delete a.metadata,r.push(a)}return r}if(t){let s=i(e.textures),r=i(e.images);s.length>0&&(n.textures=s),r.length>0&&(n.images=r)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,n=null;if(t!==null){let i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},us=class extends Ze{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new q(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ot,this.combine=Vr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}},Jn=nM();function nM(){let o=new ArrayBuffer(4),e=new Float32Array(o),t=new Uint32Array(o),n=new Uint32Array(512),i=new Uint32Array(512);for(let a=0;a<256;++a){let l=a-127;l<-27?(n[a]=0,n[a|256]=32768,i[a]=24,i[a|256]=24):l<-14?(n[a]=1024>>-l-14,n[a|256]=1024>>-l-14|32768,i[a]=-l-1,i[a|256]=-l-1):l<=15?(n[a]=l+15<<10,n[a|256]=l+15<<10|32768,i[a]=13,i[a|256]=13):l<128?(n[a]=31744,n[a|256]=64512,i[a]=24,i[a|256]=24):(n[a]=31744,n[a|256]=64512,i[a]=13,i[a|256]=13)}let s=new Uint32Array(2048),r=new Uint32Array(64),c=new Uint32Array(64);for(let a=1;a<1024;++a){let l=a<<13,u=0;for(;(l&8388608)===0;)l<<=1,u-=8388608;l&=-8388609,u+=947912704,s[a]=l|u}for(let a=1024;a<2048;++a)s[a]=939524096+(a-1024<<13);for(let a=1;a<31;++a)r[a]=a<<23;r[31]=1199570944,r[32]=2147483648;for(let a=33;a<63;++a)r[a]=2147483648+(a-32<<23);r[63]=3347054592;for(let a=1;a<64;++a)a!==32&&(c[a]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:r,offsetTable:c}}function Dt(o){Math.abs(o)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),o=se(o,-65504,65504),Jn.floatView[0]=o;let e=Jn.uint32View[0],t=e>>23&511;return Jn.baseTable[t]+((e&8388607)>>Jn.shiftTable[t])}function ul(o){let e=o>>10;return Jn.uint32View[0]=Jn.mantissaTable[Jn.offsetTable[e]+(o&1023)]+Jn.exponentTable[e],Jn.floatView[0]}var Ge=new M,hl=new H,iM=0,et=class{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:iM++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=hr,this.updateRanges=[],this.gpuType=yt,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)hl.fromBufferAttribute(this,t),hl.applyMatrix3(e),this.setXY(t,hl.x,hl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ge.fromBufferAttribute(this,t),Ge.applyMatrix3(e),this.setXYZ(t,Ge.x,Ge.y,Ge.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ge.fromBufferAttribute(this,t),Ge.applyMatrix4(e),this.setXYZ(t,Ge.x,Ge.y,Ge.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ge.fromBufferAttribute(this,t),Ge.applyNormalMatrix(e),this.setXYZ(t,Ge.x,Ge.y,Ge.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ge.fromBufferAttribute(this,t),Ge.transformDirection(e),this.setXYZ(t,Ge.x,Ge.y,Ge.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=mt(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ie(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=mt(t,this.array)),t}setX(e,t){return this.normalized&&(t=ie(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=mt(t,this.array)),t}setY(e,t){return this.normalized&&(t=ie(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=mt(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ie(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=mt(t,this.array)),t}setW(e,t){return this.normalized&&(t=ie(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array),i=ie(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array),i=ie(i,this.array),s=ie(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==hr&&(e.usage=this.usage),e}};var fr=class extends et{constructor(e,t,n){super(new Uint16Array(e),t,n)}};var pr=class extends et{constructor(e,t,n){super(new Uint32Array(e),t,n)}},mr=class extends et{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=ul(this.array[e*this.itemSize]);return this.normalized&&(t=mt(t,this.array)),t}setX(e,t){return this.normalized&&(t=ie(t,this.array)),this.array[e*this.itemSize]=Dt(t),this}getY(e){let t=ul(this.array[e*this.itemSize+1]);return this.normalized&&(t=mt(t,this.array)),t}setY(e,t){return this.normalized&&(t=ie(t,this.array)),this.array[e*this.itemSize+1]=Dt(t),this}getZ(e){let t=ul(this.array[e*this.itemSize+2]);return this.normalized&&(t=mt(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ie(t,this.array)),this.array[e*this.itemSize+2]=Dt(t),this}getW(e){let t=ul(this.array[e*this.itemSize+3]);return this.normalized&&(t=mt(t,this.array)),t}setW(e,t){return this.normalized&&(t=ie(t,this.array)),this.array[e*this.itemSize+3]=Dt(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array)),this.array[e+0]=Dt(t),this.array[e+1]=Dt(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array),i=ie(i,this.array)),this.array[e+0]=Dt(t),this.array[e+1]=Dt(n),this.array[e+2]=Dt(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array),i=ie(i,this.array),s=ie(s,this.array)),this.array[e+0]=Dt(t),this.array[e+1]=Dt(n),this.array[e+2]=Dt(i),this.array[e+3]=Dt(s),this}},ct=class extends et{constructor(e,t,n){super(new Float32Array(e),t,n)}},sM=0,Xt=new ue,vd=new ze,sr=new M,Lt=new ii,Co=new ii,Ke=new M,bn=class o extends Ft{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:sM++}),this.uuid=ei(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(tu(e)?pr:fr)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);let n=this.attributes.normal;if(n!==void 0){let s=new Q().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}let i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Xt.makeRotationFromQuaternion(e),this.applyMatrix4(Xt),this}rotateX(e){return Xt.makeRotationX(e),this.applyMatrix4(Xt),this}rotateY(e){return Xt.makeRotationY(e),this.applyMatrix4(Xt),this}rotateZ(e){return Xt.makeRotationZ(e),this.applyMatrix4(Xt),this}translate(e,t,n){return Xt.makeTranslation(e,t,n),this.applyMatrix4(Xt),this}scale(e,t,n){return Xt.makeScale(e,t,n),this.applyMatrix4(Xt),this}lookAt(e){return vd.lookAt(e),vd.updateMatrix(),this.applyMatrix4(vd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(sr).negate(),this.translate(sr.x,sr.y,sr.z),this}setFromPoints(e){let t=this.getAttribute("position");if(t===void 0){let n=[];for(let i=0,s=e.length;i<s;i++){let r=e[i];n.push(r.x,r.y,r.z||0)}this.setAttribute("position",new ct(n,3))}else{let n=Math.min(e.length,t.count);for(let i=0;i<n;i++){let s=e[i];t.setXYZ(i,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ii);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new M(-1/0,-1/0,-1/0),new M(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){let s=t[n];Lt.setFromBufferAttribute(s),this.morphTargetsRelative?(Ke.addVectors(this.boundingBox.min,Lt.min),this.boundingBox.expandByPoint(Ke),Ke.addVectors(this.boundingBox.max,Lt.max),this.boundingBox.expandByPoint(Ke)):(this.boundingBox.expandByPoint(Lt.min),this.boundingBox.expandByPoint(Lt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new cs);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new M,1/0);return}if(e){let n=this.boundingSphere.center;if(Lt.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){let c=t[s];Co.setFromBufferAttribute(c),this.morphTargetsRelative?(Ke.addVectors(Lt.min,Co.min),Lt.expandByPoint(Ke),Ke.addVectors(Lt.max,Co.max),Lt.expandByPoint(Ke)):(Lt.expandByPoint(Co.min),Lt.expandByPoint(Co.max))}Lt.getCenter(n);let i=0;for(let s=0,r=e.count;s<r;s++)Ke.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Ke));if(t)for(let s=0,r=t.length;s<r;s++){let c=t[s],a=this.morphTargetsRelative;for(let l=0,u=c.count;l<u;l++)Ke.fromBufferAttribute(c,l),a&&(sr.fromBufferAttribute(e,l),Ke.add(sr)),i=Math.max(i,n.distanceToSquared(Ke))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let n=t.position,i=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new et(new Float32Array(4*n.count),4));let r=this.getAttribute("tangent"),c=[],a=[];for(let I=0;I<n.count;I++)c[I]=new M,a[I]=new M;let l=new M,u=new M,h=new M,d=new H,f=new H,m=new H,g=new M,_=new M;function x(I,G,z){l.fromBufferAttribute(n,I),u.fromBufferAttribute(n,G),h.fromBufferAttribute(n,z),d.fromBufferAttribute(s,I),f.fromBufferAttribute(s,G),m.fromBufferAttribute(s,z),u.sub(l),h.sub(l),f.sub(d),m.sub(d);let $=1/(f.x*m.y-m.x*f.y);isFinite($)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(h,-f.y).multiplyScalar($),_.copy(h).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar($),c[I].add(g),c[G].add(g),c[z].add(g),a[I].add(_),a[G].add(_),a[z].add(_))}let T=this.groups;T.length===0&&(T=[{start:0,count:e.count}]);for(let I=0,G=T.length;I<G;++I){let z=T[I],$=z.start,j=z.count;for(let oe=$,xe=$+j;oe<xe;oe+=3)x(e.getX(oe+0),e.getX(oe+1),e.getX(oe+2))}let A=new M,E=new M,N=new M,R=new M;function P(I){N.fromBufferAttribute(i,I),R.copy(N);let G=c[I];A.copy(G),A.sub(N.multiplyScalar(N.dot(G))).normalize(),E.crossVectors(R,G);let $=E.dot(a[I])<0?-1:1;r.setXYZW(I,A.x,A.y,A.z,$)}for(let I=0,G=T.length;I<G;++I){let z=T[I],$=z.start,j=z.count;for(let oe=$,xe=$+j;oe<xe;oe+=3)P(e.getX(oe+0)),P(e.getX(oe+1)),P(e.getX(oe+2))}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new et(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);let i=new M,s=new M,r=new M,c=new M,a=new M,l=new M,u=new M,h=new M;if(e)for(let d=0,f=e.count;d<f;d+=3){let m=e.getX(d+0),g=e.getX(d+1),_=e.getX(d+2);i.fromBufferAttribute(t,m),s.fromBufferAttribute(t,g),r.fromBufferAttribute(t,_),u.subVectors(r,s),h.subVectors(i,s),u.cross(h),c.fromBufferAttribute(n,m),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,_),c.add(u),a.add(u),l.add(u),n.setXYZ(m,c.x,c.y,c.z),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(_,l.x,l.y,l.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),r.fromBufferAttribute(t,d+2),u.subVectors(r,s),h.subVectors(i,s),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){let e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Ke.fromBufferAttribute(e,t),Ke.normalize(),e.setXYZ(t,Ke.x,Ke.y,Ke.z)}toNonIndexed(){function e(c,a){let l=c.array,u=c.itemSize,h=c.normalized,d=new l.constructor(a.length*u),f=0,m=0;for(let g=0,_=a.length;g<_;g++){c.isInterleavedBufferAttribute?f=a[g]*c.data.stride+c.offset:f=a[g]*u;for(let x=0;x<u;x++)d[m++]=l[f++]}return new et(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new o,n=this.index.array,i=this.attributes;for(let c in i){let a=i[c],l=e(a,n);t.setAttribute(c,l)}let s=this.morphAttributes;for(let c in s){let a=[],l=s[c];for(let u=0,h=l.length;u<h;u++){let d=l[u],f=e(d,n);a.push(f)}t.morphAttributes[c]=a}t.morphTargetsRelative=this.morphTargetsRelative;let r=this.groups;for(let c=0,a=r.length;c<a;c++){let l=r[c];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){let e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){let a=this.parameters;for(let l in a)a[l]!==void 0&&(e[l]=a[l]);return e}e.data={attributes:{}};let t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});let n=this.attributes;for(let a in n){let l=n[a];e.data.attributes[a]=l.toJSON(e.data)}let i={},s=!1;for(let a in this.morphAttributes){let l=this.morphAttributes[a],u=[];for(let h=0,d=l.length;h<d;h++){let f=l[h];u.push(f.toJSON(e.data))}u.length>0&&(i[a]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);let r=this.groups;r.length>0&&(e.data.groups=JSON.parse(JSON.stringify(r)));let c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let n=e.index;n!==null&&this.setIndex(n.clone(t));let i=e.attributes;for(let l in i){let u=i[l];this.setAttribute(l,u.clone(t))}let s=e.morphAttributes;for(let l in s){let u=[],h=s[l];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[l]=u}this.morphTargetsRelative=e.morphTargetsRelative;let r=e.groups;for(let l=0,u=r.length;l<u;l++){let h=r[l];this.addGroup(h.start,h.count,h.materialIndex)}let c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());let a=e.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}},ey=new ue,rs=new ls,dl=new cs,ty=new M,fl=new M,pl=new M,ml=new M,Td=new M,gl=new M,ny=new M,_l=new M,Vt=class extends ze{constructor(e=new bn,t=new us){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){let t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){let i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){let c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){let n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,r=n.morphTargetsRelative;t.fromBufferAttribute(i,e);let c=this.morphTargetInfluences;if(s&&c){gl.set(0,0,0);for(let a=0,l=s.length;a<l;a++){let u=c[a],h=s[a];u!==0&&(Td.fromBufferAttribute(h,e),r?gl.addScaledVector(Td,u):gl.addScaledVector(Td.sub(t),u))}t.add(gl)}return t}raycast(e,t){let n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),dl.copy(n.boundingSphere),dl.applyMatrix4(s),rs.copy(e.ray).recast(e.near),!(dl.containsPoint(rs.origin)===!1&&(rs.intersectSphere(dl,ty)===null||rs.origin.distanceToSquared(ty)>(e.far-e.near)**2))&&(ey.copy(s).invert(),rs.copy(e.ray).applyMatrix4(ey),!(n.boundingBox!==null&&rs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,rs)))}_computeIntersections(e,t,n){let i,s=this.geometry,r=this.material,c=s.index,a=s.attributes.position,l=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,d=s.groups,f=s.drawRange;if(c!==null)if(Array.isArray(r))for(let m=0,g=d.length;m<g;m++){let _=d[m],x=r[_.materialIndex],T=Math.max(_.start,f.start),A=Math.min(c.count,Math.min(_.start+_.count,f.start+f.count));for(let E=T,N=A;E<N;E+=3){let R=c.getX(E),P=c.getX(E+1),I=c.getX(E+2);i=xl(this,x,e,n,l,u,h,R,P,I),i&&(i.faceIndex=Math.floor(E/3),i.face.materialIndex=_.materialIndex,t.push(i))}}else{let m=Math.max(0,f.start),g=Math.min(c.count,f.start+f.count);for(let _=m,x=g;_<x;_+=3){let T=c.getX(_),A=c.getX(_+1),E=c.getX(_+2);i=xl(this,r,e,n,l,u,h,T,A,E),i&&(i.faceIndex=Math.floor(_/3),t.push(i))}}else if(a!==void 0)if(Array.isArray(r))for(let m=0,g=d.length;m<g;m++){let _=d[m],x=r[_.materialIndex],T=Math.max(_.start,f.start),A=Math.min(a.count,Math.min(_.start+_.count,f.start+f.count));for(let E=T,N=A;E<N;E+=3){let R=E,P=E+1,I=E+2;i=xl(this,x,e,n,l,u,h,R,P,I),i&&(i.faceIndex=Math.floor(E/3),i.face.materialIndex=_.materialIndex,t.push(i))}}else{let m=Math.max(0,f.start),g=Math.min(a.count,f.start+f.count);for(let _=m,x=g;_<x;_+=3){let T=_,A=_+1,E=_+2;i=xl(this,r,e,n,l,u,h,T,A,E),i&&(i.faceIndex=Math.floor(_/3),t.push(i))}}}};function rM(o,e,t,n,i,s,r,c){let a;if(e.side===St?a=n.intersectTriangle(r,s,i,!0,c):a=n.intersectTriangle(i,s,r,e.side===Ni,c),a===null)return null;_l.copy(c),_l.applyMatrix4(o.matrixWorld);let l=t.ray.origin.distanceTo(_l);return l<t.near||l>t.far?null:{distance:l,point:_l.clone(),object:o}}function xl(o,e,t,n,i,s,r,c,a,l){o.getVertexPosition(c,fl),o.getVertexPosition(a,pl),o.getVertexPosition(l,ml);let u=rM(o,e,t,n,fl,pl,ml,ny);if(u){let h=new M;Qn.getBarycoord(ny,fl,pl,ml,h),i&&(u.uv=Qn.getInterpolatedAttribute(i,c,a,l,h,new H)),s&&(u.uv1=Qn.getInterpolatedAttribute(s,c,a,l,h,new H)),r&&(u.normal=Qn.getInterpolatedAttribute(r,c,a,l,h,new M),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));let d={a:c,b:a,c:l,normal:new M,materialIndex:0};Qn.getNormal(fl,pl,ml,d.normal),u.face=d,u.barycoord=h}return u}var hs=class o extends bn{constructor(e=1,t=1,n=1,i=1,s=1,r=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:r};let c=this;i=Math.floor(i),s=Math.floor(s),r=Math.floor(r);let a=[],l=[],u=[],h=[],d=0,f=0;m("z","y","x",-1,-1,n,t,e,r,s,0),m("z","y","x",1,-1,n,t,-e,r,s,1),m("x","z","y",1,1,e,n,t,i,r,2),m("x","z","y",1,-1,e,n,-t,i,r,3),m("x","y","z",1,-1,e,t,n,i,s,4),m("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(a),this.setAttribute("position",new ct(l,3)),this.setAttribute("normal",new ct(u,3)),this.setAttribute("uv",new ct(h,2));function m(g,_,x,T,A,E,N,R,P,I,G){let z=E/P,$=N/I,j=E/2,oe=N/2,xe=R/2,Ce=P+1,Si=I+1,qn=0,rn=0,Je=new M;for(let rt=0;rt<Si;rt++){let Pt=rt*$-oe;for(let Ys=0;Ys<Ce;Ys++){let tl=Ys*z-j;Je[g]=tl*T,Je[_]=Pt*A,Je[x]=xe,l.push(Je.x,Je.y,Je.z),Je[g]=0,Je[_]=0,Je[x]=R>0?1:-1,u.push(Je.x,Je.y,Je.z),h.push(Ys/P),h.push(1-rt/I),qn+=1}}for(let rt=0;rt<I;rt++)for(let Pt=0;Pt<P;Pt++){let Ys=d+Pt+Ce*rt,tl=d+Pt+Ce*(rt+1),Rb=d+(Pt+1)+Ce*(rt+1),Gx=d+(Pt+1)+Ce*rt;a.push(Ys,tl,Gx),a.push(tl,Rb,Gx),rn+=6}c.addGroup(f,rn,G),f+=rn,d+=qn}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new o(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function nu(o){let e={};for(let t in o){e[t]={};for(let n in o[t]){let i=o[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function vt(o){let e={};for(let t=0;t<o.length;t++){let n=nu(o[t]);for(let i in n)e[i]=n[i]}return e}function oM(o){let e=[];for(let t=0;t<o.length;t++)e.push(o[t].clone());return e}var aM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,cM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,Go=class extends Ze{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=aM,this.fragmentShader=cM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=nu(e.uniforms),this.uniformsGroups=oM(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(let i in this.uniforms){let r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;let n={};for(let i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}},ds=class extends ze{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ue,this.projectionMatrix=new ue,this.projectionMatrixInverse=new ue,this.coordinateSystem=gt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},Ri=new M,iy=new H,sy=new H,qe=class extends ds{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=Li*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(Io*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Li*2*Math.atan(Math.tan(Io*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Ri.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Ri.x,Ri.y).multiplyScalar(-e/Ri.z),Ri.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Ri.x,Ri.y).multiplyScalar(-e/Ri.z)}getViewSize(e,t){return this.getViewBounds(e,iy,sy),t.subVectors(sy,iy)}setViewOffset(e,t,n,i,s,r){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(Io*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i,r=this.view;if(this.view!==null&&this.view.enabled){let a=r.fullWidth,l=r.fullHeight;s+=r.offsetX*i/a,t-=r.offsetY*n/l,i*=r.width/a,n*=r.height/l}let c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}},rr=-90,or=1,gr=class extends ze{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;let i=new qe(rr,or,e,t);i.layers=this.layers,this.add(i);let s=new qe(rr,or,e,t);s.layers=this.layers,this.add(s);let r=new qe(rr,or,e,t);r.layers=this.layers,this.add(r);let c=new qe(rr,or,e,t);c.layers=this.layers,this.add(c);let a=new qe(rr,or,e,t);a.layers=this.layers,this.add(a);let l=new qe(rr,or,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){let e=this.coordinateSystem,t=this.children.concat(),[n,i,s,r,c,a]=t;for(let l of t)this.remove(l);if(e===gt)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),a.up.set(0,1,0),a.lookAt(0,0,-1);else if(e===$t)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),a.up.set(0,-1,0),a.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(let l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();let{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());let[s,r,c,a,l,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),m=e.xr.enabled;e.xr.enabled=!1;let g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,r),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,a),e.setRenderTarget(n,4,i),e.render(t,l),n.texture.generateMipmaps=g,e.setRenderTarget(n,5,i),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=m,n.texture.needsPMREMUpdate=!0}},fs=class extends xt{constructor(e,t,n,i,s,r,c,a,l,u){e=e!==void 0?e:[],t=t!==void 0?t:li,super(e,t,n,i,s,r,c,a,l,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},zo=class extends Bo{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;let n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new fs(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:_t}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new hs(5,5,5),s=new Go({name:"CubemapFromEquirect",uniforms:nu(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:St,blending:Bi});s.uniforms.tEquirect.value=t;let r=new Vt(i,s),c=t.minFilter;return t.minFilter===hn&&(t.minFilter=_t),new gr(1,10,this).update(e,r),t.minFilter=c,r.geometry.dispose(),r.material.dispose(),this}clear(e,t,n,i){let s=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(s)}},Ci=class extends ze{constructor(){super(),this.isGroup=!0,this.type="Group"}},lM={type:"move"},ko=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ci,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ci,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new M,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new M),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ci,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new M,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new M),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){let t=this._hand;if(t)for(let n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,r=null,c=this._targetRay,a=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){r=!0;for(let g of e.hand.values()){let _=t.getJointPose(g,n),x=this._getHandJoint(l,g);_!==null&&(x.matrix.fromArray(_.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.matrixWorldNeedsUpdate=!0,x.jointRadius=_.radius),x.visible=_!==null}let u=l.joints["index-finger-tip"],h=l.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,m=.005;l.inputState.pinching&&d>f+m?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&d<=f-m&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else a!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(lM)))}return c!==null&&(c.visible=i!==null),a!==null&&(a.visible=s!==null),l!==null&&(l.visible=r!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){let n=new Ci;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}};var si=class extends ze{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ot,this.environmentIntensity=1,this.environmentRotation=new Ot,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}},_r=class{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=hr,this.updateRanges=[],this.version=0,this.uuid=ei()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ei()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ei()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}},pt=new M,Ho=class o{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)pt.fromBufferAttribute(this,t),pt.applyMatrix4(e),this.setXYZ(t,pt.x,pt.y,pt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)pt.fromBufferAttribute(this,t),pt.applyNormalMatrix(e),this.setXYZ(t,pt.x,pt.y,pt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)pt.fromBufferAttribute(this,t),pt.transformDirection(e),this.setXYZ(t,pt.x,pt.y,pt.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=mt(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ie(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ie(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ie(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ie(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ie(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=mt(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=mt(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=mt(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=mt(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array),i=ie(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ie(t,this.array),n=ie(n,this.array),i=ie(i,this.array),s=ie(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");let t=[];for(let n=0;n<this.count;n++){let i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new et(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new o(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");let t=[];for(let n=0;n<this.count;n++){let i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}},Wo=class extends Ze{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new q(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}};var qo=class extends xt{constructor(e=null,t=1,n=1,i,s,r,c,a,l=Xe,u=Xe,h,d){super(null,r,c,a,l,u,i,s,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};var ps=class extends et{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}};var Sd=new M,uM=new M,hM=new Q,Tt=class{constructor(e=new M(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){let i=Sd.subVectors(n,t).cross(uM.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){let n=e.delta(Sd),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;let s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){let t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let n=t||hM.getNormalMatrix(e),i=this.coplanarPoint(Sd).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}},os=new cs,yl=new M,xr=class{constructor(e=new Tt,t=new Tt,n=new Tt,i=new Tt,s=new Tt,r=new Tt){this.planes=[e,t,n,i,s,r]}set(e,t,n,i,s,r){let c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(r),this}copy(e){let t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=gt){let n=this.planes,i=e.elements,s=i[0],r=i[1],c=i[2],a=i[3],l=i[4],u=i[5],h=i[6],d=i[7],f=i[8],m=i[9],g=i[10],_=i[11],x=i[12],T=i[13],A=i[14],E=i[15];if(n[0].setComponents(a-s,d-l,_-f,E-x).normalize(),n[1].setComponents(a+s,d+l,_+f,E+x).normalize(),n[2].setComponents(a+r,d+u,_+m,E+T).normalize(),n[3].setComponents(a-r,d-u,_-m,E-T).normalize(),n[4].setComponents(a-c,d-h,_-g,E-A).normalize(),t===gt)n[5].setComponents(a+c,d+h,_+g,E+A).normalize();else if(t===$t)n[5].setComponents(c,h,g,A).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),os.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{let t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),os.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(os)}intersectsSprite(e){return os.center.set(0,0,0),os.radius=.7071067811865476,os.applyMatrix4(e.matrixWorld),this.intersectsSphere(os)}intersectsSphere(e){let t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){let t=this.planes;for(let n=0;n<6;n++){let i=t[n];if(yl.x=i.normal.x>0?e.max.x:e.min.x,yl.y=i.normal.y>0?e.max.y:e.min.y,yl.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(yl)<0)return!1}return!0}containsPoint(e){let t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};var yr=class extends Ze{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new q(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}};var Xo=class extends Ze{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new q(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}};var vr=class extends xt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Xe,this.minFilter=Xe,this.generateMipmaps=!1,this.needsUpdate=!0}};var Yt=class extends xt{constructor(e,t,n,i,s,r,c,a,l,u=vn){if(u!==vn&&u!==ni)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===vn&&(n=ke),n===void 0&&u===ni&&(n=zi),super(null,i,s,r,c,a,u,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Xe,this.minFilter=a!==void 0?a:Xe,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){let t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}};var $o=class o extends bn{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};let s=[],r=[];c(i),l(n),u(),this.setAttribute("position",new ct(s,3)),this.setAttribute("normal",new ct(s.slice(),3)),this.setAttribute("uv",new ct(r,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(T){let A=new M,E=new M,N=new M;for(let R=0;R<t.length;R+=3)f(t[R+0],A),f(t[R+1],E),f(t[R+2],N),a(A,E,N,T)}function a(T,A,E,N){let R=N+1,P=[];for(let I=0;I<=R;I++){P[I]=[];let G=T.clone().lerp(E,I/R),z=A.clone().lerp(E,I/R),$=R-I;for(let j=0;j<=$;j++)j===0&&I===R?P[I][j]=G:P[I][j]=G.clone().lerp(z,j/$)}for(let I=0;I<R;I++)for(let G=0;G<2*(R-I)-1;G++){let z=Math.floor(G/2);G%2===0?(d(P[I][z+1]),d(P[I+1][z]),d(P[I][z])):(d(P[I][z+1]),d(P[I+1][z+1]),d(P[I+1][z]))}}function l(T){let A=new M;for(let E=0;E<s.length;E+=3)A.x=s[E+0],A.y=s[E+1],A.z=s[E+2],A.normalize().multiplyScalar(T),s[E+0]=A.x,s[E+1]=A.y,s[E+2]=A.z}function u(){let T=new M;for(let A=0;A<s.length;A+=3){T.x=s[A+0],T.y=s[A+1],T.z=s[A+2];let E=_(T)/2/Math.PI+.5,N=x(T)/Math.PI+.5;r.push(E,1-N)}m(),h()}function h(){for(let T=0;T<r.length;T+=6){let A=r[T+0],E=r[T+2],N=r[T+4],R=Math.max(A,E,N),P=Math.min(A,E,N);R>.9&&P<.1&&(A<.2&&(r[T+0]+=1),E<.2&&(r[T+2]+=1),N<.2&&(r[T+4]+=1))}}function d(T){s.push(T.x,T.y,T.z)}function f(T,A){let E=T*3;A.x=e[E+0],A.y=e[E+1],A.z=e[E+2]}function m(){let T=new M,A=new M,E=new M,N=new M,R=new H,P=new H,I=new H;for(let G=0,z=0;G<s.length;G+=9,z+=6){T.set(s[G+0],s[G+1],s[G+2]),A.set(s[G+3],s[G+4],s[G+5]),E.set(s[G+6],s[G+7],s[G+8]),R.set(r[z+0],r[z+1]),P.set(r[z+2],r[z+3]),I.set(r[z+4],r[z+5]),N.copy(T).add(A).add(E).divideScalar(3);let $=_(N);g(R,z+0,T,$),g(P,z+2,A,$),g(I,z+4,E,$)}}function g(T,A,E,N){N<0&&T.x===1&&(r[A]=T.x-1),E.x===0&&E.z===0&&(r[A]=N/2/Math.PI+.5)}function _(T){return Math.atan2(T.z,-T.x)}function x(T){return Math.atan2(-T.y,Math.sqrt(T.x*T.x+T.z*T.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new o(e.vertices,e.indices,e.radius,e.details)}};var Tr=class o extends $o{constructor(e=1,t=0){let n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new o(e.radius,e.detail)}};var Yo=class o extends bn{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,r=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:r,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));let a=Math.min(r+c,Math.PI),l=0,u=[],h=new M,d=new M,f=[],m=[],g=[],_=[];for(let x=0;x<=n;x++){let T=[],A=x/n,E=0;x===0&&r===0?E=.5/t:x===n&&a===Math.PI&&(E=-.5/t);for(let N=0;N<=t;N++){let R=N/t;h.x=-e*Math.cos(i+R*s)*Math.sin(r+A*c),h.y=e*Math.cos(r+A*c),h.z=e*Math.sin(i+R*s)*Math.sin(r+A*c),m.push(h.x,h.y,h.z),d.copy(h).normalize(),g.push(d.x,d.y,d.z),_.push(R+E,1-A),T.push(l++)}u.push(T)}for(let x=0;x<n;x++)for(let T=0;T<t;T++){let A=u[x][T+1],E=u[x][T],N=u[x+1][T],R=u[x+1][T+1];(x!==0||r>0)&&f.push(A,E,R),(x!==n-1||a<Math.PI)&&f.push(E,N,R)}this.setIndex(f),this.setAttribute("position",new ct(m,3)),this.setAttribute("normal",new ct(g,3)),this.setAttribute("uv",new ct(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new o(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}};var Ko=class extends Ze{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new q(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}};var Sr=class extends Ze{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new q(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new q(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mn,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ot,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},Zo=class extends Sr{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new H(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return se(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new q(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new q(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new q(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}},jo=class extends Ze{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new q(16777215),this.specular=new q(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new q(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mn,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ot,this.combine=Vr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}},Qo=class extends Ze{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new q(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new q(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mn,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}},Jo=class extends Ze{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mn,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}},ea=class extends Ze{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new q(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new q(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mn,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ot,this.combine=Vr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}};var ta=class extends Ze{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new q(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mn,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}},na=class extends yr{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}};function vl(o,e,t){return!o||!t&&o.constructor===e?o:typeof e.BYTES_PER_ELEMENT=="number"?new e(o):Array.prototype.slice.call(o)}function dM(o){return ArrayBuffer.isView(o)&&!(o instanceof DataView)}var Fi=class{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,n=this._cachedIndex,i=t[n],s=t[n-1];n:{e:{let r;t:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break e}r=t.length;break t}if(!(e>=s)){let c=t[1];e<c&&(n=2,s=c);for(let a=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===a)break;if(i=s,s=t[--n-1],e>=s)break e}r=n,n=0;break t}break n}for(;n<r;){let c=n+r>>>1;e<t[c]?r=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let r=0;r!==i;++r)t[r]=n[s+r];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}},ia=class extends Fi{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Tl,endingEnd:Tl}}intervalChanged_(e,t,n){let i=this.parameterPositions,s=e-2,r=e+1,c=i[s],a=i[r];if(c===void 0)switch(this.getSettings_().endingStart){case Sl:s=e,c=2*t-n;break;case bl:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(a===void 0)switch(this.getSettings_().endingEnd){case Sl:r=e,a=2*n-t;break;case bl:r=1,a=n+i[1]-i[0];break;default:r=e-1,a=t}let l=(n-t)*.5,u=this.valueSize;this._weightPrev=l/(t-c),this._weightNext=l/(a-n),this._offsetPrev=s*u,this._offsetNext=r*u}interpolate_(e,t,n,i){let s=this.resultBuffer,r=this.sampleValues,c=this.valueSize,a=e*c,l=a-c,u=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,f=this._weightNext,m=(n-t)/(i-t),g=m*m,_=g*m,x=-d*_+2*d*g-d*m,T=(1+d)*_+(-1.5-2*d)*g+(-.5+d)*m+1,A=(-1-f)*_+(1.5+f)*g+.5*m,E=f*_-f*g;for(let N=0;N!==c;++N)s[N]=x*r[u+N]+T*r[l+N]+A*r[a+N]+E*r[h+N];return s}},sa=class extends Fi{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){let s=this.resultBuffer,r=this.sampleValues,c=this.valueSize,a=e*c,l=a-c,u=(n-t)/(i-t),h=1-u;for(let d=0;d!==c;++d)s[d]=r[l+d]*h+r[a+d]*u;return s}},ra=class extends Fi{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}},Gt=class{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=vl(t,this.TimeBufferType),this.values=vl(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:vl(e.times,Array),values:vl(e.values,Array)};let i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new ra(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new sa(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ia(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ur:t=this.InterpolantFactoryMethodDiscrete;break;case Lo:t=this.InterpolantFactoryMethodLinear;break;case Po:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){let n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ur;case this.InterpolantFactoryMethodLinear:return Lo;case this.InterpolantFactoryMethodSmooth:return Po}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){let t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){let t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){let n=this.times,i=n.length,s=0,r=i-1;for(;s!==i&&n[s]<e;)++s;for(;r!==-1&&n[r]>t;)--r;if(++r,s!==0||r!==i){s>=r&&(r=Math.max(r,1),s=r-1);let c=this.getValueSize();this.times=n.slice(s,r),this.values=this.values.slice(s*c,r*c)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let r=null;for(let c=0;c!==s;c++){let a=n[c];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,a),e=!1;break}if(r!==null&&r>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,a,r),e=!1;break}r=a}if(i!==void 0&&dM(i))for(let c=0,a=i.length;c!==a;++c){let l=i[c];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,l),e=!1;break}}return e}optimize(){let e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Po,s=e.length-1,r=1;for(let c=1;c<s;++c){let a=!1,l=e[c],u=e[c+1];if(l!==u&&(c!==1||l!==e[0]))if(i)a=!0;else{let h=c*n,d=h-n,f=h+n;for(let m=0;m!==n;++m){let g=t[h+m];if(g!==t[d+m]||g!==t[f+m]){a=!0;break}}}if(a){if(c!==r){e[r]=e[c];let h=c*n,d=r*n;for(let f=0;f!==n;++f)t[d+f]=t[h+f]}++r}}if(s>0){e[r]=e[s];for(let c=s*n,a=r*n,l=0;l!==n;++l)t[a+l]=t[c+l];++r}return r!==e.length?(this.times=e.slice(0,r),this.values=t.slice(0,r*n)):(this.times=e,this.values=t),this}clone(){let e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}};Gt.prototype.TimeBufferType=Float32Array;Gt.prototype.ValueBufferType=Float32Array;Gt.prototype.DefaultInterpolation=Lo;var ri=class extends Gt{constructor(e,t,n){super(e,t,n)}};ri.prototype.ValueTypeName="bool";ri.prototype.ValueBufferType=Array;ri.prototype.DefaultInterpolation=ur;ri.prototype.InterpolantFactoryMethodLinear=void 0;ri.prototype.InterpolantFactoryMethodSmooth=void 0;var oa=class extends Gt{};oa.prototype.ValueTypeName="color";var aa=class extends Gt{};aa.prototype.ValueTypeName="number";var ca=class extends Fi{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){let s=this.resultBuffer,r=this.sampleValues,c=this.valueSize,a=(n-t)/(i-t),l=e*c;for(let u=l+c;l!==u;l+=4)Bt.slerpFlat(s,0,r,l-c,r,l,a);return s}},br=class extends Gt{InterpolantFactoryMethodLinear(e){return new ca(this.times,this.values,this.getValueSize(),e)}};br.prototype.ValueTypeName="quaternion";br.prototype.InterpolantFactoryMethodSmooth=void 0;var oi=class extends Gt{constructor(e,t,n){super(e,t,n)}};oi.prototype.ValueTypeName="string";oi.prototype.ValueBufferType=Array;oi.prototype.DefaultInterpolation=ur;oi.prototype.InterpolantFactoryMethodLinear=void 0;oi.prototype.InterpolantFactoryMethodSmooth=void 0;var la=class extends Gt{};la.prototype.ValueTypeName="vector";var ua=class{constructor(e,t,n){let i=this,s=!1,r=0,c=0,a,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){c++,s===!1&&i.onStart!==void 0&&i.onStart(u,r,c),s=!0},this.itemEnd=function(u){r++,i.onProgress!==void 0&&i.onProgress(u,r,c),r===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return a?a(u):u},this.setURLModifier=function(u){return a=u,this},this.addHandler=function(u,h){return l.push(u,h),this},this.removeHandler=function(u){let h=l.indexOf(u);return h!==-1&&l.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=l.length;h<d;h+=2){let f=l[h],m=l[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return m}return null}}},gf=new ua,ha=class{constructor(e){this.manager=e!==void 0?e:gf,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}};ha.DEFAULT_MATERIAL_NAME="__DEFAULT";var un=class extends ze{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new q(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}},ms=class extends un{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ze.DEFAULT_UP),this.updateMatrix(),this.groundColor=new q(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}},bd=new ue,ry=new M,oy=new M,da=class{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new H(512,512),this.map=null,this.mapPass=null,this.matrix=new ue,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new xr,this._frameExtents=new H(1,1),this._viewportCount=1,this._viewports=[new re(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,n=this.matrix;ry.setFromMatrixPosition(e.matrixWorld),t.position.copy(ry),oy.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(oy),t.updateMatrixWorld(),bd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(bd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(bd)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}},Ad=class extends da{constructor(){super(new qe(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){let t=this.camera,n=Li*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}},Mr=class extends un{constructor(e,t,n=0,i=Math.PI/3,s=0,r=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(ze.DEFAULT_UP),this.updateMatrix(),this.target=new ze,this.distance=n,this.angle=i,this.penumbra=s,this.decay=r,this.map=null,this.shadow=new Ad}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},ay=new ue,No=new M,Md=new M,Ed=class extends da{constructor(){super(new qe(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new H(4,2),this._viewportCount=6,this._viewports=[new re(2,1,1,1),new re(0,1,1,1),new re(3,1,1,1),new re(1,1,1,1),new re(3,0,1,1),new re(1,0,1,1)],this._cubeDirections=[new M(1,0,0),new M(-1,0,0),new M(0,0,1),new M(0,0,-1),new M(0,1,0),new M(0,-1,0)],this._cubeUps=[new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,0,1),new M(0,0,-1)]}updateMatrices(e,t=0){let n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),No.setFromMatrixPosition(e.matrixWorld),n.position.copy(No),Md.copy(n.position),Md.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Md),n.updateMatrixWorld(),i.makeTranslation(-No.x,-No.y,-No.z),ay.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ay)}},fa=class extends un{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Ed}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}},gs=class extends ds{constructor(e=-1,t=1,n=1,i=-1,s=.1,r=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=r,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,s=n-e,r=n+e,c=i+t,a=i-t;if(this.view!==null&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,r=s+l*this.view.width,c-=u*this.view.offsetY,a=c-u*this.view.height}this.projectionMatrix.makeOrthographic(s,r,c,a,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}},wd=class extends da{constructor(){super(new gs(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}},pa=class extends un{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ze.DEFAULT_UP),this.updateMatrix(),this.target=new ze,this.shadow=new wd}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}},_s=class extends un{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}},ma=class extends un{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}},ga=class{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new M)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.282095),t.addScaledVector(r[1],.488603*i),t.addScaledVector(r[2],.488603*s),t.addScaledVector(r[3],.488603*n),t.addScaledVector(r[4],1.092548*(n*i)),t.addScaledVector(r[5],1.092548*(i*s)),t.addScaledVector(r[6],.315392*(3*s*s-1)),t.addScaledVector(r[7],1.092548*(n*s)),t.addScaledVector(r[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){let n=e.x,i=e.y,s=e.z,r=this.coefficients;return t.copy(r[0]).multiplyScalar(.886227),t.addScaledVector(r[1],2*.511664*i),t.addScaledVector(r[2],2*.511664*s),t.addScaledVector(r[3],2*.511664*n),t.addScaledVector(r[4],2*.429043*n*i),t.addScaledVector(r[5],2*.429043*i*s),t.addScaledVector(r[6],.743125*s*s-.247708),t.addScaledVector(r[7],2*.429043*n*s),t.addScaledVector(r[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){let n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){let n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}},_a=class extends un{constructor(e=new ga,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}};var xa=class extends qe{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e,this.index=0}};var _f="\\[\\]\\.:\\/",fM=new RegExp("["+_f+"]","g"),xf="[^"+_f+"]",pM="[^"+_f.replace("\\.","")+"]",mM=/((?:WC+[\/:])*)/.source.replace("WC",xf),gM=/(WCOD+)?/.source.replace("WCOD",pM),_M=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",xf),xM=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",xf),yM=new RegExp("^"+mM+gM+_M+xM+"$"),vM=["material","materials","bones","map"],Rd=class{constructor(e,t,n){let i=n||ve.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();let n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){let n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},ve=class o{constructor(e,t,n){this.path=t,this.parsedPath=n||o.parseTrackName(t),this.node=o.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new o.Composite(e,t,n):new o(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(fM,"")}static parseTrackName(e){let t=yM.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);let n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){let s=n.nodeName.substring(i+1);vM.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){let n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){let n=function(s){for(let r=0;r<s.length;r++){let c=s[r];if(c.name===t||c.uuid===t)return c;let a=n(c.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,n=t.objectName,i=t.propertyName,s=t.propertyIndex;if(e||(e=o.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let l=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===l){l=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(l!==void 0){if(e[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[l]}}let r=e[i];if(r===void 0){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?c=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}a=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else r.fromArray!==void 0&&r.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(a=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}};ve.Composite=Rd;ve.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};ve.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};ve.prototype.GetterByBindingType=[ve.prototype._getValue_direct,ve.prototype._getValue_array,ve.prototype._getValue_arrayElement,ve.prototype._getValue_toArray];ve.prototype.SetterByBindingTypeAndVersioning=[[ve.prototype._setValue_direct,ve.prototype._setValue_direct_setNeedsUpdate,ve.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ve.prototype._setValue_array,ve.prototype._setValue_array_setNeedsUpdate,ve.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ve.prototype._setValue_arrayElement,ve.prototype._setValue_arrayElement_setNeedsUpdate,ve.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ve.prototype._setValue_fromArray,ve.prototype._setValue_fromArray_setNeedsUpdate,ve.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];var XF=new Float32Array(1);var ya=class extends _r{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}};var xs=class{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=se(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(se(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}};var Ar=class o{constructor(e,t,n,i){o.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let n=0;n<4;n++)this.elements[n]=e[n+t];return this}set(e,t,n,i){let s=this.elements;return s[0]=e,s[2]=t,s[1]=n,s[3]=i,this}};var Er=class extends Ft{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:wr}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=wr);var uw=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],Qf=class{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=uw,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){let{geometry:n,material:i,object:s}=e;if(t={material:this.getMaterialData(i),geometry:{id:n.id,attributes:this.getAttributesData(n.attributes),indexVersion:n.index?n.index.version:null,drawRange:{start:n.drawRange.start,count:n.drawRange.count}},worldMatrix:s.matrixWorld.clone()},s.center&&(t.center=s.center.clone()),s.morphTargetInfluences&&(t.morphTargetInfluences=s.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){let{width:r,height:c}=e.context;t.bufferWidth=r,t.bufferHeight=c}this.renderObjects.set(e,t)}return t}getAttributesData(e){let t={};for(let n in e){let i=e[n];t[n]={version:i.version}}return t}containsNode(e){let t=e.material;for(let n in t)if(t[n]&&t[n].isNode)return!0;return e.renderer.nodes.modelViewMatrix!==null||e.renderer.nodes.modelNormalViewMatrix!==null}getMaterialData(e){let t={};for(let n of this.refreshUniforms){let i=e[n];i!=null&&(typeof i=="object"&&i.clone!==void 0?i.isTexture===!0?t[n]={id:i.id,version:i.version}:t[n]=i.clone():t[n]=i)}return t}equals(e){let{object:t,material:n,geometry:i}=e,s=this.getRenderObjectData(e);if(s.worldMatrix.equals(t.matrixWorld)!==!0)return s.worldMatrix.copy(t.matrixWorld),!1;let r=s.material;for(let g in r){let _=r[g],x=n[g];if(_.equals!==void 0){if(_.equals(x)===!1)return _.copy(x),!1}else if(x.isTexture===!0){if(_.id!==x.id||_.version!==x.version)return _.id=x.id,_.version=x.version,!1}else if(_!==x)return r[g]=x,!1}if(r.transmission>0){let{width:g,height:_}=e.context;if(s.bufferWidth!==g||s.bufferHeight!==_)return s.bufferWidth=g,s.bufferHeight=_,!1}let c=s.geometry,a=i.attributes,l=c.attributes,u=Object.keys(l),h=Object.keys(a);if(c.id!==i.id)return c.id=i.id,!1;if(u.length!==h.length)return s.geometry.attributes=this.getAttributesData(a),!1;for(let g of u){let _=l[g],x=a[g];if(x===void 0)return delete l[g],!1;if(_.version!==x.version)return _.version=x.version,!1}let d=i.index,f=c.indexVersion,m=d?d.version:null;if(f!==m)return c.indexVersion=m,!1;if(c.drawRange.start!==i.drawRange.start||c.drawRange.count!==i.drawRange.count)return c.drawRange.start=i.drawRange.start,c.drawRange.count=i.drawRange.count,!1;if(s.morphTargetInfluences){let g=!1;for(let _=0;_<s.morphTargetInfluences.length;_++)s.morphTargetInfluences[_]!==t.morphTargetInfluences[_]&&(g=!0);if(g)return!0}return s.center&&s.center.equals(t.center)===!1?(s.center.copy(t.center),!0):(e.bundle!==null&&(s.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;let{renderId:n}=t;if(this.renderId!==n)return this.renderId=n,!0;let i=e.object.static===!0,s=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;return i||s?!1:this.equals(e)!==!0}};function _c(o,e=0){let t=3735928559^e,n=1103547991^e;if(o instanceof Array)for(let i=0,s;i<o.length;i++)s=o[i],t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);else for(let i=0,s;i<o.length;i++)s=o.charCodeAt(i),t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}var fv=o=>_c(o),wh=o=>_c(o),xc=(...o)=>_c(o);function pv(o,e=!1){let t=[];o.isNode===!0&&(t.push(o.id),o=o.getSelf());for(let{property:n,childNode:i}of Au(o))t.push(_c(n.slice(0,-4)),i.getCacheKey(e));return _c(t)}function*Au(o,e=!1){for(let t in o){if(t.startsWith("_")===!0)continue;let n=o[t];if(Array.isArray(n)===!0)for(let i=0;i<n.length;i++){let s=n[i];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:i,childNode:s})}else if(n&&n.isNode===!0)yield{property:t,childNode:n};else if(typeof n=="object")for(let i in n){let s=n[i];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:i,childNode:s})}}}var hw=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),ly=new WeakMap;function mv(o){return hw.get(o)}function Eu(o){if(/[iu]?vec\d/.test(o))return o.startsWith("ivec")?Int32Array:o.startsWith("uvec")?Uint32Array:Float32Array;if(/mat\d/.test(o)||/float/.test(o))return Float32Array;if(/uint/.test(o))return Uint32Array;if(/int/.test(o))return Int32Array;throw new Error(`THREE.NodeUtils: Unsupported type: ${o}`)}function w_(o){if(/float|int|uint/.test(o))return 1;if(/vec2/.test(o))return 2;if(/vec3/.test(o))return 3;if(/vec4/.test(o)||/mat2/.test(o))return 4;if(/mat3/.test(o))return 9;if(/mat4/.test(o))return 16;console.error("THREE.TSL: Unsupported type:",o)}function Ki(o){if(o==null)return null;let e=typeof o;return o.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":o.isVector2===!0?"vec2":o.isVector3===!0?"vec3":o.isVector4===!0?"vec4":o.isMatrix2===!0?"mat2":o.isMatrix3===!0?"mat3":o.isMatrix4===!0?"mat4":o.isColor===!0?"color":o instanceof ArrayBuffer?"ArrayBuffer":null}function gv(o,...e){let t=o?o.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),o==="color"?new q(...e):t==="vec2"?new H(...e):t==="vec3"?new M(...e):t==="vec4"?new re(...e):t==="mat2"?new Ar(...e):t==="mat3"?new Q(...e):t==="mat4"?new ue(...e):o==="bool"?e[0]||!1:o==="float"||o==="int"||o==="uint"?e[0]||0:o==="string"?e[0]||"":o==="ArrayBuffer"?yv(e[0]):null}function _v(o){let e=ly.get(o);return e===void 0&&(e={},ly.set(o,e)),e}function xv(o){let e="",t=new Uint8Array(o);for(let n=0;n<t.length;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function yv(o){return Uint8Array.from(atob(o),e=>e.charCodeAt(0)).buffer}var Jf={VERTEX:"vertex",FRAGMENT:"fragment"},J={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},dw={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},ut={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},vv=["fragment","vertex"],ep=["setup","analyze","generate"],tp=[...vv,"compute"],ks=["x","y","z","w"],fw=0,Y=class extends Ft{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=J.NONE,this.updateBeforeType=J.NONE,this.updateAfterType=J.NONE,this.uuid=Hr.generateUUID(),this.version=0,this.global=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:fw++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,J.FRAME)}onRenderUpdate(e){return this.onUpdate(e,J.RENDER)}onObjectUpdate(e){return this.onUpdate(e,J.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(let{childNode:e}of Au(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(let t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=xc(pv(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){let t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){let t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){let t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){let t=e.getNodeProperties(this),n=0;for(let i of this.getChildren())t["node"+n++]=i;return t.outputNode||null}analyze(e){if(e.increaseUsage(this)===1){let n=e.getNodeProperties(this);for(let i of Object.values(n))i&&i.isNode===!0&&i.build(e)}}generate(e,t){let{outputNode:n}=e.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){let n=this.getShared(e);if(this!==n)return n.build(e,t);e.addNode(this),e.addChain(this);let i=null,s=e.getBuildStage();if(s==="setup"){this.updateReference(e);let r=e.getNodeProperties(this);if(r.initialized!==!0){r.initialized=!0;let c=this.setup(e),a=c&&c.isNode===!0;for(let l of Object.values(r))l&&l.isNode===!0&&l.build(e);a&&c.build(e),r.outputNode=c}}else if(s==="analyze")this.analyze(e);else if(s==="generate")if(this.generate.length===1){let c=this.getNodeType(e),a=e.getDataFromNode(this);i=a.snippet,i===void 0?(i=this.generate(e)||"",a.snippet=i):a.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),i=e.format(i,c,t)}else i=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),i}getSerializeChildren(){return Au(this)}serialize(e){let t=this.getSerializeChildren(),n={};for(let{property:i,index:s,childNode:r}of t)s!==void 0?(n[i]===void 0&&(n[i]=Number.isInteger(s)?[]:{}),n[i][s]=r.toJSON(e.meta).uuid):n[i]=r.toJSON(e.meta).uuid;Object.keys(n).length>0&&(e.inputNodes=n)}deserialize(e){if(e.inputNodes!==void 0){let t=e.meta.nodes;for(let n in e.inputNodes)if(Array.isArray(e.inputNodes[n])){let i=[];for(let s of e.inputNodes[n])i.push(t[s]);this[n]=i}else if(typeof e.inputNodes[n]=="object"){let i={};for(let s in e.inputNodes[n]){let r=e.inputNodes[n][s];i[s]=t[r]}this[n]=i}else{let i=e.inputNodes[n];this[n]=t[i]}}}toJSON(e){let{uuid:t,type:n}=this,i=e===void 0||typeof e=="string";i&&(e={textures:{},images:{},nodes:{}});let s=e.nodes[t];s===void 0&&(s={uuid:t,type:n,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},i!==!0&&(e.nodes[s.uuid]=s),this.serialize(s),delete s.meta);function r(c){let a=[];for(let l in c){let u=c[l];delete u.metadata,a.push(u)}return a}if(i){let c=r(e.textures),a=r(e.images),l=r(e.nodes);c.length>0&&(s.textures=c),a.length>0&&(s.images=a),l.length>0&&(s.nodes=l)}return s}},gi=class extends Y{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){let t=this.node.build(e),n=this.indexNode.build(e,"uint");return`${t}[ ${n} ]`}},wu=class extends Y{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){let t=this.node.getNodeType(e),n=null;for(let i of this.convertTo.split("|"))(n===null||e.getTypeLength(t)===e.getTypeLength(i))&&(n=i);return n}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){let n=this.node,i=this.getNodeType(e),s=n.build(e,i);return e.format(s,i,t)}},Me=class extends Y{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){let i=e.getVectorType(this.getNodeType(e,t)),s=e.getDataFromNode(this);if(s.propertyName!==void 0)return e.format(s.propertyName,i,t);if(i!=="void"&&t!=="void"&&this.hasDependencies(e)){let r=super.build(e,i),c=e.getVarFromNode(this,null,i),a=e.getPropertyName(c);return e.addLineFlowCode(`${a} = ${r}`,this),s.snippet=r,s.propertyName=a,e.format(s.propertyName,i,t)}}return super.build(e,t)}},np=class extends Me{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,n)=>t+e.getTypeLength(n.getNodeType(e)),0))}generate(e,t){let n=this.getNodeType(e),i=this.nodes,s=e.getComponentType(n),r=[];for(let a of i){let l=a.build(e),u=e.getComponentType(a.getNodeType(e));u!==s&&(l=e.format(l,u,s)),r.push(l)}let c=`${e.getType(n)}( ${r.join(", ")} )`;return e.format(c,n,t)}},pw=ks.join(""),yc=class extends Y{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(let t of this.components)e=Math.max(ks.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){let n=this.node,i=e.getTypeLength(n.getNodeType(e)),s=null;if(i>1){let r=null;this.getVectorLength()>=i&&(r=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));let a=n.build(e,r);this.components.length===i&&this.components===pw.slice(0,this.components.length)?s=e.format(a,r,t):s=e.format(`${a}.${this.components}`,this.getNodeType(e),t)}else s=n.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}},ip=class extends Me{static get type(){return"SetNode"}constructor(e,t,n){super(),this.sourceNode=e,this.components=t,this.targetNode=n}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){let{sourceNode:t,components:n,targetNode:i}=this,s=this.getNodeType(e),r=e.getComponentType(i.getNodeType(e)),c=e.getTypeFromLength(n.length,r),a=i.build(e,c),l=t.build(e,s),u=e.getTypeLength(s),h=[];for(let d=0;d<u;d++){let f=ks[d];f===n[0]?(h.push(a),d+=n.length-1):h.push(l+"."+f)}return`${e.getType(s)}( ${h.join(", ")} )`}},sp=class extends Me{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){let{components:t,sourceNode:n}=this,i=this.getNodeType(e),s=n.build(e),r=e.getVarFromNode(this),c=e.getPropertyName(r);e.addLineFlowCode(c+" = "+s,this);let a=e.getTypeLength(i),l=[],u=0;for(let h=0;h<a;h++){let d=ks[h];d===t[u]?(l.push("1.0 - "+(c+"."+d)),u++):l.push(c+"."+d)}return`${e.getType(i)}( ${l.join(", ")} )`}},vc=class extends Y{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?Ki(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=Ki(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=xv(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?gv(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}},uy=/float|u?int/,qt=class extends vc{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){let n=this.getNodeType(e);return uy.test(n)&&uy.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),n,t)}},rp=class extends Y{static get type(){return"MemberNode"}constructor(e,t){super(),this.node=e,this.property=t,this.isMemberNode=!0}getNodeType(e){return this.node.getMemberType(e,this.property)}generate(e){return this.node.build(e)+"."+this.property}},co=null,eo=new Map;function D(o,e){if(eo.has(o)){console.warn(`Redefinition of method chaining ${o}`);return}if(typeof e!="function")throw new Error(`Node element ${o} is not a function`);eo.set(o,e)}var Tv=o=>o.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),hy=o=>Tv(o).split("").sort().join(""),Sv={setup(o,e){let t=e.shift();return o(Gc(t),...e)},get(o,e,t){if(typeof e=="string"&&o[e]===void 0){if(o.isStackNode!==!0&&e==="assign")return(...n)=>(co.assign(t,...n),t);if(eo.has(e)){let n=eo.get(e);return o.isStackNode?(...i)=>t.add(n(...i)):(...i)=>n(t,...i)}else{if(e==="self")return o;if(e.endsWith("Assign")&&eo.has(e.slice(0,e.length-6))){let n=eo.get(e.slice(0,e.length-6));return o.isStackNode?(...i)=>t.assign(i[0],n(...i)):(...i)=>t.assign(n(t,...i))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=Tv(e),F(new yc(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=hy(e.slice(3).toLowerCase()),n=>F(new ip(o,e,n));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=hy(e.slice(4).toLowerCase()),()=>F(new sp(F(o),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),F(new yc(o,e));if(/^\d+$/.test(e)===!0)return F(new gi(t,new qt(Number(e),"uint")));if(/^get$/.test(e)===!0)return n=>F(new rp(t,n))}}}return Reflect.get(o,e,t)},set(o,e,t,n){return typeof e=="string"&&o[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(n[e].assign(t),!0):Reflect.set(o,e,t,n)}},yf=new WeakMap,dy=new WeakMap,mw=function(o,e=null){let t=Ki(o);if(t==="node"){let n=yf.get(o);return n===void 0&&(n=new Proxy(o,Sv),yf.set(o,n),yf.set(n,n)),n}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return F(cp(o,e));if(t==="shader")return w(o)}return o},gw=function(o,e=null){for(let t in o)o[t]=F(o[t],e);return o},_w=function(o,e=null){let t=o.length;for(let n=0;n<t;n++)o[n]=F(o[n],e);return o},xw=function(o,e=null,t=null,n=null){let i=s=>F(n!==null?Object.assign(s,n):s);return e===null?(...s)=>i(new o(...Us(s))):t!==null?(t=F(t),(...s)=>i(new o(e,...Us(s),t))):(...s)=>i(new o(e,...Us(s)))},yw=function(o,...e){return F(new o(...Us(e)))},op=class extends Y{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){let{shaderNode:t,inputNodes:n}=this,i=e.getNodeProperties(t);if(i.onceOutput)return i.onceOutput;let s=null;if(t.layout){let r=dy.get(e.constructor);r===void 0&&(r=new WeakMap,dy.set(e.constructor,r));let c=r.get(t);c===void 0&&(c=F(e.buildFunctionNode(t)),r.set(t,c)),e.currentFunctionNode!==null&&e.currentFunctionNode.includes.push(c),s=F(c.call(n))}else{let r=t.jsFunc,c=n!==null||r.length>1?r(n||[],e):r(e);s=F(c)}return t.once&&(i.onceOutput=s),s}getOutputNode(e){let t=e.getNodeProperties(this);return t.outputNode===null&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}},ap=class extends Y{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Gc(e),F(new op(this,e))}setup(){return this.call()}},vw=[!1,!0],Tw=[0,1,2,3],Sw=[-1,-2],bv=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],R_=new Map;for(let o of vw)R_.set(o,new qt(o));var C_=new Map;for(let o of Tw)C_.set(o,new qt(o,"uint"));var N_=new Map([...C_].map(o=>new qt(o.value,"int")));for(let o of Sw)N_.set(o,new qt(o,"int"));var Rh=new Map([...N_].map(o=>new qt(o.value)));for(let o of bv)Rh.set(o,new qt(o));for(let o of bv)Rh.set(-o,new qt(-o));var Ch={bool:R_,uint:C_,ints:N_,float:Rh},fy=new Map([...R_,...Rh]),cp=(o,e)=>fy.has(o)?fy.get(o):o.isNode===!0?o:new qt(o,e),bw=o=>{try{return o.getNodeType()}catch{return}},We=function(o,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(o)&&t.every(i=>typeof i!="object"))&&(t=[gv(o,...t)]),t.length===1&&e!==null&&e.has(t[0]))return F(e.get(t[0]));if(t.length===1){let i=cp(t[0],o);return bw(i)===o?F(i):F(new wu(i,o))}let n=t.map(i=>cp(i));return F(new np(n,o))}},Tc=o=>typeof o=="object"&&o!==null?o.value:o,Mv=o=>o!=null?o.nodeType||o.convertTo||(typeof o=="string"?o:null):null;function cc(o,e){return new Proxy(new ap(o,e),Sv)}var F=(o,e=null)=>mw(o,e),Gc=(o,e=null)=>new gw(o,e),Us=(o,e=null)=>new _w(o,e),L=(...o)=>new xw(...o),O=(...o)=>new yw(...o),w=(o,e)=>{let t=new cc(o,e),n=(...i)=>{let s;return Gc(i),i[0]&&i[0].isNode?s=[...i]:s=i[0],t.call(s)};return n.shaderNode=t,n.setLayout=i=>(t.setLayout(i),n),n.once=()=>(t.once=!0,n),n},Mw=(...o)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),w(...o));D("toGlobal",o=>(o.global=!0,o));var Sc=o=>{co=o},P_=()=>co,ne=(...o)=>co.If(...o);function Av(o){return co&&co.add(o),o}D("append",Av);var Ev=new We("color"),y=new We("float",Ch.float),v=new We("int",Ch.ints),V=new We("uint",Ch.uint),_i=new We("bool",Ch.bool),U=new We("vec2"),$e=new We("ivec2"),wv=new We("uvec2"),Rv=new We("bvec2"),b=new We("vec3"),Cv=new We("ivec3"),yo=new We("uvec3"),I_=new We("bvec3"),W=new We("vec4"),Nv=new We("ivec4"),Pv=new We("uvec4"),Iv=new We("bvec4"),Nh=new We("mat2"),dt=new We("mat3"),Bs=new We("mat4"),Aw=(o="")=>F(new qt(o,"string")),Ew=o=>F(new qt(o,"ArrayBuffer"));D("toColor",Ev);D("toFloat",y);D("toInt",v);D("toUint",V);D("toBool",_i);D("toVec2",U);D("toIVec2",$e);D("toUVec2",wv);D("toBVec2",Rv);D("toVec3",b);D("toIVec3",Cv);D("toUVec3",yo);D("toBVec3",I_);D("toVec4",W);D("toIVec4",Nv);D("toUVec4",Pv);D("toBVec4",Iv);D("toMat2",Nh);D("toMat3",dt);D("toMat4",Bs);var Dv=L(gi),Lv=(o,e)=>F(new wu(F(o),e)),ww=(o,e)=>F(new yc(F(o),e));D("element",Dv);D("convert",Lv);var Ru=class extends Me{static get type(){return"ArrayNode"}constructor(e,t,n=null){super(e),this.count=t,this.values=n,this.isArrayNode=!0}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){let t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}},Fv=(...o)=>{let e;if(o.length===1){let t=o[0];e=new Ru(null,t.length,t)}else{let t=o[0],n=o[1];e=new Ru(t,n)}return F(e)};D("toArray",(o,e)=>Fv(Array(e).fill(o)));var Cu=class extends Y{static get type(){return"UniformGroupNode"}constructor(e,t=!1,n=1){super("string"),this.name=e,this.shared=t,this.order=n,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}},Uv=o=>new Cu(o),Ph=(o,e=0)=>new Cu(o,!0,e),Bv=Ph("frame"),Z=Ph("render"),D_=Uv("object"),Vs=class extends vc{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=D_}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){let n=this.getSelf();return e=e.bind(n),super.onUpdate(i=>{let s=e(i,n);s!==void 0&&(this.value=s)},t)}generate(e,t){let n=this.getNodeType(e),i=this.getUniformHash(e),s=e.getNodeFromHash(i);s===void 0&&(e.setHashNode(this,i),s=this);let r=s.getInputType(e),c=e.getUniformFromNode(s,r,e.shaderStage,this.name||e.context.label),a=e.getPropertyName(c);return e.context.label!==void 0&&delete e.context.label,e.format(a,n,t)}},X=(o,e)=>{let t=Mv(e||o),n=o&&o.isNode===!0?o.node&&o.node.value||o.value:o;return F(new Vs(n,t))},he=class extends Y{static get type(){return"PropertyNode"}constructor(e,t=null,n=!1){super(e),this.name=t,this.varying=n,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}},Ov=(o,e)=>F(new he(o,e)),bc=(o,e)=>F(new he(o,e,!0)),de=O(he,"vec4","DiffuseColor"),lp=O(he,"vec3","EmissiveColor"),Rn=O(he,"float","Roughness"),Mc=O(he,"float","Metalness"),Nu=O(he,"float","Clearcoat"),Ac=O(he,"float","ClearcoatRoughness"),Ls=O(he,"vec3","Sheen"),Ih=O(he,"float","SheenRoughness"),Dh=O(he,"float","Iridescence"),L_=O(he,"float","IridescenceIOR"),F_=O(he,"float","IridescenceThickness"),Pu=O(he,"float","AlphaT"),qi=O(he,"float","Anisotropy"),lc=O(he,"vec3","AnisotropyT"),Os=O(he,"vec3","AnisotropyB"),Mt=O(he,"color","SpecularColor"),Ec=O(he,"float","SpecularF90"),Iu=O(he,"float","Shininess"),wc=O(he,"vec4","Output"),vu=O(he,"float","dashSize"),up=O(he,"float","gapSize"),Rw=O(he,"float","pointWidth"),uc=O(he,"float","IOR"),Du=O(he,"float","Transmission"),U_=O(he,"float","Thickness"),B_=O(he,"float","AttenuationDistance"),O_=O(he,"color","AttenuationColor"),V_=O(he,"float","Dispersion"),hp=class extends Me{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){let{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){let n=e.getTypeLength(t.node.getNodeType(e));return ks.join("").slice(0,n)!==t.components}return!1}generate(e,t){let{targetNode:n,sourceNode:i}=this,s=this.needsSplitAssign(e),r=n.getNodeType(e),c=n.context({assign:!0}).build(e),a=i.build(e,r),l=i.getNodeType(e),u=e.getDataFromNode(this),h;if(u.initialized===!0)t!=="void"&&(h=c);else if(s){let d=e.getVarFromNode(this,null,r),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${a}`,this);let m=n.node.context({assign:!0}).build(e);for(let g=0;g<n.components.length;g++){let _=n.components[g];e.addLineFlowCode(`${m}.${_} = ${f}[ ${g} ]`,this)}t!=="void"&&(h=c)}else h=`${c} = ${a}`,(t==="void"||l==="void")&&(e.addLineFlowCode(h,this),t!=="void"&&(h=c));return u.initialized=!0,e.format(h,r,t)}},Vv=L(hp);D("assign",Vv);var dp=class extends Me{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){let t=[],n=this.functionNode,i=n.getInputs(e),s=this.parameters,r=(a,l)=>{let u=l.type,h=u==="pointer",d;return h?d="&"+a.build(e):d=a.build(e,u),d};if(Array.isArray(s))for(let a=0;a<s.length;a++)t.push(r(s[a],i[a]));else for(let a of i){let l=s[a.name];if(l!==void 0)t.push(r(l,a));else throw new Error(`FunctionCallNode: Input '${a.name}' not found in FunctionNode.`)}return`${n.build(e,"property")}( ${t.join(", ")} )`}},Gv=(o,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?Us(e):Gc(e[0]),F(new dp(F(o),e)));D("call",Gv);var we=class o extends Me{static get type(){return"OperatorNode"}constructor(e,t,n,...i){if(super(),i.length>0){let s=new o(e,t,n);for(let r=0;r<i.length-1;r++)s=new o(e,s,i[r]);t=s,n=i[i.length-1]}this.op=e,this.aNode=t,this.bNode=n,this.isOperatorNode=!0}getNodeType(e,t){let n=this.op,i=this.aNode,s=this.bNode,r=i.getNodeType(e),c=typeof s<"u"?s.getNodeType(e):null;if(r==="void"||c==="void")return"void";if(n==="%")return r;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return e.getIntegerType(r);if(n==="!"||n==="=="||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="<"||n===">"||n==="<="||n===">="){let a=t?e.getTypeLength(t):Math.max(e.getTypeLength(r),e.getTypeLength(c));return a>1?`bvec${a}`:"bool"}else{if(e.isMatrix(r)){if(c==="float")return r;if(e.isVector(c))return e.getVectorFromMatrix(r);if(e.isMatrix(c))return r}else if(e.isMatrix(c)){if(r==="float")return c;if(e.isVector(r))return e.getVectorFromMatrix(c)}return e.getTypeLength(c)>e.getTypeLength(r)?c:r}}generate(e,t){let n=this.op,i=this.aNode,s=this.bNode,r=this.getNodeType(e,t),c=null,a=null;r!=="void"?(c=i.getNodeType(e),a=typeof s<"u"?s.getNodeType(e):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="?e.isVector(c)?a=c:c!==a&&(c=a="float"):n===">>"||n==="<<"?(c=r,a=e.changeComponentType(a,"uint")):e.isMatrix(c)?a==="float"?a="float":e.isVector(a)?a=e.getVectorFromMatrix(c):e.isMatrix(a)||(c=a=r):e.isMatrix(a)?c==="float"?c="float":e.isVector(c)?c=e.getVectorFromMatrix(a):c=a=r:c=a=r):c=a=r;let l=i.build(e,c),u=typeof s<"u"?s.build(e,a):null,h=e.getTypeLength(t),d=e.getFunctionOperator(n);if(t!=="void")return n==="<"&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} < ${u} )`,r,t):n==="<="&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} <= ${u} )`,r,t):n===">"&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} > ${u} )`,r,t):n===">="&&h>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${l}, ${u} )`,r,t):e.format(`( ${l} >= ${u} )`,r,t):n==="!"||n==="~"?e.format(`(${n}${l})`,c,t):d?e.format(`${d}( ${l}, ${u} )`,r,t):e.isMatrix(c)&&a==="float"?e.format(`( ${u} ${n} ${l} )`,r,t):c==="float"&&e.isMatrix(a)?e.format(`${l} ${n} ${u}`,r,t):e.format(`( ${l} ${n} ${u} )`,r,t);if(c!=="void")return d?e.format(`${d}( ${l}, ${u} )`,r,t):e.isMatrix(c)&&a==="float"?e.format(`${u} ${n} ${l}`,r,t):e.format(`${l} ${n} ${u}`,r,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}},Be=L(we,"+"),ce=L(we,"-"),ee=L(we,"*"),gn=L(we,"/"),G_=L(we,"%"),zv=L(we,"=="),kv=L(we,"!="),Hv=L(we,"<"),z_=L(we,">"),Wv=L(we,"<="),qv=L(we,">="),Xv=L(we,"&&"),$v=L(we,"||"),Yv=L(we,"!"),Kv=L(we,"^^"),Zv=L(we,"&"),jv=L(we,"~"),Qv=L(we,"|"),Jv=L(we,"^"),e0=L(we,"<<"),t0=L(we,">>");D("add",Be);D("sub",ce);D("mul",ee);D("div",gn);D("modInt",G_);D("equal",zv);D("notEqual",kv);D("lessThan",Hv);D("greaterThan",z_);D("lessThanEqual",Wv);D("greaterThanEqual",qv);D("and",Xv);D("or",$v);D("not",Yv);D("xor",Kv);D("bitAnd",Zv);D("bitNot",jv);D("bitOr",Qv);D("bitXor",Jv);D("shiftLeft",e0);D("shiftRight",t0);var n0=(...o)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),G_(...o));D("remainder",n0);var C=class o extends Me{static get type(){return"MathNode"}constructor(e,t,n=null,i=null){super(),this.method=e,this.aNode=t,this.bNode=n,this.cNode=i,this.isMathNode=!0}getInputType(e){let t=this.aNode.getNodeType(e),n=this.bNode?this.bNode.getNodeType(e):null,i=this.cNode?this.cNode.getNodeType(e):null,s=e.isMatrix(t)?0:e.getTypeLength(t),r=e.isMatrix(n)?0:e.getTypeLength(n),c=e.isMatrix(i)?0:e.getTypeLength(i);return s>r&&s>c?t:r>c?n:c>s?i:t}getNodeType(e){let t=this.method;return t===o.LENGTH||t===o.DISTANCE||t===o.DOT?"float":t===o.CROSS?"vec3":t===o.ALL?"bool":t===o.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===o.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){let n=this.method,i=this.getNodeType(e),s=this.getInputType(e),r=this.aNode,c=this.bNode,a=this.cNode,l=e.renderer.coordinateSystem;if(n===o.TRANSFORM_DIRECTION){let u=r,h=c;e.isMatrix(u.getNodeType(e))?h=W(b(h),0):u=W(b(u),0);let d=ee(u,h).xyz;return xi(d).build(e,t)}else{if(n===o.NEGATE)return e.format("( - "+r.build(e,s)+" )",i,t);if(n===o.ONE_MINUS)return ce(1,r).build(e,t);if(n===o.RECIPROCAL)return gn(1,r).build(e,t);if(n===o.DIFFERENCE)return ye(ce(r,c)).build(e,t);{let u=[];return n===o.CROSS||n===o.MOD?u.push(r.build(e,i),c.build(e,i)):l===gt&&n===o.STEP?u.push(r.build(e,e.getTypeLength(r.getNodeType(e))===1?"float":s),c.build(e,s)):l===gt&&(n===o.MIN||n===o.MAX)||n===o.MOD?u.push(r.build(e,s),c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":s)):n===o.REFRACT?u.push(r.build(e,s),c.build(e,s),a.build(e,"float")):n===o.MIX?u.push(r.build(e,s),c.build(e,s),a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":s)):(l===$t&&n===o.ATAN&&c!==null&&(n="atan2"),u.push(r.build(e,s)),c!==null&&u.push(c.build(e,s)),a!==null&&u.push(a.build(e,s))),e.format(`${e.getMethod(n,i)}( ${u.join(", ")} )`,i,t)}}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}};C.ALL="all";C.ANY="any";C.RADIANS="radians";C.DEGREES="degrees";C.EXP="exp";C.EXP2="exp2";C.LOG="log";C.LOG2="log2";C.SQRT="sqrt";C.INVERSE_SQRT="inversesqrt";C.FLOOR="floor";C.CEIL="ceil";C.NORMALIZE="normalize";C.FRACT="fract";C.SIN="sin";C.COS="cos";C.TAN="tan";C.ASIN="asin";C.ACOS="acos";C.ATAN="atan";C.ABS="abs";C.SIGN="sign";C.LENGTH="length";C.NEGATE="negate";C.ONE_MINUS="oneMinus";C.DFDX="dFdx";C.DFDY="dFdy";C.ROUND="round";C.RECIPROCAL="reciprocal";C.TRUNC="trunc";C.FWIDTH="fwidth";C.TRANSPOSE="transpose";C.BITCAST="bitcast";C.EQUALS="equals";C.MIN="min";C.MAX="max";C.MOD="mod";C.STEP="step";C.REFLECT="reflect";C.DISTANCE="distance";C.DIFFERENCE="difference";C.DOT="dot";C.CROSS="cross";C.POW="pow";C.TRANSFORM_DIRECTION="transformDirection";C.MIX="mix";C.CLAMP="clamp";C.REFRACT="refract";C.SMOOTHSTEP="smoothstep";C.FACEFORWARD="faceforward";var i0=y(1e-6),Cw=y(1e6),Lu=y(Math.PI),Nw=y(Math.PI*2),k_=L(C,C.ALL),s0=L(C,C.ANY),r0=L(C,C.RADIANS),o0=L(C,C.DEGREES),H_=L(C,C.EXP),lo=L(C,C.EXP2),Lh=L(C,C.LOG),Nn=L(C,C.LOG2),zn=L(C,C.SQRT),W_=L(C,C.INVERSE_SQRT),Pn=L(C,C.FLOOR),Fh=L(C,C.CEIL),xi=L(C,C.NORMALIZE),vi=L(C,C.FRACT),Wt=L(C,C.SIN),hi=L(C,C.COS),a0=L(C,C.TAN),c0=L(C,C.ASIN),l0=L(C,C.ACOS),q_=L(C,C.ATAN),ye=L(C,C.ABS),Rc=L(C,C.SIGN),pi=L(C,C.LENGTH),u0=L(C,C.NEGATE),h0=L(C,C.ONE_MINUS),X_=L(C,C.DFDX),$_=L(C,C.DFDY),d0=L(C,C.ROUND),f0=L(C,C.RECIPROCAL),Y_=L(C,C.TRUNC),p0=L(C,C.FWIDTH),m0=L(C,C.TRANSPOSE),Pw=L(C,C.BITCAST),g0=L(C,C.EQUALS),Et=L(C,C.MIN),Le=L(C,C.MAX),K_=L(C,C.MOD),Uh=L(C,C.STEP),_0=L(C,C.REFLECT),x0=L(C,C.DISTANCE),y0=L(C,C.DIFFERENCE),Ji=L(C,C.DOT),Bh=L(C,C.CROSS),mn=L(C,C.POW),Z_=L(C,C.POW,2),v0=L(C,C.POW,3),T0=L(C,C.POW,4),S0=L(C,C.TRANSFORM_DIRECTION),b0=o=>ee(Rc(o),mn(ye(o),1/3)),j_=o=>Ji(o,o),fe=L(C,C.MIX),Dn=(o,e=0,t=1)=>F(new C(C.CLAMP,F(o),F(e),F(t))),M0=o=>Dn(o),Q_=L(C,C.REFRACT),Ln=L(C,C.SMOOTHSTEP),J_=L(C,C.FACEFORWARD),A0=w(([o])=>{let n=43758.5453,i=Ji(o.xy,U(12.9898,78.233)),s=K_(i,Lu);return vi(Wt(s).mul(n))}),E0=(o,e,t)=>fe(e,t,o),w0=(o,e,t)=>Ln(e,t,o),R0=(o,e)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),q_(o,e)),Iw=J_,Dw=W_;D("all",k_);D("any",s0);D("equals",g0);D("radians",r0);D("degrees",o0);D("exp",H_);D("exp2",lo);D("log",Lh);D("log2",Nn);D("sqrt",zn);D("inverseSqrt",W_);D("floor",Pn);D("ceil",Fh);D("normalize",xi);D("fract",vi);D("sin",Wt);D("cos",hi);D("tan",a0);D("asin",c0);D("acos",l0);D("atan",q_);D("abs",ye);D("sign",Rc);D("length",pi);D("lengthSq",j_);D("negate",u0);D("oneMinus",h0);D("dFdx",X_);D("dFdy",$_);D("round",d0);D("reciprocal",f0);D("trunc",Y_);D("fwidth",p0);D("atan2",R0);D("min",Et);D("max",Le);D("mod",K_);D("step",Uh);D("reflect",_0);D("distance",x0);D("dot",Ji);D("cross",Bh);D("pow",mn);D("pow2",Z_);D("pow3",v0);D("pow4",T0);D("transformDirection",S0);D("mix",E0);D("clamp",Dn);D("refract",Q_);D("smoothstep",w0);D("faceForward",J_);D("difference",y0);D("saturate",M0);D("cbrt",b0);D("transpose",m0);D("rand",A0);var fp=class extends Y{static get type(){return"ConditionalNode"}constructor(e,t,n=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=n}getNodeType(e){let{ifNode:t,elseNode:n}=e.getNodeProperties(this);if(t===void 0)return this.setup(e),this.getNodeType(e);let i=t.getNodeType(e);if(n!==null){let s=n.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(i))return s}return i}setup(e){let t=this.condNode.cache(),n=this.ifNode.cache(),i=this.elseNode?this.elseNode.cache():null,s=e.context.nodeBlock;e.getDataFromNode(n).parentNodeBlock=s,i!==null&&(e.getDataFromNode(i).parentNodeBlock=s);let r=e.getNodeProperties(this);r.condNode=t,r.ifNode=n.context({nodeBlock:n}),r.elseNode=i?i.context({nodeBlock:i}):null}generate(e,t){let n=this.getNodeType(e),i=e.getDataFromNode(this);if(i.nodeProperty!==void 0)return i.nodeProperty;let{condNode:s,ifNode:r,elseNode:c}=e.getNodeProperties(this),a=t!=="void",l=a?Ov(n).build(e):"";i.nodeProperty=l;let u=s.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${u} ) {

`).addFlowTab();let h=r.build(e,n);if(h&&(a?h=l+" = "+h+";":h="return "+h+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+h+`

`+e.tab+"}"),c!==null){e.addFlowCode(` else {

`).addFlowTab();let d=c.build(e,n);d&&(a?d=l+" = "+d+";":d="return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(l,n,t)}},it=L(fp);D("select",it);var C0=(...o)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),it(...o));D("cond",C0);var Fu=class extends Y{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){let t=e.getContext();e.setContext({...e.context,...this.value});let n=this.node.build(e);return e.setContext(t),n}generate(e,t){let n=e.getContext();e.setContext({...e.context,...this.value});let i=this.node.build(e,t);return e.setContext(n),i}},Oh=L(Fu),N0=(o,e)=>Oh(o,{label:e});D("context",Oh);D("label",N0);var so=class extends Y{static get type(){return"VarNode"}constructor(e,t=null,n=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=n}getHash(e){return this.name||super.getHash(e)}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){let{node:t,name:n,readOnly:i}=this,{renderer:s}=e,r=s.backend.isWebGPUBackend===!0,c=!1,a=!1;i&&(c=e.isDeterministic(t),a=r?i:c);let l=e.getVectorType(this.getNodeType(e)),u=t.build(e,l),h=e.getVarFromNode(this,n,l,void 0,a),d=e.getPropertyName(h),f=d;if(a)if(r)f=c?`const ${d}`:`let ${d}`;else{let m=e.getArrayCount(t);f=`const ${e.getVar(h.type,d,m)}`}return e.addLineFlowCode(`${f} = ${u}`,this),d}},ex=L(so),P0=(o,e=null)=>ex(o,e).append(),I0=(o,e=null)=>ex(o,e,!0).append();D("toVar",P0);D("toConst",I0);var D0=o=>(console.warn('TSL: "temp( node )" is deprecated. Use "Var( node )" or "node.toVar()" instead.'),ex(o));D("temp",D0);var pp=class extends Y{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){let t=e.getNodeProperties(this),n=t.varying;if(n===void 0){let i=this.name,s=this.getNodeType(e);t.varying=n=e.getVaryingFromNode(this,i,s),t.node=this.node}return n.needsInterpolation||(n.needsInterpolation=e.shaderStage==="fragment"),n}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){let t=e.getNodeProperties(this),n=this.setupVarying(e),i=e.shaderStage==="fragment"&&t.reassignPosition===!0&&e.context.needsPositionReassign;if(t.propertyName===void 0||i){let s=this.getNodeType(e),r=e.getPropertyName(n,Jf.VERTEX);e.flowNodeFromShaderStage(Jf.VERTEX,this.node,s,r),t.propertyName=r,i?t.reassignPosition=!1:t.reassignPosition===void 0&&e.context.isPositionNodeInput&&(t.reassignPosition=!0)}return e.getPropertyName(n)}},ft=L(pp),L0=o=>ft(o);D("toVarying",ft);D("toVertexStage",L0);D("varying",(...o)=>(console.warn("TSL.VaryingNode: .varying() has been renamed to .toVarying()."),ft(...o)));D("vertexStage",(...o)=>(console.warn("TSL.VaryingNode: .vertexStage() has been renamed to .toVertexStage()."),ft(...o)));var F0=w(([o])=>{let e=o.mul(.9478672986).add(.0521327014).pow(2.4),t=o.mul(.0773993808),n=o.lessThanEqual(.04045);return fe(e,t,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),U0=w(([o])=>{let e=o.pow(.41666).mul(1.055).sub(.055),t=o.mul(12.92),n=o.lessThanEqual(.0031308);return fe(e,t,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),zc="WorkingColorSpace",tx="OutputColorSpace",Gs=class extends Me{static get type(){return"ColorSpaceNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.source=t,this.target=n}resolveColorSpace(e,t){return t===zc?Ae.workingColorSpace:t===tx?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){let{colorNode:t}=this,n=this.resolveColorSpace(e,this.source),i=this.resolveColorSpace(e,this.target),s=t;return Ae.enabled===!1||n===i||!n||!i||(Ae.getTransfer(n)===as&&(s=W(F0(s.rgb),s.a)),Ae.getPrimaries(n)!==Ae.getPrimaries(i)&&(s=W(dt(Ae._getMatrix(new Q,n,i)).mul(s.rgb),s.a)),Ae.getTransfer(i)===as&&(s=W(U0(s.rgb),s.a))),s}},B0=o=>F(new Gs(F(o),zc,tx)),O0=o=>F(new Gs(F(o),tx,zc)),V0=(o,e)=>F(new Gs(F(o),zc,e)),nx=(o,e)=>F(new Gs(F(o),e,zc)),Lw=(o,e,t)=>F(new Gs(F(o),e,t));D("toOutputColorSpace",B0);D("toWorkingColorSpace",O0);D("workingToColorSpace",V0);D("colorSpaceToWorking",nx);var Fw=class extends gi{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){let t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}},Uu=class extends Y{static get type(){return"ReferenceBaseNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=J.OBJECT}setGroup(e){return this.group=e,this}element(e){return F(new Fw(this,F(e)))}setNodeType(e){let t=X(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){let{properties:t}=this,n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);let e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}},Uw=(o,e,t)=>F(new Uu(o,e,t)),mp=class extends Uu{static get type(){return"RendererReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.renderer=n,this.setGroup(Z)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}},G0=(o,e,t=null)=>F(new mp(o,e,t)),gp=class extends Me{static get type(){return"ToneMappingNode"}constructor(e,t=k0,n=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=n}customCacheKey(){return xc(this.toneMapping)}setup(e){let t=this.colorNode||e.context.color,n=this.toneMapping;if(n===Oi)return t;let i=null,s=e.renderer.library.getToneMappingFunction(n);return s!==null?i=W(s(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=t),i}},z0=(o,e,t)=>F(new gp(o,F(e),F(t))),k0=G0("toneMappingExposure","float");D("toneMapping",(o,e,t)=>z0(e,t,o));var _p=class extends vc{static get type(){return"BufferAttributeNode"}constructor(e,t=null,n=0,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=n,this.bufferOffset=i,this.usage=hr,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;let t=this.getNodeType(e),n=this.value,i=e.getTypeLength(t),s=this.bufferStride||i,r=this.bufferOffset,c=n.isInterleavedBuffer===!0?n:new _r(n,s),a=new Ho(c,i,r);c.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){let t=this.getNodeType(e),n=e.getBufferAttributeFromNode(this,t),i=e.getPropertyName(n),s=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=i,s=i):s=ft(this).build(e,t),s}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}},kc=(o,e=null,t=0,n=0)=>F(new _p(o,e,t,n)),H0=(o,e=null,t=0,n=0)=>kc(o,e,t,n).setUsage(ki),Bu=(o,e=null,t=0,n=0)=>kc(o,e,t,n).setInstanced(!0),xp=(o,e=null,t=0,n=0)=>H0(o,e,t,n).setInstanced(!0);D("toAttribute",o=>kc(o.value));var yp=class extends Y{static get type(){return"ComputeNode"}constructor(e,t,n=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=n,this.dispatchCount=0,this.version=1,this.name="",this.updateBeforeType=J.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}label(e){return this.name=e,this}updateDispatchCount(){let{count:e,workgroupSize:t}=this,n=t[0];for(let i=1;i<t.length;i++)n*=t[i];this.dispatchCount=Math.ceil(e/n)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){let{shaderStage:t}=e;if(t==="compute"){let n=this.computeNode.build(e,"void");n!==""&&e.addLineFlowCode(n,this)}}},W0=(o,e,t)=>F(new yp(F(o),e,t));D("compute",W0);var vp=class extends Y{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){let t=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);let i=this.node.getNodeType(e);return e.setCache(t),i}build(e,...t){let n=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);let s=this.node.build(e,...t);return e.setCache(n),s}},hc=(o,e)=>F(new vp(F(o),e));D("cache",hc);var Tp=class extends Y{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){let t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}},q0=L(Tp);D("bypass",q0);var Ou=class extends Y{static get type(){return"RemapNode"}constructor(e,t,n,i=y(0),s=y(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=n,this.outLowNode=i,this.outHighNode=s,this.doClamp=!0}setup(){let{node:e,inLowNode:t,inHighNode:n,outLowNode:i,outHighNode:s,doClamp:r}=this,c=e.sub(t).div(n.sub(t));return r===!0&&(c=c.clamp()),c.mul(s.sub(i)).add(i)}},X0=L(Ou,null,null,{doClamp:!1}),$0=L(Ou);D("remap",X0);D("remapClamp",$0);var ro=class extends Y{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){let n=this.getNodeType(e),i=this.snippet;if(n==="void")e.addLineFlowCode(i,this);else return e.format(`( ${i} )`,n,t)}},ji=L(ro),Y0=o=>(o?it(o,ji("discard")):ji("discard")).append(),Bw=()=>ji("return").append();D("discard",Y0);var Sp=class extends Me{static get type(){return"RenderOutputNode"}constructor(e,t,n){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=n,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color,n=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||Oi,i=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||ui;return n!==Oi&&(t=t.toneMapping(n)),i!==ui&&i!==Ae.workingColorSpace&&(t=t.workingToColorSpace(i)),t}},K0=(o,e=null,t=null)=>F(new Sp(F(o),e,t));D("renderOutput",K0);function Ow(o){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",o)}var Vu=class extends Y{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){let n=this.getAttributeName(e);if(e.hasGeometryAttribute(n)){let i=e.geometry.getAttribute(n);t=e.getTypeFromAttribute(i)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){let t=this.getAttributeName(e),n=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){let s=e.geometry.getAttribute(t),r=e.getTypeFromAttribute(s),c=e.getAttribute(t,r);return e.shaderStage==="vertex"?e.format(c.name,r,n):ft(this).build(e,n)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(n)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}},Fn=(o,e)=>F(new Vu(o,e)),be=(o=0)=>Fn("uv"+(o>0?o:""),"vec2"),bp=class extends Y{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){let n=this.textureNode.build(e,"property"),i=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${n}, ${i} )`,this.getNodeType(e),t)}},Zi=L(bp),Mp=class extends Vs{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=J.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){let e=this.texture,t=e.images,n=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(n&&n.width!==void 0){let{width:i,height:s}=n;this.value=Math.log2(Math.max(i,s))}}},Z0=L(Mp),Jt=class extends Vs{static get type(){return"TextureNode"}constructor(e,t=null,n=null,i=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=n,this.biasNode=i,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=J.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===ke?"uvec4":this.value.type===tt?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return be(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=X(this.value.matrix)),this._matrixUniform.mul(b(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?J.RENDER:J.NONE,this}setupUV(e,t){let n=this.value;return e.isFlipY()&&(n.image instanceof ImageBitmap&&n.flipY===!0||n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0||n.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(v(Zi(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){let t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let n=this.value;if(!n||n.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let i=this.uvNode;(i===null||e.context.forceUVContext===!0)&&e.context.getUV&&(i=e.context.getUV(this)),i||(i=this.getDefaultUV()),this.updateMatrix===!0&&(i=this.getTransformedUV(i)),i=this.setupUV(e,i);let s=this.levelNode;s===null&&e.context.getTextureLevel&&(s=e.context.getTextureLevel(this)),t.uvNode=i,t.levelNode=s,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,n,i,s,r,c,a){let l=this.value,u;return i?u=e.generateTextureLevel(l,t,n,i,r):s?u=e.generateTextureBias(l,t,n,s,r):a?u=e.generateTextureGrad(l,t,n,a,r):c?u=e.generateTextureCompare(l,t,n,c,r):this.sampler===!1?u=e.generateTextureLoad(l,t,n,r):u=e.generateTexture(l,t,n,r),u}generate(e,t){let n=this.value,i=e.getNodeProperties(this),s=super.generate(e,"property");if(t==="sampler")return s+"_sampler";if(e.isReference(t))return s;{let r=e.getDataFromNode(this),c=r.propertyName;if(c===void 0){let{uvNode:u,levelNode:h,biasNode:d,compareNode:f,depthNode:m,gradNode:g}=i,_=this.generateUV(e,u),x=h?h.build(e,"float"):null,T=d?d.build(e,"float"):null,A=m?m.build(e,"int"):null,E=f?f.build(e,"float"):null,N=g?[g[0].build(e,"vec2"),g[1].build(e,"vec2")]:null,R=e.getVarFromNode(this);c=e.getPropertyName(R);let P=this.generateSnippet(e,s,_,x,T,A,E,N);e.addLineFlowCode(`${c} = ${P}`,this),r.snippet=P,r.propertyName=c}let a=c,l=this.getNodeType(e);return e.needsToWorkingColorSpace(n)&&(a=nx(ji(a,l),n.colorSpace).setup(e).build(e,l)),e.format(a,l,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){let t=this.clone();return t.uvNode=F(e),t.referenceNode=this.getSelf(),F(t)}blur(e){let t=this.clone();return t.biasNode=F(e).mul(Z0(t)),t.referenceNode=this.getSelf(),F(t)}level(e){let t=this.clone();return t.levelNode=F(e),t.referenceNode=this.getSelf(),F(t)}size(e){return Zi(this,e)}bias(e){let t=this.clone();return t.biasNode=F(e),t.referenceNode=this.getSelf(),F(t)}compare(e){let t=this.clone();return t.compareNode=F(e),t.referenceNode=this.getSelf(),F(t)}grad(e,t){let n=this.clone();return n.gradNode=[F(e),F(t)],n.referenceNode=this.getSelf(),F(n)}depth(e){let t=this.clone();return t.depthNode=F(e),t.referenceNode=this.getSelf(),F(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){let e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){let e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}},ae=L(Jt),Pe=(...o)=>ae(...o).setSampler(!1),Vw=o=>(o.isNode===!0?o:ae(o)).convert("sampler"),Cc=class extends Vs{static get type(){return"BufferNode"}constructor(e,t,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=n}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}},Hc=(o,e,t)=>F(new Cc(o,e,t)),Ap=class extends gi{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){let t=super.generate(e),n=this.getNodeType(),i=this.node.getPaddedType();return e.format(t,i,n)}},Gu=class extends Cc{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=t===null?Ki(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=J.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){let e=this.elementType,t="vec4";return e==="mat2"?t="mat2":/mat/.test(e)===!0?t="mat4":e.charAt(0)==="i"?t="ivec4":e.charAt(0)==="u"&&(t="uvec4"),t}update(){let{array:e,value:t}=this,n=this.elementType;if(n==="float"||n==="int"||n==="uint")for(let i=0;i<e.length;i++){let s=i*4;t[s]=e[i]}else if(n==="color")for(let i=0;i<e.length;i++){let s=i*4,r=e[i];t[s]=r.r,t[s+1]=r.g,t[s+2]=r.b||0}else if(n==="mat2")for(let i=0;i<e.length;i++){let s=i*4,r=e[i];t[s]=r.elements[0],t[s+1]=r.elements[1],t[s+2]=r.elements[2],t[s+3]=r.elements[3]}else if(n==="mat3")for(let i=0;i<e.length;i++){let s=i*16,r=e[i];t[s]=r.elements[0],t[s+1]=r.elements[1],t[s+2]=r.elements[2],t[s+4]=r.elements[3],t[s+5]=r.elements[4],t[s+6]=r.elements[5],t[s+8]=r.elements[6],t[s+9]=r.elements[7],t[s+10]=r.elements[8],t[s+15]=1}else if(n==="mat4")for(let i=0;i<e.length;i++){let s=i*16,r=e[i];for(let c=0;c<r.elements.length;c++)t[s+c]=r.elements[c]}else for(let i=0;i<e.length;i++){let s=i*4,r=e[i];t[s]=r.x,t[s+1]=r.y,t[s+2]=r.z||0,t[s+3]=r.w||0}}setup(e){let t=this.array.length,n=this.elementType,i=Float32Array,s=this.paddedType,r=e.getTypeLength(s);return n.charAt(0)==="i"&&(i=Int32Array),n.charAt(0)==="u"&&(i=Uint32Array),this.value=new i(t*r),this.bufferCount=t,this.bufferType=s,super.setup(e)}element(e){return F(new Ap(this,F(e)))}},pn=(o,e)=>F(new Gu(o,e)),Gw=(o,e)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),F(new Gu(o,e))),ix=X(0,"uint").setGroup(Ph("cameraIndex")).toVarying("v_cameraIndex"),Xi=X("float").label("cameraNear").setGroup(Z).onRenderUpdate(({camera:o})=>o.near),$i=X("float").label("cameraFar").setGroup(Z).onRenderUpdate(({camera:o})=>o.far),Hs=w(({camera:o})=>{let e;if(o.isArrayCamera&&o.cameras.length>0){let t=[];for(let i of o.cameras)t.push(i.projectionMatrix);e=pn(t).setGroup(Z).label("cameraProjectionMatrices").element(ix).toVar("cameraProjectionMatrix")}else e=X("mat4").label("cameraProjectionMatrix").setGroup(Z).onRenderUpdate(({camera:t})=>t.projectionMatrix);return e}).once()(),zw=X("mat4").label("cameraProjectionMatrixInverse").setGroup(Z).onRenderUpdate(({camera:o})=>o.projectionMatrixInverse),Ct=w(({camera:o})=>{let e;if(o.isArrayCamera&&o.cameras.length>0){let t=[];for(let i of o.cameras)t.push(i.matrixWorldInverse);e=pn(t).setGroup(Z).label("cameraViewMatrices").element(ix).toVar("cameraViewMatrix")}else e=X("mat4").label("cameraViewMatrix").setGroup(Z).onRenderUpdate(({camera:t})=>t.matrixWorldInverse);return e}).once()(),kw=X("mat4").label("cameraWorldMatrix").setGroup(Z).onRenderUpdate(({camera:o})=>o.matrixWorld),Hw=X("mat3").label("cameraNormalMatrix").setGroup(Z).onRenderUpdate(({camera:o})=>o.normalMatrix),j0=X(new M).label("cameraPosition").setGroup(Z).onRenderUpdate(({camera:o},e)=>e.value.setFromMatrixPosition(o.matrixWorld)),Qe=class o extends Y{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=J.OBJECT,this._uniformNode=new Vs(null)}getNodeType(){let e=this.scope;if(e===o.WORLD_MATRIX)return"mat4";if(e===o.POSITION||e===o.VIEW_POSITION||e===o.DIRECTION||e===o.SCALE)return"vec3"}update(e){let t=this.object3d,n=this._uniformNode,i=this.scope;if(i===o.WORLD_MATRIX)n.value=t.matrixWorld;else if(i===o.POSITION)n.value=n.value||new M,n.value.setFromMatrixPosition(t.matrixWorld);else if(i===o.SCALE)n.value=n.value||new M,n.value.setFromMatrixScale(t.matrixWorld);else if(i===o.DIRECTION)n.value=n.value||new M,t.getWorldDirection(n.value);else if(i===o.VIEW_POSITION){let s=e.camera;n.value=n.value||new M,n.value.setFromMatrixPosition(t.matrixWorld),n.value.applyMatrix4(s.matrixWorldInverse)}}generate(e){let t=this.scope;return t===o.WORLD_MATRIX?this._uniformNode.nodeType="mat4":(t===o.POSITION||t===o.VIEW_POSITION||t===o.DIRECTION||t===o.SCALE)&&(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}};Qe.WORLD_MATRIX="worldMatrix";Qe.POSITION="position";Qe.SCALE="scale";Qe.VIEW_POSITION="viewPosition";Qe.DIRECTION="direction";var Ww=L(Qe,Qe.DIRECTION),qw=L(Qe,Qe.WORLD_MATRIX),Q0=L(Qe,Qe.POSITION),Xw=L(Qe,Qe.SCALE),$w=L(Qe,Qe.VIEW_POSITION),en=class extends Qe{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}},Yw=O(en,en.DIRECTION),Qt=O(en,en.WORLD_MATRIX),Kw=O(en,en.POSITION),Zw=O(en,en.SCALE),jw=O(en,en.VIEW_POSITION),J0=X(new Q).onObjectUpdate(({object:o},e)=>e.value.getNormalMatrix(o.matrixWorld)),Qw=X(new ue).onObjectUpdate(({object:o},e)=>e.value.copy(o.matrixWorld).invert()),Ws=w(o=>o.renderer.nodes.modelViewMatrix||eT).once()().toVar("modelViewMatrix"),eT=Ct.mul(Qt),Jw=w(o=>(o.context.isHighPrecisionModelViewMatrix=!0,X("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),eR=w(o=>{let e=o.context.isHighPrecisionModelViewMatrix;return X("mat3").onObjectUpdate(({object:t,camera:n})=>(e!==!0&&t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),Wc=Fn("position","vec3"),Ee=Wc.toVarying("positionLocal"),zu=Wc.toVarying("positionPrevious"),mi=Qt.mul(Ee).xyz.toVarying("v_positionWorld").context({needsPositionReassign:!0}),sx=Ee.transformDirection(Qt).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection").context({needsPositionReassign:!0}),De=w(o=>o.context.setupPositionView(),"vec3").once()().toVarying("v_positionView").context({needsPositionReassign:!0}),Te=De.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection"),Ep=class extends Y{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){let{renderer:t,material:n}=e;return t.coordinateSystem===gt&&n.side===St?"false":e.getFrontFacing()}},tT=O(Ep),qc=y(tT).mul(2).sub(1),Vh=Fn("normal","vec3"),wt=w(o=>o.geometry.hasAttribute("normal")===!1?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),b(0,1,0)):Vh,"vec3").once()().toVar("normalLocal"),nT=De.dFdx().cross(De.dFdy()).normalize().toVar("normalFlat"),tn=w(o=>{let e;return o.material.flatShading===!0?e=nT:e=ft(rx(wt),"v_normalView").normalize(),e},"vec3").once()().toVar("normalView"),Gh=ft(tn.transformDirection(Ct),"v_normalWorld").normalize().toVar("normalWorld"),Ie=w(o=>o.context.setupNormal().context({getUV:null}),"vec3").once()().mul(qc).toVar("transformedNormalView"),zh=Ie.transformDirection(Ct).toVar("transformedNormalWorld"),to=w(o=>o.context.setupClearcoatNormal().context({getUV:null}),"vec3").once()().mul(qc).toVar("transformedClearcoatNormalView"),iT=w(([o,e=Qt])=>{let t=dt(e),n=o.div(b(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(n).xyz}),rx=w(([o],e)=>{let t=e.renderer.nodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(o);let n=J0.mul(o);return Ct.transformDirection(n)}),sT=X(0).onReference(({material:o})=>o).onRenderUpdate(({material:o})=>o.refractionRatio),rT=Te.negate().reflect(Ie),oT=Te.negate().refract(Ie,sT),aT=rT.transformDirection(Ct).toVar("reflectVector"),cT=oT.transformDirection(Ct).toVar("reflectVector"),wp=class extends Jt{static get type(){return"CubeTextureNode"}constructor(e,t=null,n=null,i=null){super(e,t,n,i),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){let e=this.value;return e.mapping===li?aT:e.mapping===Vi?cT:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),b(0,0,0))}setUpdateMatrix(){}setupUV(e,t){let n=this.value;return e.renderer.coordinateSystem===$t||!n.isRenderTargetTexture?b(t.x.negate(),t.yz):t}generateUV(e,t){return t.build(e,"vec3")}},uo=L(wp),Rp=class extends gi{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){let t=super.generate(e),n=this.referenceNode.getNodeType(),i=this.getNodeType();return e.format(t,n,i)}},ho=class extends Y{static get type(){return"ReferenceNode"}constructor(e,t,n=null,i=null){super(),this.property=e,this.uniformType=t,this.object=n,this.count=i,this.properties=e.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=J.OBJECT}element(e){return F(new Rp(this,F(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;this.count!==null?t=Hc(null,e,this.count):Array.isArray(this.getValueFromReference())?t=pn(null,e):e==="texture"?t=ae(null):e==="cubeTexture"?t=uo(null):t=X(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){let{properties:t}=this,n=e[t[0]];for(let i=1;i<t.length;i++)n=n[t[i]];return n}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);let e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}},me=(o,e,t)=>F(new ho(o,e,t)),Cp=(o,e,t,n)=>F(new ho(o,e,n,t)),Np=class extends ho{static get type(){return"MaterialReferenceNode"}constructor(e,t,n=null){super(e,t,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}},fi=(o,e,t=null)=>F(new Np(o,e,t)),kh=w(o=>(o.geometry.hasAttribute("tangent")===!1&&o.geometry.computeTangents(),Fn("tangent","vec4")))(),Xc=kh.xyz.toVar("tangentLocal"),$c=Ws.mul(W(Xc,0)).xyz.toVarying("v_tangentView").normalize().toVar("tangentView"),lT=$c.transformDirection(Ct).toVarying("v_tangentWorld").normalize().toVar("tangentWorld"),ox=$c.toVar("transformedTangentView"),tR=ox.transformDirection(Ct).normalize().toVar("transformedTangentWorld"),Yc=o=>o.mul(kh.w).xyz,nR=ft(Yc(Vh.cross(kh)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),iR=ft(Yc(wt.cross(Xc)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),uT=ft(Yc(tn.cross($c)),"v_bitangentView").normalize().toVar("bitangentView"),sR=ft(Yc(Gh.cross(lT)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),hT=Yc(Ie.cross(ox)).normalize().toVar("transformedBitangentView"),rR=hT.transformDirection(Ct).normalize().toVar("transformedBitangentWorld"),Fs=dt($c,uT,tn),dT=Te.mul(Fs),oR=(o,e)=>o.sub(dT.mul(e)),fT=(()=>{let o=Os.cross(Te);return o=o.cross(Os).normalize(),o=fe(o,Ie,qi.mul(Rn.oneMinus()).oneMinus().pow2().pow2()).normalize(),o})(),aR=w(o=>{let{eye_pos:e,surf_norm:t,mapN:n,uv:i}=o,s=e.dFdx(),r=e.dFdy(),c=i.dFdx(),a=i.dFdy(),l=t,u=r.cross(l),h=l.cross(s),d=u.mul(c.x).add(h.mul(a.x)),f=u.mul(c.y).add(h.mul(a.y)),m=d.dot(d).max(f.dot(f)),g=qc.mul(m.inverseSqrt());return Be(d.mul(n.x,g),f.mul(n.y,g),l.mul(n.z)).normalize()}),Pp=class extends Me{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Mn}setup(e){let{normalMapType:t,scaleNode:n}=this,i=this.node.mul(2).sub(1);n!==null&&(i=b(i.xy.mul(n),i.z));let s=null;return t===Qd?s=rx(i):t===Mn&&(e.hasGeometryAttribute("tangent")===!0?s=Fs.mul(i).normalize():s=aR({eye_pos:De,surf_norm:tn,mapN:i,uv:be()})),s}},Ip=L(Pp),cR=w(({textureNode:o,bumpScale:e})=>{let t=i=>o.cache().context({getUV:s=>i(s.uvNode||be()),forceUVContext:!0}),n=y(t(i=>i));return U(y(t(i=>i.add(i.dFdx()))).sub(n),y(t(i=>i.add(i.dFdy()))).sub(n)).mul(e)}),lR=w(o=>{let{surf_pos:e,surf_norm:t,dHdxy:n}=o,i=e.dFdx().normalize(),s=e.dFdy().normalize(),r=t,c=s.cross(r),a=r.cross(i),l=i.dot(c).mul(qc),u=l.sign().mul(n.x.mul(c).add(n.y.mul(a)));return l.abs().mul(t).sub(u).normalize()}),Dp=class extends Me{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){let e=this.scaleNode!==null?this.scaleNode:1,t=cR({textureNode:this.textureNode,bumpScale:e});return lR({surf_pos:De,surf_norm:tn,dHdxy:t})}},pT=L(Dp),py=new Map,B=class o extends Y{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let n=py.get(e);return n===void 0&&(n=fi(e,t),py.set(e,n)),n}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){let t=e.context.material,n=this.scope,i=null;if(n===o.COLOR){let s=t.color!==void 0?this.getColor(n):b();t.map&&t.map.isTexture===!0?i=s.mul(this.getTexture("map")):i=s}else if(n===o.OPACITY){let s=this.getFloat(n);t.alphaMap&&t.alphaMap.isTexture===!0?i=s.mul(this.getTexture("alpha")):i=s}else if(n===o.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?i=this.getTexture("specular").r:i=y(1);else if(n===o.SPECULAR_INTENSITY){let s=this.getFloat(n);t.specularIntensityMap&&t.specularIntensityMap.isTexture===!0?i=s.mul(this.getTexture(n).a):i=s}else if(n===o.SPECULAR_COLOR){let s=this.getColor(n);t.specularColorMap&&t.specularColorMap.isTexture===!0?i=s.mul(this.getTexture(n).rgb):i=s}else if(n===o.ROUGHNESS){let s=this.getFloat(n);t.roughnessMap&&t.roughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).g):i=s}else if(n===o.METALNESS){let s=this.getFloat(n);t.metalnessMap&&t.metalnessMap.isTexture===!0?i=s.mul(this.getTexture(n).b):i=s}else if(n===o.EMISSIVE){let s=this.getFloat("emissiveIntensity"),r=this.getColor(n).mul(s);t.emissiveMap&&t.emissiveMap.isTexture===!0?i=r.mul(this.getTexture(n)):i=r}else if(n===o.NORMAL)t.normalMap?(i=Ip(this.getTexture("normal"),this.getCache("normalScale","vec2")),i.normalMapType=t.normalMapType):t.bumpMap?i=pT(this.getTexture("bump").r,this.getFloat("bumpScale")):i=tn;else if(n===o.CLEARCOAT){let s=this.getFloat(n);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?i=s.mul(this.getTexture(n).r):i=s}else if(n===o.CLEARCOAT_ROUGHNESS){let s=this.getFloat(n);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).r):i=s}else if(n===o.CLEARCOAT_NORMAL)t.clearcoatNormalMap?i=Ip(this.getTexture(n),this.getCache(n+"Scale","vec2")):i=tn;else if(n===o.SHEEN){let s=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?i=s.mul(this.getTexture("sheenColor").rgb):i=s}else if(n===o.SHEEN_ROUGHNESS){let s=this.getFloat(n);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).a):i=s,i=i.clamp(.07,1)}else if(n===o.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){let s=this.getTexture(n);i=Nh(Qr.x,Qr.y,Qr.y.negate(),Qr.x).mul(s.rg.mul(2).sub(U(1)).normalize().mul(s.b))}else i=Qr;else if(n===o.IRIDESCENCE_THICKNESS){let s=me("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){let r=me("0","float",t.iridescenceThicknessRange);i=s.sub(r).mul(this.getTexture(n).g).add(r)}else i=s}else if(n===o.TRANSMISSION){let s=this.getFloat(n);t.transmissionMap?i=s.mul(this.getTexture(n).r):i=s}else if(n===o.THICKNESS){let s=this.getFloat(n);t.thicknessMap?i=s.mul(this.getTexture(n).g):i=s}else if(n===o.IOR)i=this.getFloat(n);else if(n===o.LIGHT_MAP)i=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===o.AO)i=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{let s=this.getNodeType(e);i=this.getCache(n,s)}return i}};B.ALPHA_TEST="alphaTest";B.COLOR="color";B.OPACITY="opacity";B.SHININESS="shininess";B.SPECULAR="specular";B.SPECULAR_STRENGTH="specularStrength";B.SPECULAR_INTENSITY="specularIntensity";B.SPECULAR_COLOR="specularColor";B.REFLECTIVITY="reflectivity";B.ROUGHNESS="roughness";B.METALNESS="metalness";B.NORMAL="normal";B.CLEARCOAT="clearcoat";B.CLEARCOAT_ROUGHNESS="clearcoatRoughness";B.CLEARCOAT_NORMAL="clearcoatNormal";B.EMISSIVE="emissive";B.ROTATION="rotation";B.SHEEN="sheen";B.SHEEN_ROUGHNESS="sheenRoughness";B.ANISOTROPY="anisotropy";B.IRIDESCENCE="iridescence";B.IRIDESCENCE_IOR="iridescenceIOR";B.IRIDESCENCE_THICKNESS="iridescenceThickness";B.IOR="ior";B.TRANSMISSION="transmission";B.THICKNESS="thickness";B.ATTENUATION_DISTANCE="attenuationDistance";B.ATTENUATION_COLOR="attenuationColor";B.LINE_SCALE="scale";B.LINE_DASH_SIZE="dashSize";B.LINE_GAP_SIZE="gapSize";B.LINE_WIDTH="linewidth";B.LINE_DASH_OFFSET="dashOffset";B.POINT_SIZE="size";B.DISPERSION="dispersion";B.LIGHT_MAP="light";B.AO="ao";var mT=O(B,B.ALPHA_TEST),gT=O(B,B.COLOR),_T=O(B,B.SHININESS),xT=O(B,B.EMISSIVE),ax=O(B,B.OPACITY),yT=O(B,B.SPECULAR),Lp=O(B,B.SPECULAR_INTENSITY),vT=O(B,B.SPECULAR_COLOR),dc=O(B,B.SPECULAR_STRENGTH),Tu=O(B,B.REFLECTIVITY),TT=O(B,B.ROUGHNESS),ST=O(B,B.METALNESS),bT=O(B,B.NORMAL),MT=O(B,B.CLEARCOAT),AT=O(B,B.CLEARCOAT_ROUGHNESS),ET=O(B,B.CLEARCOAT_NORMAL),wT=O(B,B.ROTATION),RT=O(B,B.SHEEN),CT=O(B,B.SHEEN_ROUGHNESS),NT=O(B,B.ANISOTROPY),PT=O(B,B.IRIDESCENCE),IT=O(B,B.IRIDESCENCE_IOR),DT=O(B,B.IRIDESCENCE_THICKNESS),LT=O(B,B.TRANSMISSION),FT=O(B,B.THICKNESS),UT=O(B,B.IOR),BT=O(B,B.ATTENUATION_DISTANCE),OT=O(B,B.ATTENUATION_COLOR),VT=O(B,B.LINE_SCALE),GT=O(B,B.LINE_DASH_SIZE),zT=O(B,B.LINE_GAP_SIZE),uR=O(B,B.LINE_WIDTH),kT=O(B,B.LINE_DASH_OFFSET),HT=O(B,B.POINT_SIZE),WT=O(B,B.DISPERSION),cx=O(B,B.LIGHT_MAP),qT=O(B,B.AO),Qr=X(new H).onReference(function(o){return o.material}).onRenderUpdate(function({material:o}){this.value.set(o.anisotropy*Math.cos(o.anisotropyRotation),o.anisotropy*Math.sin(o.anisotropyRotation))}),lx=w(o=>o.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection"),He=class o extends Y{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){let t=this.getNodeType(e),n=this.scope,i;if(n===o.VERTEX)i=e.getVertexIndex();else if(n===o.INSTANCE)i=e.getInstanceIndex();else if(n===o.DRAW)i=e.getDrawIndex();else if(n===o.INVOCATION_LOCAL)i=e.getInvocationLocalIndex();else if(n===o.INVOCATION_SUBGROUP)i=e.getInvocationSubgroupIndex();else if(n===o.SUBGROUP)i=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let s;return e.shaderStage==="vertex"||e.shaderStage==="compute"?s=i:s=ft(this).build(e,t),s}};He.VERTEX="vertex";He.INSTANCE="instance";He.SUBGROUP="subgroup";He.INVOCATION_LOCAL="invocationLocal";He.INVOCATION_SUBGROUP="invocationSubgroup";He.DRAW="draw";var XT=O(He,He.VERTEX),Kc=O(He,He.INSTANCE),hR=O(He,He.SUBGROUP),dR=O(He,He.INVOCATION_SUBGROUP),fR=O(He,He.INVOCATION_LOCAL),$T=O(He,He.DRAW),ku=class extends Y{static get type(){return"InstanceNode"}constructor(e,t,n){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=n,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=J.FRAME,this.buffer=null,this.bufferColor=null}setup(e){let{count:t,instanceMatrix:n,instanceColor:i}=this,{instanceMatrixNode:s,instanceColorNode:r}=this;if(s===null){if(t<=1e3)s=Hc(n.array,"mat4",Math.max(t,1)).element(Kc);else{let a=new ya(n.array,16,1);this.buffer=a;let l=n.usage===ki?xp:Bu,u=[l(a,"vec4",16,0),l(a,"vec4",16,4),l(a,"vec4",16,8),l(a,"vec4",16,12)];s=Bs(...u)}this.instanceMatrixNode=s}if(i&&r===null){let a=new ps(i.array,3),l=i.usage===ki?xp:Bu;this.bufferColor=a,r=b(l(a,"vec3",3,0)),this.instanceColorNode=r}let c=s.mul(Ee).xyz;if(Ee.assign(c),e.hasGeometryAttribute("normal")){let a=iT(wt,s);wt.assign(a)}this.instanceColorNode!==null&&bc("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==ki&&this.buffer!==null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==ki&&this.bufferColor!==null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}},pR=L(ku),Fp=class extends ku{static get type(){return"InstancedMeshNode"}constructor(e){let{count:t,instanceMatrix:n,instanceColor:i}=e;super(t,n,i),this.instancedMesh=e}},YT=L(Fp),Up=class extends Y{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=Kc:this.batchingIdNode=$T);let n=w(([m])=>{let g=v(Zi(Pe(this.batchMesh._indirectTexture),0)),_=v(m).modInt(g),x=v(m).div(g);return Pe(this.batchMesh._indirectTexture,$e(_,x)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(v(this.batchingIdNode)),i=this.batchMesh._matricesTexture,s=Zi(Pe(i),0),r=y(n).mul(4).toInt().toVar(),c=r.modInt(s),a=r.div(v(s)),l=Bs(Pe(i,$e(c,a)),Pe(i,$e(c.add(1),a)),Pe(i,$e(c.add(2),a)),Pe(i,$e(c.add(3),a))),u=this.batchMesh._colorsTexture;if(u!==null){let g=w(([_])=>{let x=Zi(Pe(u),0).x,T=_,A=T.modInt(x),E=T.div(x);return Pe(u,$e(A,E)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(n);bc("vec3","vBatchColor").assign(g)}let h=dt(l);Ee.assign(l.mul(Ee));let d=wt.div(b(h[0].dot(h[0]),h[1].dot(h[1]),h[2].dot(h[2]))),f=h.mul(d).xyz;wt.assign(f),e.hasGeometryAttribute("tangent")&&Xc.mulAssign(h)}},KT=L(Up),my=new WeakMap,Hu=class extends Y{static get type(){return"SkinningNode"}constructor(e,t=!1){super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=J.OBJECT,this.skinIndexNode=Fn("skinIndex","uvec4"),this.skinWeightNode=Fn("skinWeight","vec4");let n,i,s;t?(n=me("bindMatrix","mat4"),i=me("bindMatrixInverse","mat4"),s=Cp("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(n=X(e.bindMatrix,"mat4"),i=X(e.bindMatrixInverse,"mat4"),s=Hc(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=n,this.bindMatrixInverseNode=i,this.boneMatricesNode=s,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=Ee){let{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:s,bindMatrixInverseNode:r}=this,c=e.element(n.x),a=e.element(n.y),l=e.element(n.z),u=e.element(n.w),h=s.mul(t),d=Be(c.mul(i.x).mul(h),a.mul(i.y).mul(h),l.mul(i.z).mul(h),u.mul(i.w).mul(h));return r.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=wt){let{skinIndexNode:n,skinWeightNode:i,bindMatrixNode:s,bindMatrixInverseNode:r}=this,c=e.element(n.x),a=e.element(n.y),l=e.element(n.z),u=e.element(n.w),h=Be(i.x.mul(c),i.y.mul(a),i.z.mul(l),i.w.mul(u));return h=r.mul(h).mul(s),h.transformDirection(t).xyz}getPreviousSkinnedPosition(e){let t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Cp("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,zu)}needsPreviousBoneMatrices(e){let t=e.renderer.getMRT();return t&&t.has("velocity")||_v(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&zu.assign(this.getPreviousSkinnedPosition(e));let t=this.getSkinnedPosition();if(Ee.assign(t),e.hasGeometryAttribute("normal")){let n=this.getSkinnedNormal();wt.assign(n),e.hasGeometryAttribute("tangent")&&Xc.assign(n)}}generate(e,t){if(t!=="void")return Ee.build(e,t)}update(e){let n=(this.useReference?e.object:this.skinnedMesh).skeleton;my.get(n)!==e.frameId&&(my.set(n,e.frameId),this.previousBoneMatricesNode!==null&&n.previousBoneMatrices.set(n.boneMatrices),n.update())}},mR=o=>F(new Hu(o)),ZT=o=>F(new Hu(o,!0)),Bp=class extends Y{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){let t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;let n={};for(let s=0,r=this.params.length-1;s<r;s++){let c=this.params[s],a=c.isNode!==!0&&c.name||this.getVarName(s),l=c.isNode!==!0&&c.type||"int";n[a]=ji(a,l)}let i=e.addStack();return t.returnsNode=this.params[this.params.length-1](n,i,e),t.stackNode=i,e.removeStack(),t}getNodeType(e){let{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){let t=this.getProperties(e),n=this.params,i=t.stackNode;for(let c=0,a=n.length-1;c<a;c++){let l=n[c],u=null,h=null,d=null,f=null,m=null,g=null;l.isNode?(f="int",d=this.getVarName(c),u="0",h=l.build(e,f),m="<"):(f=l.type||"int",d=l.name||this.getVarName(c),u=l.start,h=l.end,m=l.condition,g=l.update,typeof u=="number"?u=e.generateConst(f,u):u&&u.isNode&&(u=u.build(e,f)),typeof h=="number"?h=e.generateConst(f,h):h&&h.isNode&&(h=h.build(e,f)),u!==void 0&&h===void 0?(u=u+" - 1",h="0",m=">="):h!==void 0&&u===void 0&&(u="0",m="<"),m===void 0&&(Number(u)>Number(h)?m=">=":m="<"));let _={start:u,end:h,condition:m},x=_.start,T=_.end,A="",E="",N="";g||(f==="int"||f==="uint"?m.includes("<")?g="++":g="--":m.includes("<")?g="+= 1.":g="-= 1."),A+=e.getVar(f,d)+" = "+x,E+=d+" "+m+" "+T,N+=d+" "+g;let R=`for ( ${A}; ${E}; ${N} )`;e.addFlowCode((c===0?`
`:"")+e.tab+R+` {

`).addFlowTab()}let s=i.build(e,"void"),r=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+s);for(let c=0,a=this.params.length-1;c<a;c++)e.addFlowCode((c===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),r}},pe=(...o)=>F(new Bp(Us(o,"int"))).append(),gR=()=>ji("continue").append(),jT=()=>ji("break").append(),_R=(...o)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),pe(...o)),vf=new WeakMap,kt=new re,gy=w(({bufferMap:o,influence:e,stride:t,width:n,depth:i,offset:s})=>{let r=v(XT).mul(t).add(s),c=r.div(n),a=r.sub(c.mul(n));return Pe(o,$e(a,c)).depth(i).mul(e)});function xR(o){let e=o.morphAttributes.position!==void 0,t=o.morphAttributes.normal!==void 0,n=o.morphAttributes.color!==void 0,i=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,s=i!==void 0?i.length:0,r=vf.get(o);if(r===void 0||r.count!==s){let x=function(){g.dispose(),vf.delete(o),o.removeEventListener("dispose",x)};r!==void 0&&r.texture.dispose();let c=o.morphAttributes.position||[],a=o.morphAttributes.normal||[],l=o.morphAttributes.color||[],u=0;e===!0&&(u=1),t===!0&&(u=2),n===!0&&(u=3);let h=o.attributes.position.count*u,d=1,f=4096;h>f&&(d=Math.ceil(h/f),h=f);let m=new Float32Array(h*d*4*s),g=new Oo(m,h,d,s);g.type=yt,g.needsUpdate=!0;let _=u*4;for(let T=0;T<s;T++){let A=c[T],E=a[T],N=l[T],R=h*d*4*T;for(let P=0;P<A.count;P++){let I=P*_;e===!0&&(kt.fromBufferAttribute(A,P),m[R+I+0]=kt.x,m[R+I+1]=kt.y,m[R+I+2]=kt.z,m[R+I+3]=0),t===!0&&(kt.fromBufferAttribute(E,P),m[R+I+4]=kt.x,m[R+I+5]=kt.y,m[R+I+6]=kt.z,m[R+I+7]=0),n===!0&&(kt.fromBufferAttribute(N,P),m[R+I+8]=kt.x,m[R+I+9]=kt.y,m[R+I+10]=kt.z,m[R+I+11]=N.itemSize===4?kt.w:1)}}r={count:s,texture:g,stride:u,size:new H(h,d)},vf.set(o,r),o.addEventListener("dispose",x)}return r}var Op=class extends Y{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=X(1),this.updateType=J.OBJECT}setup(e){let{geometry:t}=e,n=t.morphAttributes.position!==void 0,i=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,s=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,r=s!==void 0?s.length:0,{texture:c,stride:a,size:l}=xR(t);n===!0&&Ee.mulAssign(this.morphBaseInfluence),i===!0&&wt.mulAssign(this.morphBaseInfluence);let u=v(l.width);pe(r,({i:h})=>{let d=y(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(Pe(this.mesh.morphTexture,$e(v(h).add(1),v(Kc))).r):d.assign(me("morphTargetInfluences","float").element(h).toVar()),n===!0&&Ee.addAssign(gy({bufferMap:c,influence:d,stride:a,width:u,depth:h,offset:v(0)})),i===!0&&wt.addAssign(gy({bufferMap:c,influence:d,stride:a,width:u,depth:h,offset:v(1)}))})}update(){let e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,n)=>t+n,0)}},QT=L(Op),Qi=class extends Y{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}},Vp=class extends Qi{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}},Gp=class extends Fu{static get type(){return"LightingContextNode"}constructor(e,t=null,n=null,i=null){super(e),this.lightingModel=t,this.backdropNode=n,this.backdropAlphaNode=i,this._value=null}getContext(){let{backdropNode:e,backdropAlphaNode:t}=this,n=b().toVar("directDiffuse"),i=b().toVar("directSpecular"),s=b().toVar("indirectDiffuse"),r=b().toVar("indirectSpecular"),c={directDiffuse:n,directSpecular:i,indirectDiffuse:s,indirectSpecular:r};return{radiance:b().toVar("radiance"),irradiance:b().toVar("irradiance"),iblIrradiance:b().toVar("iblIrradiance"),ambientOcclusion:y(1).toVar("ambientOcclusion"),reflectedLight:c,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}},JT=L(Gp),zp=class extends Qi{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}},$a,Ya,Rt=class o extends Y{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===o.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=J.NONE;return(this.scope===o.SIZE||this.scope===o.VIEWPORT)&&(e=J.RENDER),this.updateType=e,e}update({renderer:e}){let t=e.getRenderTarget();this.scope===o.VIEWPORT?t!==null?Ya.copy(t.viewport):(e.getViewport(Ya),Ya.multiplyScalar(e.getPixelRatio())):t!==null?($a.width=t.width,$a.height=t.height):e.getDrawingBufferSize($a)}setup(){let e=this.scope,t=null;return e===o.SIZE?t=X($a||($a=new H)):e===o.VIEWPORT?t=X(Ya||(Ya=new re)):t=U(Zc.div(Nc)),t}generate(e){if(this.scope===o.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){let n=e.getNodeProperties(Nc).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${n}.y - ${t}.y )`}return t}return super.generate(e)}};Rt.COORDINATE="coordinate";Rt.VIEWPORT="viewport";Rt.SIZE="size";Rt.UV="uv";var Un=O(Rt,Rt.UV),Nc=O(Rt,Rt.SIZE),Zc=O(Rt,Rt.COORDINATE),oo=O(Rt,Rt.VIEWPORT),eS=oo.zw,tS=Zc.sub(oo.xy),yR=tS.div(eS),vR=w(()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),Nc),"vec2").once()(),TR=w(()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),Un),"vec2").once()(),SR=w(()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),Un.flipY()),"vec2").once()(),Ka=new H,fo=class extends Jt{static get type(){return"ViewportTextureNode"}constructor(e=Un,t=null,n=null){n===null&&(n=new vr,n.minFilter=hn),super(n,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=J.FRAME}updateBefore(e){let t=e.renderer;t.getDrawingBufferSize(Ka);let n=this.value;(n.image.width!==Ka.width||n.image.height!==Ka.height)&&(n.image.width=Ka.width,n.image.height=Ka.height,n.needsUpdate=!0);let i=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=i}clone(){let e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}},bR=L(fo),ux=L(fo,null,null,{generateMipmaps:!0}),Tf=null,kp=class extends fo{static get type(){return"ViewportDepthTextureNode"}constructor(e=Un,t=null){Tf===null&&(Tf=new Yt),super(e,t,Tf)}},hx=L(kp),_n=class o extends Y{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){let{scope:t}=this;return t===o.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){let{scope:t}=this,n=this.valueNode,i=null;if(t===o.DEPTH_BASE)n!==null&&(i=iS().assign(n));else if(t===o.DEPTH)e.isPerspectiveCamera?i=nS(De.z,Xi,$i):i=ao(De.z,Xi,$i);else if(t===o.LINEAR_DEPTH)if(n!==null)if(e.isPerspectiveCamera){let s=dx(n,Xi,$i);i=ao(s,Xi,$i)}else i=n;else i=ao(De.z,Xi,$i);return i}};_n.DEPTH_BASE="depthBase";_n.DEPTH="depth";_n.LINEAR_DEPTH="linearDepth";var ao=(o,e,t)=>o.add(e).div(e.sub(t)),MR=(o,e,t)=>e.sub(t).mul(o).sub(e),nS=(o,e,t)=>e.add(o).mul(t).div(t.sub(e).mul(o)),dx=(o,e,t)=>e.mul(t).div(t.sub(e).mul(o).sub(t)),fx=(o,e,t)=>{e=e.max(1e-6).toVar();let n=Nn(o.negate().div(e)),i=Nn(t.div(e));return n.div(i)},AR=(o,e,t)=>{let n=o.mul(Lh(t.div(e)));return y(Math.E).pow(n).mul(e).negate()},iS=L(_n,_n.DEPTH_BASE),px=O(_n,_n.DEPTH),Wu=L(_n,_n.LINEAR_DEPTH),ER=Wu(hx());px.assign=o=>iS(o);var Hp=class extends Y{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}},wR=L(Hp),Bn=class o extends Y{static get type(){return"ClippingNode"}constructor(e=o.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);let t=e.clippingContext,{intersectionPlanes:n,unionPlanes:i}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===o.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(n,i):this.scope===o.HARDWARE?this.setupHardwareClipping(i,e):this.setupDefault(n,i)}setupAlphaToCoverage(e,t){return w(()=>{let n=y().toVar("distanceToPlane"),i=y().toVar("distanceToGradient"),s=y(1).toVar("clipOpacity"),r=t.length;if(this.hardwareClipping===!1&&r>0){let a=pn(t);pe(r,({i:l})=>{let u=a.element(l);n.assign(De.dot(u.xyz).negate().add(u.w)),i.assign(n.fwidth().div(2)),s.mulAssign(Ln(i.negate(),i,n))})}let c=e.length;if(c>0){let a=pn(e),l=y(1).toVar("intersectionClipOpacity");pe(c,({i:u})=>{let h=a.element(u);n.assign(De.dot(h.xyz).negate().add(h.w)),i.assign(n.fwidth().div(2)),l.mulAssign(Ln(i.negate(),i,n).oneMinus())}),s.mulAssign(l.oneMinus())}de.a.mulAssign(s),de.a.equal(0).discard()})()}setupDefault(e,t){return w(()=>{let n=t.length;if(this.hardwareClipping===!1&&n>0){let s=pn(t);pe(n,({i:r})=>{let c=s.element(r);De.dot(c.xyz).greaterThan(c.w).discard()})}let i=e.length;if(i>0){let s=pn(e),r=_i(!0).toVar("clipped");pe(i,({i:c})=>{let a=s.element(c);r.assign(De.dot(a.xyz).greaterThan(a.w).and(r))}),r.discard()}})()}setupHardwareClipping(e,t){let n=e.length;return t.enableHardwareClipping(n),w(()=>{let i=pn(e),s=wR(t.getClipDistance());pe(n,({i:r})=>{let c=i.element(r),a=De.dot(c.xyz).sub(c.w).negate();s.element(r).assign(a)})})()}};Bn.ALPHA_TO_COVERAGE="alphaToCoverage";Bn.DEFAULT="default";Bn.HARDWARE="hardware";var RR=()=>F(new Bn),CR=()=>F(new Bn(Bn.ALPHA_TO_COVERAGE)),NR=()=>F(new Bn(Bn.HARDWARE)),PR=.05,_y=w(([o])=>vi(ee(1e4,Wt(ee(17,o.x).add(ee(.1,o.y)))).mul(Be(.1,ye(Wt(ee(13,o.y).add(o.x))))))),xy=w(([o])=>_y(U(_y(o.xy),o.z))),IR=w(([o])=>{let e=Le(pi(X_(o.xyz)),pi($_(o.xyz))),t=y(1).div(y(PR).mul(e)).toVar("pixScale"),n=U(lo(Pn(Nn(t))),lo(Fh(Nn(t)))),i=U(xy(Pn(n.x.mul(o.xyz))),xy(Pn(n.y.mul(o.xyz)))),s=vi(Nn(t)),r=Be(ee(s.oneMinus(),i.x),ee(s,i.y)),c=Et(s,s.oneMinus()),a=b(r.mul(r).div(ee(2,c).mul(ce(1,c))),r.sub(ee(.5,c)).div(ce(1,c)),ce(1,ce(1,r).mul(ce(1,r)).div(ee(2,c).mul(ce(1,c))))),l=r.lessThan(c.oneMinus()).select(r.lessThan(c).select(a.x,a.y),a.z);return Dn(l,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]}),Re=class extends Ze{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+pv(this)}build(e){this.setup(e)}setupObserver(e){return new Qf(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);let t=e.renderer,n=t.getRenderTarget();e.addStack();let i=this.vertexNode||this.setupVertex(e);e.stack.outputNode=i,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let s,r=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(n!==null?n.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);let c=this.setupLighting(e);r!==null&&e.stack.add(r);let a=W(c,de.a).max(0);if(s=this.setupOutput(e,a),wc.assign(s),this.outputNode!==null&&(s=this.outputNode),n!==null){let l=t.getMRT(),u=this.mrtNode;l!==null?(s=l,u!==null&&(s=l.merge(u))):u!==null&&(s=u)}}else{let c=this.fragmentNode;c.isOutputStructNode!==!0&&(c=W(c)),s=this.setupOutput(e,c)}e.stack.outputNode=s,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;let{unionPlanes:t,intersectionPlanes:n}=e.clippingContext,i=null;if(t.length>0||n.length>0){let s=e.renderer.samples;this.alphaToCoverage&&s>1?i=CR():e.stack.add(RR())}return i}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;let t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(NR()),this.hardwareClipping=!0)}setupDepth(e){let{renderer:t,camera:n}=e,i=this.depthNode;if(i===null){let s=t.getMRT();s&&s.has("depth")?i=s.get("depth"):t.logarithmicDepthBuffer===!0&&(n.isPerspectiveCamera?i=fx(De.z,Xi,$i):i=ao(De.z,Xi,$i))}i!==null&&px.assign(i).append()}setupPositionView(){return Ws.mul(Ee).xyz}setupModelViewProjection(){return Hs.mul(De)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),lx}setupPosition(e){let{object:t,geometry:n}=e;if((n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color)&&QT(t).append(),t.isSkinnedMesh===!0&&ZT(t).append(),this.displacementMap){let i=fi("displacementMap","texture"),s=fi("displacementScale","float"),r=fi("displacementBias","float");Ee.addAssign(wt.normalize().mul(i.x.mul(s).add(r)))}return t.isBatchedMesh&&KT(t).append(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&YT(t).append(),this.positionNode!==null&&Ee.assign(this.positionNode.context({isPositionNodeInput:!0})),Ee}setupDiffuseColor({object:e,geometry:t}){let n=this.colorNode?W(this.colorNode):gT;this.vertexColors===!0&&t.hasAttribute("color")&&(n=W(n.xyz.mul(Fn("color","vec3")),n.a)),e.instanceColor&&(n=bc("vec3","vInstanceColor").mul(n)),e.isBatchedMesh&&e._colorsTexture&&(n=bc("vec3","vBatchColor").mul(n)),de.assign(n);let i=this.opacityNode?y(this.opacityNode):ax;if(de.a.assign(de.a.mul(i)),this.alphaTestNode!==null||this.alphaTest>0){let s=this.alphaTestNode!==null?y(this.alphaTestNode):mT;de.a.lessThanEqual(s).discard()}this.alphaHash===!0&&de.a.lessThan(IR(Ee)).discard(),this.transparent===!1&&this.blending===Tn&&this.alphaToCoverage===!1&&de.a.assign(1)}setupVariants(){}setupOutgoingLight(){return this.lights===!0?b(0):de.rgb}setupNormal(){return this.normalNode?b(this.normalNode):bT}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?fi("envMap","cubeTexture"):fi("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new zp(cx)),t}setupLights(e){let t=[],n=this.setupEnvironment(e);n&&n.isLightingNode&&t.push(n);let i=this.setupLightMap(e);if(i&&i.isLightingNode&&t.push(i),this.aoNode!==null||e.material.aoMap){let r=this.aoNode!==null?this.aoNode:qT;t.push(new Vp(r))}let s=this.lightsNode||e.lightsNode;return t.length>0&&(s=e.renderer.lighting.createNode([...s.getLights(),...t])),s}setupLightingModel(){}setupLighting(e){let{material:t}=e,{backdropNode:n,backdropAlphaNode:i,emissiveNode:s}=this,c=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null,a=this.setupOutgoingLight(e);if(c&&c.getScope().hasLights){let l=this.setupLightingModel(e);a=JT(c,l,n,i)}else n!==null&&(a=b(i!==null?fe(a,n,i):n));return(s&&s.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(lp.assign(b(s||xT)),a=a.add(lp)),a}setupOutput(e,t){if(this.fog===!0){let n=e.fogNode;n&&(wc.assign(t),t=W(n))}return t}setDefaultValues(e){for(let n in e){let i=e[n];this[n]===void 0&&(this[n]=i,i&&i.clone&&(this[n]=i.clone()))}let t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(let n in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,n)===void 0&&t[n].get!==void 0&&Object.defineProperty(this.constructor.prototype,n,t[n])}toJSON(e){let t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});let n=Ze.prototype.toJSON.call(this,e),i=Au(this);n.inputNodes={};for(let{property:r,childNode:c}of i)n.inputNodes[r]=c.toJSON(e).uuid;function s(r){let c=[];for(let a in r){let l=r[a];delete l.metadata,c.push(l)}return c}if(t){let r=s(e.textures),c=s(e.images),a=s(e.nodes);r.length>0&&(n.textures=r),c.length>0&&(n.images=c),a.length>0&&(n.nodes=a)}return n}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowPositionNode=e.shadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}},DR=new yr,Wp=class extends Re{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.setDefaultValues(DR),this.setValues(e)}},LR=new na,qp=class extends Re{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.setDefaultValues(LR),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){let e=this.offsetNode?y(this.offsetNode):kT,t=this.dashScaleNode?y(this.dashScaleNode):VT,n=this.dashSizeNode?y(this.dashSizeNode):GT,i=this.gapSizeNode?y(this.gapSizeNode):zT;vu.assign(n),up.assign(i);let s=ft(Fn("lineDistance").mul(t));(e?s.add(e):s).mod(vu.add(up)).greaterThan(vu).discard()}},Sf=null,Xp=class extends fo{static get type(){return"ViewportSharedTextureNode"}constructor(e=Un,t=null){Sf===null&&(Sf=new vr),super(e,t,Sf)}updateReference(){return this}},FR=L(Xp);var sS=o=>F(o).mul(.5).add(.5),UR=o=>F(o).mul(2).sub(1),BR=new Jo,$p=class extends Re{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(BR),this.setValues(e)}setupDiffuseColor(){let e=this.opacityNode?y(this.opacityNode):ax;de.assign(W(sS(Ie),e))}},Yp=class extends Me{static get type(){return"EquirectUVNode"}constructor(e=sx){super("vec2"),this.dirNode=e}setup(){let e=this.dirNode,t=e.z.atan(e.x).mul(1/(Math.PI*2)).add(.5),n=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return U(t,n)}},mx=L(Yp),qu=class extends zo{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){let n=t.minFilter,i=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let s=new hs(5,5,5),r=mx(sx),c=new Re;c.colorNode=ae(t,r,0),c.side=St,c.blending=Bi;let a=new Vt(s,c),l=new si;l.add(a),t.minFilter===hn&&(t.minFilter=_t);let u=new gr(1,10,this),h=e.getMRT();return e.setMRT(null),u.update(e,l),e.setMRT(h),t.minFilter=n,t.currentGenerateMipmaps=i,a.geometry.dispose(),a.material.dispose(),this}},fc=new WeakMap,Kp=class extends Me{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=uo();let t=new fs;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=J.RENDER}updateBefore(e){let{renderer:t,material:n}=e,i=this.envNode;if(i.isTextureNode||i.isMaterialReferenceNode){let s=i.isTextureNode?i.value:n[i.property];if(s&&s.isTexture){let r=s.mapping;if(r===ys||r===vs){if(fc.has(s)){let c=fc.get(s);yy(c,s.mapping),this._cubeTexture=c}else{let c=s.image;if(OR(c)){let a=new qu(c.height);a.fromEquirectangularTexture(t,s),yy(a.texture,s.mapping),this._cubeTexture=a.texture,fc.set(s,a.texture),s.addEventListener("dispose",rS)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}};function OR(o){return o==null?!1:o.height>0}function rS(o){let e=o.target;e.removeEventListener("dispose",rS);let t=fc.get(e);t!==void 0&&(fc.delete(e),t.dispose())}function yy(o,e){e===ys?o.mapping=li:e===vs&&(o.mapping=Vi)}var oS=L(Kp),Pc=class extends Qi{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=oS(this.envNode)}},Zp=class extends Qi{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){let t=y(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}},po=class{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}},Xu=class extends po{constructor(){super()}indirect(e,t,n){let i=e.ambientOcclusion,s=e.reflectedLight,r=n.context.irradianceLightMap;s.indirectDiffuse.assign(W(0)),r?s.indirectDiffuse.addAssign(r):s.indirectDiffuse.addAssign(W(1,1,1,0)),s.indirectDiffuse.mulAssign(i),s.indirectDiffuse.mulAssign(de.rgb)}finish(e,t,n){let i=n.material,s=e.outgoingLight,r=n.context.environment;if(r)switch(i.combine){case Vr:s.rgb.assign(fe(s.rgb,s.rgb.mul(r.rgb),dc.mul(Tu)));break;case Ud:s.rgb.assign(fe(s.rgb,r.rgb,dc.mul(Tu)));break;case Bd:s.rgb.addAssign(r.rgb.mul(dc.mul(Tu)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",i.combine);break}}},VR=new us,jp=class extends Re{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(VR),this.setValues(e)}setupNormal(){return tn}setupEnvironment(e){let t=super.setupEnvironment(e);return t?new Pc(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Zp(cx)),t}setupOutgoingLight(){return de.rgb}setupLightingModel(){return new Xu}},mo=w(({f0:o,f90:e,dotVH:t})=>{let n=t.mul(-5.55473).sub(6.98316).mul(t).exp2();return o.mul(n.oneMinus()).add(e.mul(n))}),zs=w(o=>o.diffuseColor.mul(1/Math.PI)),GR=()=>y(.25),zR=w(({dotNH:o})=>Iu.mul(y(.5)).add(1).mul(y(1/Math.PI)).mul(o.pow(Iu))),kR=w(({lightDirection:o})=>{let e=o.add(Te).normalize(),t=Ie.dot(e).clamp(),n=Te.dot(e).clamp(),i=mo({f0:Mt,f90:1,dotVH:n}),s=GR(),r=zR({dotNH:t});return i.mul(s).mul(r)}),$u=class extends Xu{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:n}){let s=Ie.dot(e).clamp().mul(t);n.directDiffuse.addAssign(s.mul(zs({diffuseColor:de.rgb}))),this.specular===!0&&n.directSpecular.addAssign(s.mul(kR({lightDirection:e})).mul(dc))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:n}){n.indirectDiffuse.addAssign(t.mul(zs({diffuseColor:de}))),n.indirectDiffuse.mulAssign(e)}},HR=new ea,Qp=class extends Re{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(HR),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t?new Pc(t):null}setupLightingModel(){return new $u(!1)}},WR=new jo,Jp=class extends Re{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(WR),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t?new Pc(t):null}setupLightingModel(){return new $u}setupVariants(){let e=(this.shininessNode?y(this.shininessNode):_T).max(1e-4);Iu.assign(e);let t=this.specularNode||yT;Mt.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}},aS=w(o=>{if(o.geometry.hasAttribute("normal")===!1)return y(0);let e=tn.dFdx().abs().max(tn.dFdy().abs());return e.x.max(e.y).max(e.z)}),gx=w(o=>{let{roughness:e}=o,t=aS(),n=e.max(.0525);return n=n.add(t),n=n.min(1),n}),cS=w(({alpha:o,dotNL:e,dotNV:t})=>{let n=o.pow2(),i=e.mul(n.add(n.oneMinus().mul(t.pow2())).sqrt()),s=t.mul(n.add(n.oneMinus().mul(e.pow2())).sqrt());return gn(.5,i.add(s).max(i0))}).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),qR=w(({alphaT:o,alphaB:e,dotTV:t,dotBV:n,dotTL:i,dotBL:s,dotNV:r,dotNL:c})=>{let a=c.mul(b(o.mul(t),e.mul(n),r).length()),l=r.mul(b(o.mul(i),e.mul(s),c).length());return gn(.5,a.add(l)).saturate()}).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),lS=w(({alpha:o,dotNH:e})=>{let t=o.pow2(),n=e.pow2().mul(t.oneMinus()).oneMinus();return t.div(n.pow2()).mul(1/Math.PI)}).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),XR=y(1/Math.PI),$R=w(({alphaT:o,alphaB:e,dotNH:t,dotTH:n,dotBH:i})=>{let s=o.mul(e),r=b(e.mul(n),o.mul(i),s.mul(t)),c=r.dot(r),a=s.div(c);return XR.mul(s.mul(a.pow2()))}).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),em=w(o=>{let{lightDirection:e,f0:t,f90:n,roughness:i,f:s,USE_IRIDESCENCE:r,USE_ANISOTROPY:c}=o,a=o.normalView||Ie,l=i.pow2(),u=e.add(Te).normalize(),h=a.dot(e).clamp(),d=a.dot(Te).clamp(),f=a.dot(u).clamp(),m=Te.dot(u).clamp(),g=mo({f0:t,f90:n,dotVH:m}),_,x;if(Tc(r)&&(g=Dh.mix(g,s)),Tc(c)){let T=lc.dot(e),A=lc.dot(Te),E=lc.dot(u),N=Os.dot(e),R=Os.dot(Te),P=Os.dot(u);_=qR({alphaT:Pu,alphaB:l,dotTV:A,dotBV:R,dotTL:T,dotBL:N,dotNV:d,dotNL:h}),x=$R({alphaT:Pu,alphaB:l,dotNH:f,dotTH:E,dotBH:P})}else _=cS({alpha:l,dotNL:h,dotNV:d}),x=lS({alpha:l,dotNH:f});return g.mul(_).mul(x)}),_x=w(({roughness:o,dotNV:e})=>{let t=W(-1,-.0275,-.572,.022),n=W(1,.0425,1.04,-.04),i=o.mul(t).add(n),s=i.x.mul(i.x).min(e.mul(-9.28).exp2()).mul(i.x).add(i.y);return U(-1.04,1.04).mul(s).add(i.zw)}).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),uS=w(o=>{let{dotNV:e,specularColor:t,specularF90:n,roughness:i}=o,s=_x({dotNV:e,roughness:i});return t.mul(s.x).add(n.mul(s.y))}),hS=w(({f:o,f90:e,dotVH:t})=>{let n=t.oneMinus().saturate(),i=n.mul(n),s=n.mul(i,i).clamp(0,.9999);return o.sub(b(e).mul(s)).div(s.oneMinus())}).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),YR=w(({roughness:o,dotNH:e})=>{let t=o.pow2(),n=y(1).div(t),s=e.pow2().oneMinus().max(.0078125);return y(2).add(n).mul(s.pow(n.mul(.5))).div(2*Math.PI)}).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),KR=w(({dotNV:o,dotNL:e})=>y(1).div(y(4).mul(e.add(o).sub(e.mul(o))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),ZR=w(({lightDirection:o})=>{let e=o.add(Te).normalize(),t=Ie.dot(o).clamp(),n=Ie.dot(Te).clamp(),i=Ie.dot(e).clamp(),s=YR({roughness:Ih,dotNH:i}),r=KR({dotNV:n,dotNL:t});return Ls.mul(s).mul(r)}),jR=w(({N:o,V:e,roughness:t})=>{let s=.0078125,r=o.dot(e).saturate(),c=U(t,r.oneMinus().sqrt());return c.assign(c.mul(.984375).add(s)),c}).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),QR=w(({f:o})=>{let e=o.length();return Le(e.mul(e).add(o.z).div(e.add(1)),0)}).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),iu=w(({v1:o,v2:e})=>{let t=o.dot(e),n=t.abs().toVar(),i=n.mul(.0145206).add(.4965155).mul(n).add(.8543985).toVar(),s=n.add(4.1616724).mul(n).add(3.417594).toVar(),r=i.div(s),c=t.greaterThan(0).select(r,Le(t.mul(t).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(r));return o.cross(e).mul(c)}).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),vy=w(({N:o,V:e,P:t,mInv:n,p0:i,p1:s,p2:r,p3:c})=>{let a=s.sub(i).toVar(),l=c.sub(i).toVar(),u=a.cross(l),h=b().toVar();return ne(u.dot(t.sub(i)).greaterThanEqual(0),()=>{let d=e.sub(o.mul(e.dot(o))).normalize(),f=o.cross(d).negate(),m=n.mul(dt(d,f,o).transpose()).toVar(),g=m.mul(i.sub(t)).normalize().toVar(),_=m.mul(s.sub(t)).normalize().toVar(),x=m.mul(r.sub(t)).normalize().toVar(),T=m.mul(c.sub(t)).normalize().toVar(),A=b(0).toVar();A.addAssign(iu({v1:g,v2:_})),A.addAssign(iu({v1:_,v2:x})),A.addAssign(iu({v1:x,v2:T})),A.addAssign(iu({v1:T,v2:g})),h.assign(b(QR({f:A})))}),h}).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),Hh=1/6,dS=o=>ee(Hh,ee(o,ee(o,o.negate().add(3)).sub(3)).add(1)),tm=o=>ee(Hh,ee(o,ee(o,ee(3,o).sub(6))).add(4)),fS=o=>ee(Hh,ee(o,ee(o,ee(-3,o).add(3)).add(3)).add(1)),nm=o=>ee(Hh,mn(o,3)),Ty=o=>dS(o).add(tm(o)),Sy=o=>fS(o).add(nm(o)),by=o=>Be(-1,tm(o).div(dS(o).add(tm(o)))),My=o=>Be(1,nm(o).div(fS(o).add(nm(o)))),Ay=(o,e,t)=>{let n=o.uvNode,i=ee(n,e.zw).add(.5),s=Pn(i),r=vi(i),c=Ty(r.x),a=Sy(r.x),l=by(r.x),u=My(r.x),h=by(r.y),d=My(r.y),f=U(s.x.add(l),s.y.add(h)).sub(.5).mul(e.xy),m=U(s.x.add(u),s.y.add(h)).sub(.5).mul(e.xy),g=U(s.x.add(l),s.y.add(d)).sub(.5).mul(e.xy),_=U(s.x.add(u),s.y.add(d)).sub(.5).mul(e.xy),x=Ty(r.y).mul(Be(c.mul(o.sample(f).level(t)),a.mul(o.sample(m).level(t)))),T=Sy(r.y).mul(Be(c.mul(o.sample(g).level(t)),a.mul(o.sample(_).level(t))));return x.add(T)},pS=w(([o,e=y(3)])=>{let t=U(o.size(v(e))),n=U(o.size(v(e.add(1)))),i=gn(1,t),s=gn(1,n),r=Ay(o,W(i,t),Pn(e)),c=Ay(o,W(s,n),Fh(e));return vi(e).mix(r,c)}),Ey=w(([o,e,t,n,i])=>{let s=b(Q_(e.negate(),xi(o),gn(1,n))),r=b(pi(i[0].xyz),pi(i[1].xyz),pi(i[2].xyz));return xi(s).mul(t.mul(r))}).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),JR=w(([o,e])=>o.mul(Dn(e.mul(2).sub(2),0,1))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),eC=ux(),tC=ux(),wy=w(([o,e,t],{material:n})=>{let s=(n.side===St?eC:tC).sample(o),r=Nn(Nc.x).mul(JR(e,t));return pS(s,r)}),Ry=w(([o,e,t])=>(ne(t.notEqual(0),()=>{let n=Lh(e).negate().div(t);return H_(n.negate().mul(o))}),b(1))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),nC=w(([o,e,t,n,i,s,r,c,a,l,u,h,d,f,m])=>{let g,_;if(m){g=W().toVar(),_=b().toVar();let N=u.sub(1).mul(m.mul(.025)),R=b(u.sub(N),u,u.add(N));pe({start:0,end:3},({i:P})=>{let I=R.element(P),G=Ey(o,e,h,I,c),z=r.add(G),$=l.mul(a.mul(W(z,1))),j=U($.xy.div($.w)).toVar();j.addAssign(1),j.divAssign(2),j.assign(U(j.x,j.y.oneMinus()));let oe=wy(j,t,I);g.element(P).assign(oe.element(P)),g.a.addAssign(oe.a),_.element(P).assign(n.element(P).mul(Ry(pi(G),d,f).element(P)))}),g.a.divAssign(3)}else{let N=Ey(o,e,h,u,c),R=r.add(N),P=l.mul(a.mul(W(R,1))),I=U(P.xy.div(P.w)).toVar();I.addAssign(1),I.divAssign(2),I.assign(U(I.x,I.y.oneMinus())),g=wy(I,t,u),_=n.mul(Ry(pi(N),d,f))}let x=_.rgb.mul(g.rgb),T=o.dot(e).clamp(),A=b(uS({dotNV:T,specularColor:i,specularF90:s,roughness:t})),E=_.r.add(_.g,_.b).div(3);return W(A.oneMinus().mul(x),g.a.oneMinus().mul(E).oneMinus())}),iC=dt(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),sC=o=>{let e=o.sqrt();return b(1).add(e).div(b(1).sub(e))},Cy=(o,e)=>o.sub(e).div(o.add(e)).pow2(),rC=(o,e)=>{let t=o.mul(2*Math.PI*1e-9),n=b(54856e-17,44201e-17,52481e-17),i=b(1681e3,1795300,2208400),s=b(43278e5,93046e5,66121e5),r=y(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(t.mul(2239900).add(e.x).cos()).mul(t.pow2().mul(-45282e5).exp()),c=n.mul(s.mul(2*Math.PI).sqrt()).mul(i.mul(t).add(e).cos()).mul(t.pow2().negate().mul(s).exp());return c=b(c.x.add(r),c.y,c.z).div(10685e-11),iC.mul(c)},oC=w(({outsideIOR:o,eta2:e,cosTheta1:t,thinFilmThickness:n,baseF0:i})=>{let s=fe(o,e,Ln(0,.03,n)),c=o.div(s).pow2().mul(t.pow2().oneMinus()).oneMinus();ne(c.lessThan(0),()=>b(1));let a=c.sqrt(),l=Cy(s,o),u=mo({f0:l,f90:1,dotVH:t}),h=u.oneMinus(),d=s.lessThan(o).select(Math.PI,0),f=y(Math.PI).sub(d),m=sC(i.clamp(0,.9999)),g=Cy(m,s.toVec3()),_=mo({f0:g,f90:1,dotVH:a}),x=b(m.x.lessThan(s).select(Math.PI,0),m.y.lessThan(s).select(Math.PI,0),m.z.lessThan(s).select(Math.PI,0)),T=s.mul(n,a,2),A=b(f).add(x),E=u.mul(_).clamp(1e-5,.9999),N=E.sqrt(),R=h.pow2().mul(_).div(b(1).sub(E)),I=u.add(R).toVar(),G=R.sub(h).toVar();return pe({start:1,end:2,condition:"<=",name:"m"},({m:z})=>{G.mulAssign(N);let $=rC(y(z).mul(T),y(z).mul(A)).mul(2);I.addAssign(G.mul($))}),I.max(b(0))}).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),aC=w(({normal:o,viewDir:e,roughness:t})=>{let n=o.dot(e).saturate(),i=t.pow2(),s=it(t.lessThan(.25),y(-339.2).mul(i).add(y(161.4).mul(t)).sub(25.9),y(-8.48).mul(i).add(y(14.3).mul(t)).sub(9.95)),r=it(t.lessThan(.25),y(44).mul(i).sub(y(23.7).mul(t)).add(3.26),y(1.97).mul(i).sub(y(3.27).mul(t)).add(.72));return it(t.lessThan(.25),0,y(.1).mul(t).sub(.025)).add(s.mul(n).add(r).exp()).mul(1/Math.PI).saturate()}),bf=b(.04),Mf=y(1),Yu=class extends po{constructor(e=!1,t=!1,n=!1,i=!1,s=!1,r=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=n,this.anisotropy=i,this.transmission=s,this.dispersion=r,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(this.clearcoat===!0&&(this.clearcoatRadiance=b().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=b().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=b().toVar("clearcoatSpecularIndirect")),this.sheen===!0&&(this.sheenSpecularDirect=b().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=b().toVar("sheenSpecularIndirect")),this.iridescence===!0){let t=Ie.dot(Te).clamp();this.iridescenceFresnel=oC({outsideIOR:y(1),eta2:L_,cosTheta1:t,thinFilmThickness:F_,baseF0:Mt}),this.iridescenceF0=hS({f:this.iridescenceFresnel,f90:1,dotVH:t})}if(this.transmission===!0){let t=mi,n=j0.sub(mi).normalize(),i=zh;e.backdrop=nC(i,n,Rn,de,Mt,Ec,t,Qt,Ct,Hs,uc,U_,O_,B_,this.dispersion?V_:null),e.backdropAlpha=Du,de.a.mulAssign(fe(1,e.backdrop.a,Du))}}computeMultiscattering(e,t,n){let i=Ie.dot(Te).clamp(),s=_x({roughness:Rn,dotNV:i}),c=(this.iridescenceF0?Dh.mix(Mt,this.iridescenceF0):Mt).mul(s.x).add(n.mul(s.y)),l=s.x.add(s.y).oneMinus(),u=Mt.add(Mt.oneMinus().mul(.047619)),h=c.mul(u).div(l.mul(u).oneMinus());e.addAssign(c),t.addAssign(h.mul(l))}direct({lightDirection:e,lightColor:t,reflectedLight:n}){let s=Ie.dot(e).clamp().mul(t);if(this.sheen===!0&&this.sheenSpecularDirect.addAssign(s.mul(ZR({lightDirection:e}))),this.clearcoat===!0){let c=to.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(c.mul(em({lightDirection:e,f0:bf,f90:Mf,roughness:Ac,normalView:to})))}n.directDiffuse.addAssign(s.mul(zs({diffuseColor:de.rgb}))),n.directSpecular.addAssign(s.mul(em({lightDirection:e,f0:Mt,f90:1,roughness:Rn,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:n,halfHeight:i,reflectedLight:s,ltc_1:r,ltc_2:c}){let a=t.add(n).sub(i),l=t.sub(n).sub(i),u=t.sub(n).add(i),h=t.add(n).add(i),d=Ie,f=Te,m=De.toVar(),g=jR({N:d,V:f,roughness:Rn}),_=r.sample(g).toVar(),x=c.sample(g).toVar(),T=dt(b(_.x,0,_.y),b(0,1,0),b(_.z,0,_.w)).toVar(),A=Mt.mul(x.x).add(Mt.oneMinus().mul(x.y)).toVar();s.directSpecular.addAssign(e.mul(A).mul(vy({N:d,V:f,P:m,mInv:T,p0:a,p1:l,p2:u,p3:h}))),s.directDiffuse.addAssign(e.mul(de).mul(vy({N:d,V:f,P:m,mInv:dt(1,0,0,0,1,0,0,0,1),p0:a,p1:l,p2:u,p3:h})))}indirect(e,t,n){this.indirectDiffuse(e,t,n),this.indirectSpecular(e,t,n),this.ambientOcclusion(e,t,n)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(zs({diffuseColor:de})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:n}){if(this.sheen===!0&&this.sheenSpecularIndirect.addAssign(t.mul(Ls,aC({normal:Ie,viewDir:Te,roughness:Ih}))),this.clearcoat===!0){let l=to.dot(Te).clamp(),u=uS({dotNV:l,specularColor:bf,specularF90:Mf,roughness:Ac});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(u))}let i=b().toVar("singleScattering"),s=b().toVar("multiScattering"),r=t.mul(1/Math.PI);this.computeMultiscattering(i,s,Ec);let c=i.add(s),a=de.mul(c.r.max(c.g).max(c.b).oneMinus());n.indirectSpecular.addAssign(e.mul(i)),n.indirectSpecular.addAssign(s.mul(r)),n.indirectDiffuse.addAssign(a.mul(r))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){let i=Ie.dot(Te).clamp().add(e),s=Rn.mul(-16).oneMinus().negate().exp2(),r=e.sub(i.pow(s).oneMinus()).clamp();this.clearcoat===!0&&this.clearcoatSpecularIndirect.mulAssign(e),this.sheen===!0&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(r)}finish(e){let{outgoingLight:t}=e;if(this.clearcoat===!0){let n=to.dot(Te).clamp(),i=mo({dotVH:n,f0:bf,f90:Mf}),s=t.mul(Nu.mul(i).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(Nu));t.assign(s)}if(this.sheen===!0){let n=Ls.r.max(Ls.g).max(Ls.b).mul(.157).oneMinus(),i=t.mul(n).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(i)}}},Ny=y(1),im=y(-2),su=y(.8),Af=y(-1),ru=y(.4),Ef=y(2),ou=y(.305),wf=y(3),Py=y(.21),cC=y(4),Iy=y(4),lC=y(16),uC=w(([o])=>{let e=b(ye(o)).toVar(),t=y(-1).toVar();return ne(e.x.greaterThan(e.z),()=>{ne(e.x.greaterThan(e.y),()=>{t.assign(it(o.x.greaterThan(0),0,3))}).Else(()=>{t.assign(it(o.y.greaterThan(0),1,4))})}).Else(()=>{ne(e.z.greaterThan(e.y),()=>{t.assign(it(o.z.greaterThan(0),2,5))}).Else(()=>{t.assign(it(o.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),hC=w(([o,e])=>{let t=U().toVar();return ne(e.equal(0),()=>{t.assign(U(o.z,o.y).div(ye(o.x)))}).ElseIf(e.equal(1),()=>{t.assign(U(o.x.negate(),o.z.negate()).div(ye(o.y)))}).ElseIf(e.equal(2),()=>{t.assign(U(o.x.negate(),o.y).div(ye(o.z)))}).ElseIf(e.equal(3),()=>{t.assign(U(o.z.negate(),o.y).div(ye(o.x)))}).ElseIf(e.equal(4),()=>{t.assign(U(o.x.negate(),o.z).div(ye(o.y)))}).Else(()=>{t.assign(U(o.x,o.y).div(ye(o.z)))}),ee(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),dC=w(([o])=>{let e=y(0).toVar();return ne(o.greaterThanEqual(su),()=>{e.assign(Ny.sub(o).mul(Af.sub(im)).div(Ny.sub(su)).add(im))}).ElseIf(o.greaterThanEqual(ru),()=>{e.assign(su.sub(o).mul(Ef.sub(Af)).div(su.sub(ru)).add(Af))}).ElseIf(o.greaterThanEqual(ou),()=>{e.assign(ru.sub(o).mul(wf.sub(Ef)).div(ru.sub(ou)).add(Ef))}).ElseIf(o.greaterThanEqual(Py),()=>{e.assign(ou.sub(o).mul(cC.sub(wf)).div(ou.sub(Py)).add(wf))}).Else(()=>{e.assign(y(-2).mul(Nn(ee(1.16,o))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),mS=w(([o,e])=>{let t=o.toVar();t.assign(ee(2,t).sub(1));let n=b(t,1).toVar();return ne(e.equal(0),()=>{n.assign(n.zyx)}).ElseIf(e.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),gS=w(([o,e,t,n,i,s])=>{let r=y(t),c=b(e),a=Dn(dC(r),im,s),l=vi(a),u=Pn(a),h=b(sm(o,c,u,n,i,s)).toVar();return ne(l.notEqual(0),()=>{let d=b(sm(o,c,u.add(1),n,i,s)).toVar();h.assign(fe(h,d,l))}),h}),sm=w(([o,e,t,n,i,s])=>{let r=y(t).toVar(),c=b(e),a=y(uC(c)).toVar(),l=y(Le(Iy.sub(r),0)).toVar();r.assign(Le(r,Iy));let u=y(lo(r)).toVar(),h=U(hC(c,a).mul(u.sub(2)).add(1)).toVar();return ne(a.greaterThan(2),()=>{h.y.addAssign(u),a.subAssign(3)}),h.x.addAssign(a.mul(u)),h.x.addAssign(l.mul(ee(3,lC))),h.y.addAssign(ee(4,lo(s).sub(u))),h.x.mulAssign(n),h.y.mulAssign(i),o.sample(h).grad(U(),U())}),Rf=w(({envMap:o,mipInt:e,outputDirection:t,theta:n,axis:i,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:r,CUBEUV_MAX_MIP:c})=>{let a=hi(n),l=t.mul(a).add(i.cross(t).mul(Wt(n))).add(i.mul(i.dot(t).mul(a.oneMinus())));return sm(o,l,e,s,r,c)}),_S=w(({n:o,latitudinal:e,poleAxis:t,outputDirection:n,weights:i,samples:s,dTheta:r,mipInt:c,envMap:a,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{let d=b(it(e,t,Bh(t,n))).toVar();ne(k_(d.equals(b(0))),()=>{d.assign(b(n.z,0,n.x.negate()))}),d.assign(xi(d));let f=b().toVar();return f.addAssign(i.element(0).mul(Rf({theta:0,axis:d,outputDirection:n,mipInt:c,envMap:a,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),pe({start:v(1),end:o},({i:m})=>{ne(m.greaterThanEqual(s),()=>{jT()});let g=y(r.mul(y(m))).toVar();f.addAssign(i.element(m).mul(Rf({theta:g.mul(-1),axis:d,outputDirection:n,mipInt:c,envMap:a,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),f.addAssign(i.element(m).mul(Rf({theta:g,axis:d,outputDirection:n,mipInt:c,envMap:a,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))}),W(f,1)}),Ku=null,Dy=new WeakMap;function fC(o){let e=Math.log2(o)-2,t=1/o;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:t,maxMip:e}}function pC(o){let e=Dy.get(o);if((e!==void 0?e.pmremVersion:-1)!==o.pmremVersion){let n=o.image;if(o.isCubeTexture)if(mC(n))e=Ku.fromCubemap(o,e);else return null;else if(gC(n))e=Ku.fromEquirectangular(o,e);else return null;e.pmremVersion=o.pmremVersion,Dy.set(o,e)}return e.texture}var rm=class extends Me{static get type(){return"PMREMNode"}constructor(e,t=null,n=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=n,this._generator=null;let i=new xt;i.isRenderTargetTexture=!0,this._texture=ae(i),this._width=X(0),this._height=X(0),this._maxMip=X(0),this.updateBeforeType=J.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){let t=fC(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem,t=e?e.pmremVersion:-1,n=this._value;t!==n.pmremVersion&&(n.isPMREMTexture===!0?e=n:e=pC(n),e!==null&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){Ku===null&&(Ku=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this));let n=this.value;e.renderer.coordinateSystem===gt&&n.isPMREMTexture!==!0&&n.isRenderTargetTexture===!0&&(t=b(t.x.negate(),t.yz)),t=b(t.x,t.y.negate(),t.z);let i=this.levelNode;return i===null&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),gS(this._texture,t,i,this._width,this._height,this._maxMip)}};function mC(o){if(o==null)return!1;let e=0,t=6;for(let n=0;n<t;n++)o[n]!==void 0&&e++;return e===t}function gC(o){return o==null?!1:o.height>0}var xx=L(rm),Ly=new WeakMap,om=class extends Qi{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){let{material:t}=e,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){let f=n.isTextureNode?n.value:t[n.property],m=Ly.get(f);m===void 0&&(m=xx(f),Ly.set(f,m)),n=m}let s=t.envMap?me("envMapIntensity","float",e.material):me("environmentIntensity","float",e.scene),c=t.useAnisotropy===!0||t.anisotropy>0?fT:Ie,a=n.context(Fy(Rn,c)).mul(s),l=n.context(_C(zh)).mul(Math.PI).mul(s),u=hc(a),h=hc(l);e.context.radiance.addAssign(u),e.context.iblIrradiance.addAssign(h);let d=e.context.lightingModel.clearcoatRadiance;if(d){let f=n.context(Fy(Ac,to)).mul(s),m=hc(f);d.addAssign(m)}}},Fy=(o,e)=>{let t=null;return{getUV:()=>(t===null&&(t=Te.negate().reflect(e),t=o.mul(o).mix(t,e).normalize(),t=t.transformDirection(Ct)),t),getTextureLevel:()=>o}},_C=o=>({getUV:()=>o,getTextureLevel:()=>y(1)}),xC=new Sr,go=class extends Re{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(xC),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return t===null&&e.environmentNode&&(t=e.environmentNode),t?new om(t):null}setupLightingModel(){return new Yu}setupSpecular(){let e=fe(b(.04),de.rgb,Mc);Mt.assign(e),Ec.assign(1)}setupVariants(){let e=this.metalnessNode?y(this.metalnessNode):ST;Mc.assign(e);let t=this.roughnessNode?y(this.roughnessNode):TT;t=gx({roughness:t}),Rn.assign(t),this.setupSpecular(),de.assign(W(de.rgb.mul(e.oneMinus()),de.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}},yC=new Zo,am=class extends go{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(yC),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||this.clearcoatNode!==null}get useIridescence(){return this.iridescence>0||this.iridescenceNode!==null}get useSheen(){return this.sheen>0||this.sheenNode!==null}get useAnisotropy(){return this.anisotropy>0||this.anisotropyNode!==null}get useTransmission(){return this.transmission>0||this.transmissionNode!==null}get useDispersion(){return this.dispersion>0||this.dispersionNode!==null}setupSpecular(){let e=this.iorNode?y(this.iorNode):UT;uc.assign(e),Mt.assign(fe(Et(Z_(uc.sub(1).div(uc.add(1))).mul(vT),b(1)).mul(Lp),de.rgb,Mc)),Ec.assign(fe(Lp,1,Mc))}setupLightingModel(){return new Yu(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){let t=this.clearcoatNode?y(this.clearcoatNode):MT,n=this.clearcoatRoughnessNode?y(this.clearcoatRoughnessNode):AT;Nu.assign(t),Ac.assign(gx({roughness:n}))}if(this.useSheen){let t=this.sheenNode?b(this.sheenNode):RT,n=this.sheenRoughnessNode?y(this.sheenRoughnessNode):CT;Ls.assign(t),Ih.assign(n)}if(this.useIridescence){let t=this.iridescenceNode?y(this.iridescenceNode):PT,n=this.iridescenceIORNode?y(this.iridescenceIORNode):IT,i=this.iridescenceThicknessNode?y(this.iridescenceThicknessNode):DT;Dh.assign(t),L_.assign(n),F_.assign(i)}if(this.useAnisotropy){let t=(this.anisotropyNode?U(this.anisotropyNode):NT).toVar();qi.assign(t.length()),ne(qi.equal(0),()=>{t.assign(U(1,0))}).Else(()=>{t.divAssign(U(qi)),qi.assign(qi.saturate())}),Pu.assign(qi.pow2().mix(Rn.pow2(),1)),lc.assign(Fs[0].mul(t.x).add(Fs[1].mul(t.y))),Os.assign(Fs[1].mul(t.x).sub(Fs[0].mul(t.y)))}if(this.useTransmission){let t=this.transmissionNode?y(this.transmissionNode):LT,n=this.thicknessNode?y(this.thicknessNode):FT,i=this.attenuationDistanceNode?y(this.attenuationDistanceNode):BT,s=this.attenuationColorNode?b(this.attenuationColorNode):OT;if(Du.assign(t),U_.assign(n),B_.assign(i),O_.assign(s),this.useDispersion){let r=this.dispersionNode?y(this.dispersionNode):WT;V_.assign(r)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?b(this.clearcoatNormalNode):ET}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}};var vC=w(({normal:o,lightDirection:e,builder:t})=>{let n=o.dot(e),i=U(n.mul(.5).add(.5),0);if(t.material.gradientMap){let s=fi("gradientMap","texture").context({getUV:()=>i});return b(s.r)}else{let s=i.fwidth().mul(.5);return fe(b(.7),b(1),Ln(y(.7).sub(s.x),y(.7).add(s.x),i.x))}}),cm=class extends po{direct({lightDirection:e,lightColor:t,reflectedLight:n},i,s){let r=vC({normal:Vh,lightDirection:e,builder:s}).mul(t);n.directDiffuse.addAssign(r.mul(zs({diffuseColor:de.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:n}){n.indirectDiffuse.addAssign(t.mul(zs({diffuseColor:de}))),n.indirectDiffuse.mulAssign(e)}},TC=new Qo,lm=class extends Re{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(TC),this.setValues(e)}setupLightingModel(){return new cm}},um=class extends Me{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){let e=b(Te.z,0,Te.x.negate()).normalize(),t=Te.cross(e);return U(e.dot(Ie),t.dot(Ie)).mul(.495).add(.5)}},xS=O(um),SC=new ta,hm=class extends Re{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(SC),this.setValues(e)}setupVariants(e){let t=xS,n;e.material.matcap?n=fi("matcap","texture").context({getUV:()=>t}):n=b(fe(.2,.8,t.y)),de.rgb.mulAssign(n.rgb)}},dm=class extends Me{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){let{rotationNode:t,positionNode:n}=this;if(this.getNodeType(e)==="vec2"){let s=t.cos(),r=t.sin();return Nh(s,r,r.negate(),s).mul(n)}else{let s=t,r=Bs(W(1,0,0,0),W(0,hi(s.x),Wt(s.x).negate(),0),W(0,Wt(s.x),hi(s.x),0),W(0,0,0,1)),c=Bs(W(hi(s.y),0,Wt(s.y),0),W(0,1,0,0),W(Wt(s.y).negate(),0,hi(s.y),0),W(0,0,0,1)),a=Bs(W(hi(s.z),Wt(s.z).negate(),0,0),W(Wt(s.z),hi(s.z),0,0),W(0,0,1,0),W(0,0,0,1));return r.mul(c).mul(a).mul(W(n,1)).xyz}}},Wh=L(dm),bC=new Wo,Zu=class extends Re{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(bC),this.setValues(e)}setupPositionView(e){let{object:t,camera:n}=e,i=this.sizeAttenuation,{positionNode:s,rotationNode:r,scaleNode:c}=this,a=Ws.mul(b(s||0)),l=U(Qt[0].xyz.length(),Qt[1].xyz.length());if(c!==null&&(l=l.mul(y(c))),i===!1)if(n.isPerspectiveCamera)l=l.mul(a.z.negate());else{let f=y(2).div(Hs.element(1).element(1));l=l.mul(f.mul(2))}let u=Wc.xy;if(t.center&&t.center.isVector2===!0){let f=Uw("center","vec2",t);u=u.sub(f.sub(.5))}u=u.mul(l);let h=y(r||wT),d=Wh(u,h);return W(a.xy.add(d),a.zw)}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}},MC=new Xo,fm=class extends Zu{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.sizeNode=null,this.isPointsNodeMaterial=!0,this.setDefaultValues(MC),this.setValues(e)}setupPositionView(){let{positionNode:e}=this;return Ws.mul(b(e||Ee)).xyz}setupVertex(e){let t=super.setupVertex(e);if(e.material.isNodeMaterial!==!0)return t;let{rotationNode:n,scaleNode:i,sizeNode:s}=this,r=Wc.xy.toVar(),c=oo.z.div(oo.w);if(n&&n.isNode){let l=y(n);r.assign(Wh(r,l))}let a=s!==null?U(s):HT;return this.sizeAttenuation===!0&&(a=a.mul(a.div(De.z.negate()))),i&&i.isNode&&(a=a.mul(U(i))),r.mulAssign(a.mul(2)),r.assign(r.div(oo.z)),r.y.assign(r.y.mul(c)),r.assign(r.mul(t.w)),t.addAssign(W(r,0,0)),t}get alphaToCoverage(){return this._useAlphaToCoverage}set alphaToCoverage(e){this._useAlphaToCoverage!==e&&(this._useAlphaToCoverage=e,this.needsUpdate=!0)}},pm=class extends po{constructor(){super(),this.shadowNode=y(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){de.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(de.rgb)}},AC=new Ko,mm=class extends Re{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(AC),this.setValues(e)}setupLightingModel(){return new pm}},EC=w(({texture:o,uv:e})=>{let n=b().toVar();return ne(e.x.lessThan(1e-4),()=>{n.assign(b(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{n.assign(b(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{n.assign(b(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{n.assign(b(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{n.assign(b(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{n.assign(b(0,0,-1))}).Else(()=>{let s=o.sample(e.add(b(-.01,0,0))).r.sub(o.sample(e.add(b(.01,0,0))).r),r=o.sample(e.add(b(0,-.01,0))).r.sub(o.sample(e.add(b(0,.01,0))).r),c=o.sample(e.add(b(0,0,-.01))).r.sub(o.sample(e.add(b(0,0,.01))).r);n.assign(b(s,r,c))}),n.normalize()}),gm=class extends Jt{static get type(){return"Texture3DNode"}constructor(e,t=null,n=null){super(e,t,n),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return b(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){let n=this.value;return e.isFlipY()&&(n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(v(Zi(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return EC({texture:this,uv:e})}},wC=L(gm);var _m=class{constructor(e,t){this.nodes=e,this.info=t,this._context=self,this._animationLoop=null,this._requestId=null}start(){let e=(t,n)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(t,n)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}},nn=class{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let n=0;n<e.length-1;n++)if(t=t.get(e[n]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let n=this.weakMap;for(let i=0;i<e.length-1;i++){let s=e[i];n.has(s)===!1&&n.set(s,new WeakMap),n=n.get(s)}return n.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let n=0;n<e.length-1;n++)if(t=t.get(e[n]),t===void 0)return!1;return t.delete(e[e.length-1])}},RC=0;function CC(o){let e=Object.keys(o),t=Object.getPrototypeOf(o);for(;t;){let n=Object.getOwnPropertyDescriptors(t);for(let i in n)if(n[i]!==void 0){let s=n[i];s&&typeof s.get=="function"&&e.push(i)}t=Object.getPrototypeOf(t)}return e}var xm=class{constructor(e,t,n,i,s,r,c,a,l,u){this.id=RC++,this._nodes=e,this._geometries=t,this.renderer=n,this.object=i,this.material=s,this.scene=r,this.camera=c,this.lightsNode=a,this.context=l,this.geometry=i.geometry,this.version=s.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=u,this.clippingContextCacheKey=u!==null?u.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(let t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null}getAttributes(){if(this.attributes!==null)return this.attributes;let e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,n=[],i=new Set;for(let s of e){let r=s.node&&s.node.attribute?s.node.attribute:t.getAttribute(s.name);if(r===void 0)continue;n.push(r);let c=r.isInterleavedBufferAttribute?r.data:r;i.add(c)}return this.attributes=n,this.vertexBuffers=Array.from(i.values()),n}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){let{object:e,material:t,geometry:n,group:i,drawRange:s}=this,r=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),c=this.getIndex(),a=c!==null,l=n.isInstancedBufferGeometry?n.instanceCount:e.count>1?e.count:1;if(l===0)return null;if(r.instanceCount=l,e.isBatchedMesh===!0)return r;let u=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(u=2);let h=s.start*u,d=(s.start+s.count)*u;i!==null&&(h=Math.max(h,i.start*u),d=Math.min(d,(i.start+i.count)*u));let f=n.attributes.position,m=1/0;a?m=c.count:f!=null&&(m=f.count),h=Math.max(h,0),d=Math.min(d,m);let g=d-h;return g<0||g===1/0?null:(r.vertexCount=g,r.firstVertex=h,r)}getGeometryCacheKey(){let{geometry:e}=this,t="";for(let n of Object.keys(e.attributes).sort()){let i=e.attributes[n];t+=n+",",i.data&&(t+=i.data.stride+","),i.offset&&(t+=i.offset+","),i.itemSize&&(t+=i.itemSize+","),i.normalized&&(t+="n,")}for(let n of Object.keys(e.morphAttributes).sort()){let i=e.morphAttributes[n];t+="morph-"+n+",";for(let s=0,r=i.length;s<r;s++){let c=i[s];t+=c.id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){let{object:e,material:t}=this,n=t.customProgramCacheKey();for(let i of CC(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(i))continue;let s=t[i],r;if(s!==null){let c=typeof s;c==="number"?r=s!==0?"1":"0":c==="object"?(r="{",s.isTexture&&(r+=s.mapping),r+="}"):r=String(s)}else r=String(s);n+=r+","}return n+=this.clippingContextCacheKey+",",e.geometry&&(n+=this.getGeometryCacheKey()),e.skeleton&&(n+=e.skeleton.bones.length+","),e.isBatchedMesh&&(n+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(n+=e._colorsTexture.uuid+",")),e.count>1&&(n+=e.uuid+","),n+=e.receiveShadow+",",fv(n)}get needsGeometryUpdate(){return this.geometry.id!==this.object.geometry.id}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=xc(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=xc(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}},Es=[],ym=class{constructor(e,t,n,i,s,r){this.renderer=e,this.nodes=t,this.geometries=n,this.pipelines=i,this.bindings=s,this.info=r,this.chainMaps={}}get(e,t,n,i,s,r,c,a){let l=this.getChainMap(a);Es[0]=e,Es[1]=t,Es[2]=r,Es[3]=s;let u=l.get(Es);return u===void 0?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,n,i,s,r,c,a),l.set(Es,u)):(u.updateClipping(c),u.needsGeometryUpdate&&u.setGeometry(e.geometry),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,n,i,s,r,c,a)):u.version=t.version)),Es.length=0,u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new nn)}dispose(){this.chainMaps={}}createRenderObject(e,t,n,i,s,r,c,a,l,u,h){let d=this.getChainMap(h),f=new xm(e,t,n,i,s,r,c,a,l,u);return f.onDispose=()=>{this.pipelines.delete(f),this.bindings.delete(f),this.nodes.delete(f),d.delete(f.getChainArray())},f}},On=class{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}},Cn={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},Yi=16,NC=211,PC=212,vm=class extends On{constructor(e){super(),this.backend=e}delete(e){let t=super.delete(e);return t!==void 0&&this.backend.destroyAttribute(e),t}update(e,t){let n=this.get(e);if(n.version===void 0)t===Cn.VERTEX?this.backend.createAttribute(e):t===Cn.INDEX?this.backend.createIndexAttribute(e):t===Cn.STORAGE?this.backend.createStorageAttribute(e):t===Cn.INDIRECT&&this.backend.createIndirectStorageAttribute(e),n.version=this._getBufferAttribute(e).version;else{let i=this._getBufferAttribute(e);(n.version<i.version||i.usage===ki)&&(this.backend.updateAttribute(e),n.version=i.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}};function yS(o){return o.index!==null?o.index.version:o.attributes.position.version}function Uy(o){let e=[],t=o.index,n=o.attributes.position;if(t!==null){let s=t.array;for(let r=0,c=s.length;r<c;r+=3){let a=s[r+0],l=s[r+1],u=s[r+2];e.push(a,l,l,u,u,a)}}else{let s=n.array;for(let r=0,c=s.length/3-1;r<c;r+=3){let a=r+0,l=r+1,u=r+2;e.push(a,l,l,u,u,a)}}let i=new(tu(e)?pr:fr)(e,1);return i.version=yS(o),i}var Tm=class extends On{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){let t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){let t=e.geometry,n=this.get(t);n.initialized=!0,this.info.memory.geometries++;let i=()=>{this.info.memory.geometries--;let s=t.index,r=e.getAttributes();s!==null&&this.attributes.delete(s);for(let a of r)this.attributes.delete(a);let c=this.wireframes.get(t);c!==void 0&&this.attributes.delete(c),t.removeEventListener("dispose",i)};t.addEventListener("dispose",i)}updateAttributes(e){let t=e.getAttributes();for(let s of t)s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute?this.updateAttribute(s,Cn.STORAGE):this.updateAttribute(s,Cn.VERTEX);let n=this.getIndex(e);n!==null&&this.updateAttribute(n,Cn.INDEX);let i=e.geometry.indirect;i!==null&&this.updateAttribute(i,Cn.INDIRECT)}updateAttribute(e,t){let n=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,n)):this.attributeCall.get(e.data)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e.data,n),this.attributeCall.set(e,n)):this.attributeCall.get(e)!==n&&(this.attributes.update(e,t),this.attributeCall.set(e,n))}getIndirect(e){return e.geometry.indirect}getIndex(e){let{geometry:t,material:n}=e,i=t.index;if(n.wireframe===!0){let s=this.wireframes,r=s.get(t);r===void 0?(r=Uy(t),s.set(t,r)):r.version!==yS(t)&&(this.attributes.delete(r),r=Uy(t),s.set(t,r)),i=r}return i}},Sm=class{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,n){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=n*(t/3):e.isPoints?this.render.points+=n*t:e.isLineSegments?this.render.lines+=n*(t/2):e.isLine?this.render.lines+=n*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}},ju=class{constructor(e){this.cacheKey=e,this.usedTimes=0}},bm=class extends ju{constructor(e,t,n){super(e),this.vertexProgram=t,this.fragmentProgram=n}},Mm=class extends ju{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}},IC=0,pc=class{constructor(e,t,n,i=null,s=null){this.id=IC++,this.code=e,this.stage=t,this.name=n,this.transforms=i,this.attributes=s,this.usedTimes=0}},Am=class extends On{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){let{backend:n}=this,i=this.get(e);if(this._needsComputeUpdate(e)){let s=i.pipeline;s&&(s.usedTimes--,s.computeProgram.usedTimes--);let r=this.nodes.getForCompute(e),c=this.programs.compute.get(r.computeShader);c===void 0&&(s&&s.computeProgram.usedTimes===0&&this._releaseProgram(s.computeProgram),c=new pc(r.computeShader,"compute",e.name,r.transforms,r.nodeAttributes),this.programs.compute.set(r.computeShader,c),n.createProgram(c));let a=this._getComputeCacheKey(e,c),l=this.caches.get(a);l===void 0&&(s&&s.usedTimes===0&&this._releasePipeline(s),l=this._getComputePipeline(e,c,a,t)),l.usedTimes++,c.usedTimes++,i.version=e.version,i.pipeline=l}return i.pipeline}getForRender(e,t=null){let{backend:n}=this,i=this.get(e);if(this._needsRenderUpdate(e)){let s=i.pipeline;s&&(s.usedTimes--,s.vertexProgram.usedTimes--,s.fragmentProgram.usedTimes--);let r=e.getNodeBuilderState(),c=e.material?e.material.name:"",a=this.programs.vertex.get(r.vertexShader);a===void 0&&(s&&s.vertexProgram.usedTimes===0&&this._releaseProgram(s.vertexProgram),a=new pc(r.vertexShader,"vertex",c),this.programs.vertex.set(r.vertexShader,a),n.createProgram(a));let l=this.programs.fragment.get(r.fragmentShader);l===void 0&&(s&&s.fragmentProgram.usedTimes===0&&this._releaseProgram(s.fragmentProgram),l=new pc(r.fragmentShader,"fragment",c),this.programs.fragment.set(r.fragmentShader,l),n.createProgram(l));let u=this._getRenderCacheKey(e,a,l),h=this.caches.get(u);h===void 0?(s&&s.usedTimes===0&&this._releasePipeline(s),h=this._getRenderPipeline(e,a,l,u,t)):e.pipeline=h,h.usedTimes++,a.usedTimes++,l.usedTimes++,i.pipeline=h}return i.pipeline}delete(e){let t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,n,i){n=n||this._getComputeCacheKey(e,t);let s=this.caches.get(n);return s===void 0&&(s=new Mm(n,t),this.caches.set(n,s),this.backend.createComputePipeline(s,i)),s}_getRenderPipeline(e,t,n,i,s){i=i||this._getRenderCacheKey(e,t,n);let r=this.caches.get(i);return r===void 0&&(r=new bm(i,t,n),this.caches.set(i,r),e.pipeline=r,this.backend.createRenderPipeline(e,s)),r}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,n){return t.id+","+n.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){let t=e.code,n=e.stage;this.programs[n].delete(t)}_needsComputeUpdate(e){let t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}},Em=class extends On{constructor(e,t,n,i,s,r){super(),this.backend=e,this.textures=n,this.pipelines=s,this.attributes=i,this.nodes=t,this.info=r,this.pipelines.bindings=this}getForRender(e){let t=e.getBindings();for(let n of t){let i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),i.bindGroup=n)}return t}getForCompute(e){let t=this.nodes.getForCompute(e).bindings;for(let n of t){let i=this.get(n);i.bindGroup===void 0&&(this._init(n),this.backend.createBindings(n,t,0),i.bindGroup=n)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(let t of e)this._update(t,e)}_init(e){for(let t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){let n=t.attribute,i=n.isIndirectStorageBufferAttribute?Cn.INDIRECT:Cn.STORAGE;this.attributes.update(n,i)}}_update(e,t){let{backend:n}=this,i=!1,s=!0,r=0,c=0;for(let a of e.bindings)if(!(a.isNodeUniformsGroup&&this.nodes.updateGroup(a)===!1)){if(a.isUniformBuffer)a.update()&&n.updateBinding(a);else if(a.isSampler)a.update();else if(a.isSampledTexture){let l=this.textures.get(a.texture);a.needsBindingsUpdate(l.generation)&&(i=!0);let u=a.update(),h=a.texture;u&&this.textures.updateTexture(h);let d=n.get(h);if(d.externalTexture!==void 0||l.isDefaultTexture?s=!1:(r=r*10+h.id,c+=h.version),n.isWebGPUBackend===!0&&d.texture===void 0&&d.externalTexture===void 0&&(console.error("Bindings._update: binding should be available:",a,u,h,a.textureNode.value,i),this.textures.updateTexture(h),i=!0),h.isStorageTexture===!0){let f=this.get(h);a.store===!0?f.needsMipmap=!0:this.textures.needsMipmaps(h)&&f.needsMipmap===!0&&(this.backend.generateMipmaps(h),f.needsMipmap=!1)}}}i===!0&&this.backend.updateBindings(e,t,s?r:0,c)}};function DC(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.material.id!==e.material.id?o.material.id-e.material.id:o.z!==e.z?o.z-e.z:o.id-e.id}function By(o,e){return o.groupOrder!==e.groupOrder?o.groupOrder-e.groupOrder:o.renderOrder!==e.renderOrder?o.renderOrder-e.renderOrder:o.z!==e.z?e.z-o.z:o.id-e.id}function Oy(o){return(o.transmission>0||o.transmissionNode)&&o.side===Ui&&o.forceSinglePass===!1}var wm=class{constructor(e,t,n){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,n),this.lightsArray=[],this.scene=t,this.camera=n,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,n,i,s,r,c){let a=this.renderItems[this.renderItemsIndex];return a===void 0?(a={id:e.id,object:e,geometry:t,material:n,groupOrder:i,renderOrder:e.renderOrder,z:s,group:r,clippingContext:c},this.renderItems[this.renderItemsIndex]=a):(a.id=e.id,a.object=e,a.geometry=t,a.material=n,a.groupOrder=i,a.renderOrder=e.renderOrder,a.z=s,a.group=r,a.clippingContext=c),this.renderItemsIndex++,a}push(e,t,n,i,s,r,c){let a=this.getNextRenderItem(e,t,n,i,s,r,c);e.occlusionTest===!0&&this.occlusionQueryCount++,n.transparent===!0||n.transmission>0?(Oy(n)&&this.transparentDoublePass.push(a),this.transparent.push(a)):this.opaque.push(a)}unshift(e,t,n,i,s,r,c){let a=this.getNextRenderItem(e,t,n,i,s,r,c);n.transparent===!0||n.transmission>0?(Oy(n)&&this.transparentDoublePass.unshift(a),this.transparent.unshift(a)):this.opaque.unshift(a)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||DC),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||By),this.transparent.length>1&&this.transparent.sort(t||By)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){let n=this.renderItems[e];if(n.id===null)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.groupOrder=null,n.renderOrder=null,n.z=null,n.group=null,n.clippingContext=null}}},Za=[],Rm=class{constructor(e){this.lighting=e,this.lists=new nn}get(e,t){let n=this.lists;Za[0]=e,Za[1]=t;let i=n.get(Za);return i===void 0&&(i=new wm(this.lighting,e,t),n.set(Za,i)),Za.length=0,i}dispose(){this.lists=new nn}},LC=0,Cm=class{constructor(){this.id=LC++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new re,this.scissor=!1,this.scissorValue=new re,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return vS(this)}};function vS(o){let{textures:e,activeCubeFace:t}=o,n=[t];for(let i of e)n.push(i.id);return wh(n)}var ja=[],FC=new si,UC=new ds,Nm=class{constructor(){this.chainMaps={}}get(e,t,n=null){ja[0]=e,ja[1]=t;let i;if(n===null)i="default";else{let c=n.texture.format;i=`${n.textures.length}:${c}:${n.samples}:${n.depthBuffer}:${n.stencilBuffer}`}let s=this._getChainMap(i),r=s.get(ja);return r===void 0&&(r=new Cm,s.set(ja,r)),ja.length=0,n!==null&&(r.sampleCount=n.samples===0?1:n.samples),r}getForClear(e=null){return this.get(FC,UC,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new nn)}dispose(){this.chainMaps={}}},BC=new M,Pm=class extends On{constructor(e,t,n){super(),this.renderer=e,this.backend=t,this.info=n}updateRenderTarget(e,t=0){let n=this.get(e),i=e.samples===0?1:e.samples,s=n.depthTextureMips||(n.depthTextureMips={}),r=e.textures,c=this.getSize(r[0]),a=c.width>>t,l=c.height>>t,u=e.depthTexture||s[t],h=e.depthBuffer===!0||e.stencilBuffer===!0,d=!1;u===void 0&&h&&(u=new Yt,u.format=e.stencilBuffer?ni:vn,u.type=e.stencilBuffer?zi:ke,u.image.width=a,u.image.height=l,s[t]=u),(n.width!==c.width||c.height!==n.height)&&(d=!0,u&&(u.needsUpdate=!0,u.image.width=a,u.image.height=l)),n.width=c.width,n.height=c.height,n.textures=r,n.depthTexture=u||null,n.depth=e.depthBuffer,n.stencil=e.stencilBuffer,n.renderTarget=e,n.sampleCount!==i&&(d=!0,u&&(u.needsUpdate=!0),n.sampleCount=i);let f={sampleCount:i};if(e.isXRRenderTarget!==!0){for(let m=0;m<r.length;m++){let g=r[m];d&&(g.needsUpdate=!0),this.updateTexture(g,f)}u&&this.updateTexture(u,f)}if(n.initialized!==!0){n.initialized=!0;let m=()=>{e.removeEventListener("dispose",m);for(let g=0;g<r.length;g++)this._destroyTexture(r[g]);u&&this._destroyTexture(u),this.delete(e)};e.addEventListener("dispose",m)}}updateTexture(e,t={}){let n=this.get(e);if(n.initialized===!0&&n.version===e.version)return;let i=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;if(i&&n.initialized===!0&&(s.destroySampler(e),s.destroyTexture(e)),e.isFramebufferTexture){let l=this.renderer.getRenderTarget();l?e.type=l.texture.type:e.type=zt}let{width:r,height:c,depth:a}=this.getSize(e);if(t.width=r,t.height=c,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,r,c):1,i||e.isStorageTexture===!0)s.createSampler(e),s.createTexture(e,t),n.generation=e.version;else if(n.initialized!==!0&&s.createSampler(e),e.version>0){let u=e.image;if(u===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(u.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){let h=[];for(let d of e.images)h.push(d);t.images=h}else t.image=u;(n.isDefaultTexture===void 0||n.isDefaultTexture===!0)&&(s.createTexture(e,t),n.isDefaultTexture=!1,n.generation=e.version),e.source.dataReady===!0&&s.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),n.isDefaultTexture=!0,n.generation=e.version;if(n.initialized!==!0){n.initialized=!0,n.generation=e.version,this.info.memory.textures++;let l=()=>{e.removeEventListener("dispose",l),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",l)}n.version=e.version}getSize(e,t=BC){let n=e.images?e.images[0]:e.image;return n?(n.image!==void 0&&(n=n.image),t.width=n.width||1,t.height=n.height||1,t.depth=e.isCubeTexture?6:n.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,n){let i;return e.isCompressedTexture?e.mipmaps?i=e.mipmaps.length:i=1:i=Math.floor(Math.log2(Math.max(t,n)))+1,i}needsMipmaps(e){return this.isEnvironmentTexture(e)||e.isCompressedTexture===!0||e.generateMipmaps}isEnvironmentTexture(e){let t=e.mapping;return t===ys||t===vs||t===li||t===Vi}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}},Ic=class extends q{constructor(e,t,n,i=1){super(e,t,n),this.a=i}set(e,t,n,i=1){return this.a=i,super.set(e,t,n)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}},Qu=class extends he{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}},OC=(o,e)=>F(new Qu(o,e)),Im=class extends Y{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.outputNode?this.outputNode.getMemberType(e,t):"void"}add(e){return this.nodes.push(e),this}If(e,t){let n=new cc(t);return this._currentCond=it(e,n),this.add(this._currentCond)}ElseIf(e,t){let n=new cc(t),i=it(e,n);return this._currentCond.elseNode=i,this._currentCond=i,this}Else(e){return this._currentCond.elseNode=new cc(e),this}build(e,...t){let n=P_();Sc(this);for(let i of this.nodes)i.build(e,"void");return Sc(n),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}},Su=L(Im);function VC(o){return Object.entries(o).map(([e,t])=>typeof t=="string"?{name:e,type:t,atomic:!1}:{name:e,type:t.type,atomic:t.atomic||!1})}var Dm=class extends Y{static get type(){return"StructTypeNode"}constructor(e,t=null){super("struct"),this.membersLayout=VC(e),this.name=t,this.isStructLayoutNode=!0}getLength(){let e=0;for(let t of this.membersLayout)e+=w_(t.type);return e}getMemberType(e,t){let n=this.membersLayout.find(i=>i.name===t);return n?n.type:"void"}getNodeType(e){return e.getStructTypeFromNode(this,this.membersLayout,this.name).name}generate(e){return this.getNodeType(e)}},Lm=class extends Y{static get type(){return"StructNode"}constructor(e,t){super("vec3"),this.structLayoutNode=e,this.values=t,this.isStructNode=!0}getNodeType(e){return this.structLayoutNode.getNodeType(e)}getMemberType(e,t){return this.structLayoutNode.getMemberType(e,t)}generate(e){let t=e.getVarFromNode(this),n=t.type,i=e.getPropertyName(t);return e.addLineFlowCode(`${i} = ${e.generateStruct(n,this.structLayoutNode.membersLayout,this.values)}`,this),t.name}},GC=(o,e=null)=>{let t=new Dm(o,e),n=(...i)=>{let s=null;if(i.length>0)if(i[0].isNode){s={};let r=Object.keys(o);for(let c=0;c<i.length;c++)s[r[c]]=i[c]}else s=i[0];return F(new Lm(t,s))};return n.layout=t,n.isStruct=!0,n},Ju=class extends Y{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}getNodeType(e){let t=e.getNodeProperties(this);if(t.membersLayout===void 0){let n=this.members,i=[];for(let s=0;s<n.length;s++){let r="m"+s,c=n[s].getNodeType(e);i.push({name:r,type:c,index:s})}t.membersLayout=i,t.structType=e.getOutputStructTypeFromNode(this,t.membersLayout)}return t.structType.name}generate(e){let t=e.getOutputStructName(),n=this.members,i=t!==""?t+".":"";for(let s=0;s<n.length;s++){let r=n[s].build(e);e.addLineFlowCode(`${i}m${s} = ${r}`,this)}return t}},zC=L(Ju);function TS(o,e){for(let t=0;t<o.length;t++)if(o[t].name===e)return t;return-1}var Fm=class extends Ju{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return this.outputNodes[e]!==void 0}get(e){return this.outputNodes[e]}merge(e){let t={...this.outputNodes,...e.outputNodes};return SS(t)}setup(e){let t=this.outputNodes,n=e.renderer.getRenderTarget(),i=[],s=n.textures;for(let r in t){let c=TS(s,r);i[c]=W(t[r])}return this.members=i,super.setup(e)}},SS=L(Fm),kC=w(([o])=>{let e=o.toUint().mul(747796405).add(2891336453),t=e.shiftRight(e.shiftRight(28).add(4)).bitXor(e).mul(277803737);return t.shiftRight(22).bitXor(t).toFloat().mul(1/2**32)}),Um=(o,e)=>mn(ee(4,o.mul(ce(1,o))),e),HC=(o,e)=>o.lessThan(.5)?Um(o.mul(2),e).div(2):ce(1,Um(ee(ce(1,o),2),e).div(2)),WC=(o,e,t)=>mn(gn(mn(o,e),Be(mn(o,e),mn(ce(1,o),t))),1/e),qC=(o,e)=>Wt(Lu.mul(e.mul(o).sub(1))).div(Lu.mul(e.mul(o).sub(1))),di=w(([o])=>o.fract().sub(.5).abs()).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),XC=w(([o])=>b(di(o.z.add(di(o.y.mul(1)))),di(o.z.add(di(o.x.mul(1)))),di(o.y.add(di(o.x.mul(1)))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),$C=w(([o,e,t])=>{let n=b(o).toVar(),i=y(1.4).toVar(),s=y(0).toVar(),r=b(n).toVar();return pe({start:y(0),end:y(3),type:"float",condition:"<="},()=>{let c=b(XC(r.mul(2))).toVar();n.addAssign(c.add(t.mul(y(.1).mul(e)))),r.mulAssign(1.8),i.mulAssign(1.5),n.mulAssign(1.2);let a=y(di(n.z.add(di(n.x.add(di(n.y)))))).toVar();s.addAssign(a.div(i)),r.addAssign(.14)}),s}).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"position",type:"vec3"},{name:"speed",type:"float"},{name:"time",type:"float"}]}),Bm=class extends Y{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){let t=this.parametersNodes,n=this._candidateFnCall;if(n===null){let i=null,s=-1;for(let r of this.functionNodes){let a=r.shaderNode.layout;if(a===null)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");let l=a.inputs;if(t.length===l.length){let u=0;for(let h=0;h<t.length;h++){let d=t[h],f=l[h];d.getNodeType(e)===f.type?u++:u=0}u>s&&(i=r,s=u)}}this._candidateFnCall=n=i(...t)}return n}},YC=L(Bm),st=o=>(...e)=>YC(o,...e),qs=X(0).setGroup(Z).onRenderUpdate(o=>o.time),bS=X(0).setGroup(Z).onRenderUpdate(o=>o.deltaTime),KC=X(0,"uint").setGroup(Z).onRenderUpdate(o=>o.frameId),ZC=(o=1)=>(console.warn('TSL: timerLocal() is deprecated. Use "time" instead.'),qs.mul(o)),jC=(o=1)=>(console.warn('TSL: timerGlobal() is deprecated. Use "time" instead.'),qs.mul(o)),QC=(o=1)=>(console.warn('TSL: timerDelta() is deprecated. Use "deltaTime" instead.'),bS.mul(o)),JC=(o=qs)=>o.add(.75).mul(Math.PI*2).sin().mul(.5).add(.5),e1=(o=qs)=>o.fract().round(),t1=(o=qs)=>o.add(.5).fract().mul(2).sub(1).abs(),n1=(o=qs)=>o.fract(),i1=w(([o,e,t=U(.5)])=>Wh(o.sub(t),e).add(t)),s1=w(([o,e,t=U(.5)])=>{let n=o.sub(t),i=n.dot(n),r=i.mul(i).mul(e);return o.add(n.mul(r))}),r1=w(({position:o=null,horizontal:e=!0,vertical:t=!1})=>{let n;o!==null?(n=Qt.toVar(),n[3][0]=o.x,n[3][1]=o.y,n[3][2]=o.z):n=Qt;let i=Ct.mul(n);return Tc(e)&&(i[0][0]=Qt[0].length(),i[0][1]=0,i[0][2]=0),Tc(t)&&(i[1][0]=0,i[1][1]=Qt[1].length(),i[1][2]=0),i[2][0]=0,i[2][1]=0,i[2][2]=1,Hs.mul(i).mul(Ee)}),o1=w(([o=null])=>{let e=Wu();return Wu(hx(o)).sub(e).lessThan(0).select(Un,o)}),Om=class extends Y{static get type(){return"SpriteSheetUVNode"}constructor(e,t=be(),n=y(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=n}setup(){let{frameNode:e,uvNode:t,countNode:n}=this,{width:i,height:s}=n,r=e.mod(i.mul(s)).floor(),c=r.mod(i),a=s.sub(r.add(1).div(i).ceil()),l=n.reciprocal(),u=U(c,a);return t.add(u).mul(l)}},a1=L(Om),Vm=class extends Y{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,n=null,i=y(1),s=Ee,r=wt){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=n,this.scaleNode=i,this.positionNode=s,this.normalNode=r}setup(){let{textureXNode:e,textureYNode:t,textureZNode:n,scaleNode:i,positionNode:s,normalNode:r}=this,c=r.abs().normalize();c=c.div(c.dot(b(1)));let a=s.yz.mul(i),l=s.zx.mul(i),u=s.xy.mul(i),h=e.value,d=t!==null?t.value:h,f=n!==null?n.value:h,m=ae(h,a).mul(c.x),g=ae(d,l).mul(c.y),_=ae(f,u).mul(c.z);return Be(m,g,_)}},MS=L(Vm),c1=(...o)=>MS(...o),Wr=new Tt,ws=new M,qr=new M,Cf=new M,Qa=new ue,au=new M(0,0,-1),An=new re,Ja=new M,cu=new M,ec=new re,lu=new H,eh=new Ut,l1=Un.flipX();eh.depthTexture=new Yt(1,1);var Nf=!1,Gm=class o extends Jt{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||eh.texture,l1),this._reflectorBaseNode=e.reflector||new zm(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(this._depthNode===null){if(this._reflectorBaseNode.depth!==!0)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=F(new o({defaultTexture:eh.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){let e=new this.constructor(this.reflectorNode);return e._reflectorBaseNode=this._reflectorBaseNode,e}},zm=class extends Y{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();let{target:n=new ze,resolution:i=1,generateMipmaps:s=!1,bounces:r=!0,depth:c=!1}=t;this.textureNode=e,this.target=n,this.resolution=i,this.generateMipmaps=s,this.bounces=r,this.depth=c,this.updateBeforeType=r?J.RENDER:J.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(e,t){let n=this.resolution;t.getDrawingBufferSize(lu),e.setSize(Math.round(lu.width*n),Math.round(lu.height*n))}setup(e){return this._updateResolution(eh,e.renderer),super.setup(e)}getVirtualCamera(e){let t=this.virtualCameras.get(e);return t===void 0&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return t===void 0&&(t=new Ut(0,0,{type:bt}),this.generateMipmaps===!0&&(t.texture.minFilter=Wd,t.texture.generateMipmaps=!0),this.depth===!0&&(t.depthTexture=new Yt),this.renderTargets.set(e,t)),t}updateBefore(e){if(this.bounces===!1&&Nf)return!1;Nf=!0;let{scene:t,camera:n,renderer:i,material:s}=e,{target:r}=this,c=this.getVirtualCamera(n),a=this.getRenderTarget(c);if(i.getDrawingBufferSize(lu),this._updateResolution(a,i),qr.setFromMatrixPosition(r.matrixWorld),Cf.setFromMatrixPosition(n.matrixWorld),Qa.extractRotation(r.matrixWorld),ws.set(0,0,1),ws.applyMatrix4(Qa),Ja.subVectors(qr,Cf),Ja.dot(ws)>0)return;Ja.reflect(ws).negate(),Ja.add(qr),Qa.extractRotation(n.matrixWorld),au.set(0,0,-1),au.applyMatrix4(Qa),au.add(Cf),cu.subVectors(qr,au),cu.reflect(ws).negate(),cu.add(qr),c.coordinateSystem=n.coordinateSystem,c.position.copy(Ja),c.up.set(0,1,0),c.up.applyMatrix4(Qa),c.up.reflect(ws),c.lookAt(cu),c.near=n.near,c.far=n.far,c.updateMatrixWorld(),c.projectionMatrix.copy(n.projectionMatrix),Wr.setFromNormalAndCoplanarPoint(ws,qr),Wr.applyMatrix4(c.matrixWorldInverse),An.set(Wr.normal.x,Wr.normal.y,Wr.normal.z,Wr.constant);let l=c.projectionMatrix;ec.x=(Math.sign(An.x)+l.elements[8])/l.elements[0],ec.y=(Math.sign(An.y)+l.elements[9])/l.elements[5],ec.z=-1,ec.w=(1+l.elements[10])/l.elements[14],An.multiplyScalar(1/An.dot(ec));let u=0;l.elements[2]=An.x,l.elements[6]=An.y,l.elements[10]=i.coordinateSystem===$t?An.z-u:An.z+1-u,l.elements[14]=An.w,this.textureNode.value=a.texture,this.depth===!0&&(this.textureNode.getDepthNode().value=a.depthTexture),s.visible=!1;let h=i.getRenderTarget(),d=i.getMRT(),f=i.autoClear;i.setMRT(null),i.setRenderTarget(a),i.autoClear=!0,i.render(t,c),i.setMRT(d),i.setRenderTarget(h),i.autoClear=f,s.visible=!0,Nf=!1}},u1=o=>F(new Gm(o)),Pf=new gs(-1,1,1,-1,0,1),km=class extends bn{constructor(e=!1){super();let t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new ct([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new ct(t,2))}},h1=new km,Dc=class extends Vt{constructor(e=null){super(h1,e),this.camera=Pf,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,Pf)}render(e){e.render(this,Pf)}},d1=new H,Hm=class extends Jt{static get type(){return"RTTNode"}constructor(e,t=null,n=null,i={type:bt}){let s=new Ut(t,n,i);super(s.texture,be()),this.node=e,this.width=t,this.height=n,this.pixelRatio=1,this.renderTarget=s,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this._rttNode=null,this._quadMesh=new Dc(new Re),this.updateBeforeType=J.RENDER}get autoSize(){return this.width===null}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;let n=e*this.pixelRatio,i=t*this.pixelRatio;this.renderTarget.setSize(n,i),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(this.textureNeedsUpdate===!1&&this.autoUpdate===!1)return;if(this.textureNeedsUpdate=!1,this.autoSize===!0){this.pixelRatio=e.getPixelRatio();let n=e.getSize(d1);this.setSize(n.width,n.height)}this._quadMesh.material.fragmentNode=this._rttNode;let t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){let e=new Jt(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}},AS=(o,...e)=>F(new Hm(F(o),...e)),f1=(o,...e)=>o.isTextureNode?o:o.isPassNode?o.getTextureNode():AS(o,...e),Jr=w(([o,e,t],n)=>{let i;n.renderer.coordinateSystem===$t?(o=U(o.x,o.y.oneMinus()).mul(2).sub(1),i=W(b(o,e),1)):i=W(b(o.x,o.y.oneMinus(),e).mul(2).sub(1),1);let s=W(t.mul(i));return s.xyz.div(s.w)}),p1=w(([o,e])=>{let t=e.mul(W(o,1)),n=t.xy.div(t.w).mul(.5).add(.5).toVar();return U(n.x,n.y.oneMinus())}),m1=w(([o,e,t])=>{let n=Zi(Pe(e)),i=$e(o.mul(n)).toVar(),s=Pe(e,i).toVar(),r=Pe(e,i.sub($e(2,0))).toVar(),c=Pe(e,i.sub($e(1,0))).toVar(),a=Pe(e,i.add($e(1,0))).toVar(),l=Pe(e,i.add($e(2,0))).toVar(),u=Pe(e,i.add($e(0,2))).toVar(),h=Pe(e,i.add($e(0,1))).toVar(),d=Pe(e,i.sub($e(0,1))).toVar(),f=Pe(e,i.sub($e(0,2))).toVar(),m=ye(ce(y(2).mul(c).sub(r),s)).toVar(),g=ye(ce(y(2).mul(a).sub(l),s)).toVar(),_=ye(ce(y(2).mul(h).sub(u),s)).toVar(),x=ye(ce(y(2).mul(d).sub(f),s)).toVar(),T=Jr(o,s,t).toVar(),A=m.lessThan(g).select(T.sub(Jr(o.sub(U(y(1).div(n.x),0)),c,t)),T.negate().add(Jr(o.add(U(y(1).div(n.x),0)),a,t))),E=_.lessThan(x).select(T.sub(Jr(o.add(U(0,y(1).div(n.y))),h,t)),T.negate().add(Jr(o.sub(U(0,y(1).div(n.y))),d,t)));return xi(Bh(A,E))}),Wm=class extends ps{constructor(e,t,n=Float32Array){let i=ArrayBuffer.isView(e)?e:new n(e*t);super(i,t),this.isStorageInstancedBufferAttribute=!0}},qm=class extends et{constructor(e,t,n=Float32Array){let i=ArrayBuffer.isView(e)?e:new n(e*t);super(i,t),this.isStorageBufferAttribute=!0}},Xm=class extends gi{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}getMemberType(e,t){let n=this.storageBufferNode.structTypeNode;return n?n.getMemberType(e,t):"void"}setup(e){return e.isAvailable("storageBuffer")===!1&&this.node.isPBO===!0&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let n,i=e.context.assign;if(e.isAvailable("storageBuffer")===!1?this.node.isPBO===!0&&i!==!0&&(this.node.value.isInstancedBufferAttribute||e.shaderStage!=="compute")?n=e.generatePBO(this):n=this.node.build(e):n=super.generate(e),i!==!0){let s=this.getNodeType(e);n=e.format(n,s,t)}return n}},g1=L(Xm),$m=class extends Cc{static get type(){return"StorageBufferNode"}constructor(e,t=null,n=0){let i,s=null;t&&t.isStruct?(i="struct",s=t.layout):t===null&&(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)?(i=mv(e.itemSize),n=e.count):i=t,super(e,i,n),this.isStorageBufferNode=!0,this.structTypeNode=s,this.access=ut.READ_WRITE,this.isAtomic=!1,this.isPBO=!1,this._attribute=null,this._varying=null,this.global=!0,e.isStorageBufferAttribute!==!0&&e.isStorageInstancedBufferAttribute!==!0&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(this.bufferCount===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return g1(this,e)}setPBO(e){return this.isPBO=e,this}getPBO(){return this.isPBO}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(ut.READ_ONLY)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return this._attribute===null&&(this._attribute=kc(this.value),this._varying=ft(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(this.structTypeNode!==null)return this.structTypeNode.getNodeType(e);if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);let{attribute:t}=this.getAttributeData();return t.getNodeType(e)}generate(e){if(this.structTypeNode!==null&&this.structTypeNode.build(e),e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);let{attribute:t,varying:n}=this.getAttributeData(),i=n.build(e);return e.registerTransform(i,t),i}},qh=(o,e=null,t=0)=>F(new $m(o,e,t)),_1=(o,e,t)=>(console.warn('THREE.TSL: "storageObject()" is deprecated. Use "storage().setPBO( true )" instead.'),qh(o,e,t).setPBO(!0)),x1=(o,e="float")=>{let t,n;e.isStruct===!0?(t=e.layout.getLength(),n=Eu("float")):(t=w_(e),n=Eu(e));let i=new qm(o,t,n);return qh(i,e,o)},y1=(o,e="float")=>{let t,n;e.isStruct===!0?(t=e.layout.getLength(),n=Eu("float")):(t=w_(e),n=Eu(e));let i=new Wm(o,t,n);return qh(i,e,o)},Ym=class extends Vu{static get type(){return"VertexColorNode"}constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){let e=this.index;return"color"+(e>0?e:"")}generate(e){let t=this.getAttributeName(e),n=e.hasGeometryAttribute(t),i;return n===!0?i=super.generate(e):i=e.generateConst(this.nodeType,new re(1,1,1,1)),i}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}},v1=o=>F(new Ym(o)),Km=class extends Y{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}},T1=O(Km),tc=new Ot,If=new ue,xn=class o extends Y{static get type(){return"SceneNode"}constructor(e=o.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){let t=this.scope,n=this.scene!==null?this.scene:e.scene,i;return t===o.BACKGROUND_BLURRINESS?i=me("backgroundBlurriness","float",n):t===o.BACKGROUND_INTENSITY?i=me("backgroundIntensity","float",n):t===o.BACKGROUND_ROTATION?i=X("mat4").label("backgroundRotation").setGroup(Z).onRenderUpdate(()=>{let s=n.background;return s!==null&&s.isTexture&&s.mapping!==va?(tc.copy(n.backgroundRotation),tc.x*=-1,tc.y*=-1,tc.z*=-1,If.makeRotationFromEuler(tc)):If.identity(),If}):console.error("THREE.SceneNode: Unknown scope:",t),i}};xn.BACKGROUND_BLURRINESS="backgroundBlurriness";xn.BACKGROUND_INTENSITY="backgroundIntensity";xn.BACKGROUND_ROTATION="backgroundRotation";var ES=O(xn,xn.BACKGROUND_BLURRINESS),Zm=O(xn,xn.BACKGROUND_INTENSITY),wS=O(xn,xn.BACKGROUND_ROTATION),jm=class extends Jt{static get type(){return"StorageTextureNode"}constructor(e,t,n=null){super(e,t),this.storeNode=n,this.isStorageTextureNode=!0,this.access=ut.WRITE_ONLY}getInputType(){return"storageTexture"}setup(e){super.setup(e);let t=e.getNodeProperties(this);t.storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let n;return this.storeNode!==null?n=this.generateStore(e):n=super.generate(e,t),n}toReadWrite(){return this.setAccess(ut.READ_WRITE)}toReadOnly(){return this.setAccess(ut.READ_ONLY)}toWriteOnly(){return this.setAccess(ut.WRITE_ONLY)}generateStore(e){let t=e.getNodeProperties(this),{uvNode:n,storeNode:i}=t,s=super.generate(e,"property"),r=n.build(e,"uvec2"),c=i.build(e,"vec4"),a=e.generateTextureStore(e,s,r,c);e.addLineFlowCode(a,this)}},RS=L(jm),S1=(o,e,t)=>{let n=RS(o,e,t);return t!==null&&n.append(),n},Qm=class extends ho{static get type(){return"UserDataNode"}constructor(e,t,n=null){super(e,t,n),this.userData=n}updateReference(e){return this.reference=this.userData!==null?this.userData:e.object.userData,this.reference}},b1=(o,e,t)=>F(new Qm(o,e,t)),Vy=new WeakMap,Jm=class extends Me{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=J.OBJECT,this.updateAfterType=J.OBJECT,this.previousModelWorldMatrix=X(new ue),this.previousProjectionMatrix=X(new ue).setGroup(Z),this.previousCameraViewMatrix=X(new ue)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:n}){let i=Gy(n);this.previousModelWorldMatrix.value.copy(i);let s=CS(t);s.frameId!==e&&(s.frameId=e,s.previousProjectionMatrix===void 0?(s.previousProjectionMatrix=new ue,s.previousCameraViewMatrix=new ue,s.currentProjectionMatrix=new ue,s.currentCameraViewMatrix=new ue,s.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),s.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(s.previousProjectionMatrix.copy(s.currentProjectionMatrix),s.previousCameraViewMatrix.copy(s.currentCameraViewMatrix)),s.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),s.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(s.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(s.previousCameraViewMatrix))}updateAfter({object:e}){Gy(e).copy(e.matrixWorld)}setup(){let e=this.projectionMatrix===null?Hs:X(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),n=e.mul(Ws).mul(Ee),i=this.previousProjectionMatrix.mul(t).mul(zu),s=n.xy.div(n.w),r=i.xy.div(i.w);return ce(s,r)}};function CS(o){let e=Vy.get(o);return e===void 0&&(e={},Vy.set(o,e)),e}function Gy(o,e=0){let t=CS(o),n=t[e];return n===void 0&&(t[e]=n=new ue),n}var M1=O(Jm),NS=w(([o,e])=>Et(1,o.oneMinus().div(e)).oneMinus()).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),PS=w(([o,e])=>Et(o.div(e.oneMinus()),1)).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),IS=w(([o,e])=>o.oneMinus().mul(e.oneMinus()).oneMinus()).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),DS=w(([o,e])=>fe(o.mul(2).mul(e),o.oneMinus().mul(2).mul(e.oneMinus()).oneMinus(),Uh(.5,o))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),A1=w(([o,e])=>{let t=e.a.add(o.a.mul(e.a.oneMinus()));return W(e.rgb.mul(e.a).add(o.rgb.mul(o.a).mul(e.a.oneMinus())).div(t),t)}).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),E1=(...o)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),NS(o)),w1=(...o)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),PS(o)),R1=(...o)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),IS(o)),C1=(...o)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),DS(o)),N1=w(([o])=>yx(o.rgb)),P1=w(([o,e=y(1)])=>e.mix(yx(o.rgb),o.rgb)),I1=w(([o,e=y(1)])=>{let t=Be(o.r,o.g,o.b).div(3),n=o.r.max(o.g.max(o.b)),i=n.sub(t).mul(e).mul(-3);return fe(o.rgb,n,i)}),D1=w(([o,e=y(1)])=>{let t=b(.57735,.57735,.57735),n=e.cos();return b(o.rgb.mul(n).add(t.cross(o.rgb).mul(e.sin()).add(t.mul(Ji(t,o.rgb).mul(n.oneMinus())))))}),yx=(o,e=b(Ae.getLuminanceCoefficients(new M)))=>Ji(o,e),L1=w(([o,e=b(1),t=b(0),n=b(1),i=y(1),s=b(Ae.getLuminanceCoefficients(new M,ln))])=>{let r=o.rgb.dot(b(s)),c=Le(o.rgb.mul(e).add(t),0).toVar(),a=c.pow(n).toVar();return ne(c.r.greaterThan(0),()=>{c.r.assign(a.r)}),ne(c.g.greaterThan(0),()=>{c.g.assign(a.g)}),ne(c.b.greaterThan(0),()=>{c.b.assign(a.b)}),c.assign(r.add(c.sub(r).mul(i))),W(c.rgb,o.a)}),eg=class extends Me{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){let{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}},F1=L(eg),U1=new H,th=class extends Jt{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}},nh=class extends th{static get type(){return"PassMultipleTextureNode"}constructor(e,t,n=!1){super(e,null),this.textureName=t,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}},Vn=class o extends Me{static get type(){return"PassNode"}constructor(e,t,n,i={}){super("vec4"),this.scope=e,this.scene=t,this.camera=n,this.options=i,this._pixelRatio=1,this._width=1,this._height=1;let s=new Yt;s.isRenderTargetTexture=!0,s.name="depth";let r=new Ut(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:bt,...i});r.texture.name="output",r.depthTexture=s,this.renderTarget=r,this._textures={output:r.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=X(0),this._cameraFar=X(0),this._mrt=null,this.isPassNode=!0,this.updateBeforeType=J.FRAME}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){let t=this._previousTextures[e];if(t!==void 0){let n=this._textures[e],i=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[i]=t,this._textures[e]=t,this._previousTextures[e]=n,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=F(new nh(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=F(new nh(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){let n=this._cameraNear,i=this._cameraFar;this._viewZNodes[e]=t=dx(this.getTextureNode(e),n,i)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){let n=this._cameraNear,i=this._cameraFar,s=this.getViewZNode(e);this._linearDepthNodes[e]=t=ao(s,n,i)}return t}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,e.backend.isWebGLBackend===!0&&(this.renderTarget.samples=0),this.renderTarget.texture.type=e.getColorBufferType(),this.scope===o.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){let{renderer:t}=e,{scene:n,camera:i}=this;this._pixelRatio=t.getPixelRatio();let s=t.getSize(U1);this.setSize(s.width,s.height);let r=t.getRenderTarget(),c=t.getMRT();this._cameraNear.value=i.near,this._cameraFar.value=i.far;for(let a in this._previousTextures)this.toggleTexture(a);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(n,i),t.setRenderTarget(r),t.setMRT(c)}setSize(e,t){this._width=e,this._height=t;let n=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget.setSize(n,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}};Vn.COLOR="color";Vn.DEPTH="depth";var B1=(o,e,t)=>F(new Vn(Vn.COLOR,o,e,t)),O1=(o,e)=>F(new th(o,e)),V1=(o,e,t)=>F(new Vn(Vn.DEPTH,o,e,t)),tg=class extends Vn{static get type(){return"ToonOutlinePassNode"}constructor(e,t,n,i,s){super(Vn.COLOR,e,t),this.colorNode=n,this.thicknessNode=i,this.alphaNode=s,this._materialCache=new WeakMap}updateBefore(e){let{renderer:t}=e,n=t.getRenderObjectFunction();t.setRenderObjectFunction((i,s,r,c,a,l,u,h)=>{if((a.isMeshToonMaterial||a.isMeshToonNodeMaterial)&&a.wireframe===!1){let d=this._getOutlineMaterial(a);t.renderObject(i,s,r,c,d,l,u,h)}t.renderObject(i,s,r,c,a,l,u,h)}),super.updateBefore(e),t.setRenderObjectFunction(n)}_createMaterial(){let e=new Re;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=St;let t=wt.negate(),n=Hs.mul(Ws),i=y(1),s=n.mul(W(Ee,1)),r=n.mul(W(Ee.add(t),1)),c=xi(s.sub(r));return e.vertexNode=s.add(c.mul(this.thicknessNode).mul(s.w).mul(i)),e.colorNode=W(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return t===void 0&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}},G1=(o,e,t=new q(0,0,0),n=.003,i=1)=>F(new tg(o,e,F(t),F(n),F(i))),LS=w(([o,e])=>o.mul(e).clamp()).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),FS=w(([o,e])=>(o=o.mul(e),o.div(o.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),US=w(([o,e])=>{o=o.mul(e),o=o.sub(.004).max(0);let t=o.mul(o.mul(6.2).add(.5)),n=o.mul(o.mul(6.2).add(1.7)).add(.06);return t.div(n).pow(2.2)}).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),z1=w(([o])=>{let e=o.mul(o.add(.0245786)).sub(90537e-9),t=o.mul(o.add(.432951).mul(.983729)).add(.238081);return e.div(t)}),BS=w(([o,e])=>{let t=dt(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),n=dt(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return o=o.mul(e).div(.6),o=t.mul(o),o=z1(o),o=n.mul(o),o.clamp()}).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),k1=dt(b(1.6605,-.1246,-.0182),b(-.5876,1.1329,-.1006),b(-.0728,-.0083,1.1187)),H1=dt(b(.6274,.0691,.0164),b(.3293,.9195,.088),b(.0433,.0113,.8956)),W1=w(([o])=>{let e=b(o).toVar(),t=b(e.mul(e)).toVar(),n=b(t.mul(t)).toVar();return y(15.5).mul(n.mul(t)).sub(ee(40.14,n.mul(e))).add(ee(31.96,n).sub(ee(6.868,t.mul(e))).add(ee(.4298,t).add(ee(.1191,e).sub(.00232))))}),OS=w(([o,e])=>{let t=b(o).toVar(),n=dt(b(.856627153315983,.137318972929847,.11189821299995),b(.0951212405381588,.761241990602591,.0767994186031903),b(.0482516061458583,.101439036467562,.811302368396859)),i=dt(b(1.1271005818144368,-.1413297634984383,-.14132976349843826),b(-.11060664309660323,1.157823702216272,-.11060664309660294),b(-.016493938717834573,-.016493938717834257,1.2519364065950405)),s=y(-12.47393),r=y(4.026069);return t.mulAssign(e),t.assign(H1.mul(t)),t.assign(n.mul(t)),t.assign(Le(t,1e-10)),t.assign(Nn(t)),t.assign(t.sub(s).div(r.sub(s))),t.assign(Dn(t,0,1)),t.assign(W1(t)),t.assign(i.mul(t)),t.assign(mn(Le(b(0),t),b(2.2))),t.assign(k1.mul(t)),t.assign(Dn(t,0,1)),t}).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),VS=w(([o,e])=>{let t=y(.76),n=y(.15);o=o.mul(e);let i=Et(o.r,Et(o.g,o.b)),s=it(i.lessThan(.08),i.sub(ee(6.25,i.mul(i))),.04);o.subAssign(s);let r=Le(o.r,Le(o.g,o.b));ne(r.lessThan(t),()=>o);let c=ce(1,t),a=ce(1,c.mul(c).div(r.add(c.sub(t))));o.mulAssign(a.div(r));let l=ce(1,gn(1,n.mul(r.sub(a)).add(1)));return fe(o,b(a),l)}).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),Ne=class extends Y{static get type(){return"CodeNode"}constructor(e="",t=[],n=""){super("code"),this.isCodeNode=!0,this.code=e,this.includes=t,this.language=n}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){let t=this.getIncludes(e);for(let i of t)i.build(e);let n=e.getCodeFromNode(this,this.getNodeType(e));return n.code=this.code,n.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}},Xh=L(Ne),q1=(o,e)=>Xh(o,e,"js"),X1=(o,e)=>Xh(o,e,"wgsl"),$1=(o,e)=>Xh(o,e,"glsl"),ih=class extends Ne{static get type(){return"FunctionNode"}constructor(e="",t=[],n=""){super(e,t,n)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){let t=e.getDataFromNode(this),n=t.nodeFunction;return n===void 0&&(n=e.parser.parseFunction(this.code),t.nodeFunction=n),n}generate(e,t){super.generate(e);let n=this.getNodeFunction(e),i=n.name,s=n.type,r=e.getCodeFromNode(this,s);i!==""&&(r.name=i);let c=e.getPropertyName(r),a=this.getNodeFunction(e).getCode(c);return r.code=a+`
`,t==="property"?c:e.format(`${c}()`,s,t)}},GS=(o,e=[],t="")=>{for(let s=0;s<e.length;s++){let r=e[s];typeof r=="function"&&(e[s]=r.functionNode)}let n=F(new ih(o,e,t)),i=(...s)=>n.call(...s);return i.functionNode=n,i},Y1=(o,e)=>GS(o,e,"glsl"),K1=(o,e)=>GS(o,e,"wgsl"),ng=class extends Y{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outputType=null,this.events=new Ft,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return this.outputType!==null}set value(e){this._value!==e&&(this._cache&&this.inputType==="URL"&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){let e=this.value;if(e&&this._cache===null&&this.inputType==="URL"&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&e.value!==null&&e.value!==void 0&&((this.inputType==="URL"||this.inputType==="String")&&typeof e.value=="string"||this.inputType==="Number"&&typeof e.value=="number"||this.inputType==="Vector2"&&e.value.isVector2||this.inputType==="Vector3"&&e.value.isVector3||this.inputType==="Vector4"&&e.value.isVector4||this.inputType==="Color"&&e.value.isColor||this.inputType==="Matrix3"&&e.value.isMatrix3||this.inputType==="Matrix4"&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:y()}serialize(e){super.serialize(e),this.value!==null?this.inputType==="ArrayBuffer"?e.value=xv(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;e.value!==null&&(e.inputType==="ArrayBuffer"?t=yv(e.value):e.inputType==="Texture"?t=e.meta.textures[e.value]:t=e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}},bu=L(ng),sh=class extends Map{get(e,t=null,...n){if(this.has(e))return super.get(e);if(t!==null){let i=t(...n);return this.set(e,i),i}}},ig=class{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){let t=this.parameters[e];return t?t.getValue():null}},Mu=new sh,sg=class extends Y{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new sh,this._output=bu(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(let t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(let t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){let n=this._outputs;return n[e]===void 0?n[e]=bu(t):n[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){let n=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),n[e]=t,n[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),n[e]=t,n[e].events.addEventListener("refresh",this.onRefresh)):n[e]===void 0?(n[e]=bu(t),n[e].events.addEventListener("refresh",this.onRefresh)):n[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(let e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){let i=this.getObject()[e];if(typeof i=="function")return i(...t)}async callAsync(e,...t){let i=this.getObject()[e];if(typeof i=="function")return i.constructor.name==="AsyncFunction"?await i(...t):i(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){e!==null?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),this._object!==null)return this._object;let e=()=>this.refresh(),t=(l,u)=>this.setOutput(l,u),n=new ig(this),i=Mu.get("THREE"),s=Mu.get("TSL"),r=this.getMethod(),c=[n,this._local,Mu,e,t,i,s];this._object=r(...c);let a=this._object.layout;if(a&&(a.cache===!1&&this._local.clear(),this._output.outputType=a.outputType||null,Array.isArray(a.elements)))for(let l of a.elements){let u=l.id||l.name;l.inputType&&(this.getParameter(u)===void 0&&this.setParameter(u,null),this.getParameter(u).inputType=l.inputType),l.outputType&&(this.getOutput(u)===void 0&&this.setOutput(u,null),this.getOutput(u).outputType=l.outputType)}return this._object}deserialize(e){super.deserialize(e);for(let t in this.parameters){let n=this.parameters[t];n.isScriptableNode&&(n=n.getDefaultOutput()),n.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){let e=this.getDefaultOutput().value;return e&&e.isNode?e:y()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),this._method!==null)return this._method;let e=["parameters","local","global","refresh","setOutput","THREE","TSL"],n=["layout","init","main","dispose"].join(", "),i="var "+n+`; var output = {};
`,s=`
return { ...output, `+n+" };",r=i+this.codeNode.code+s;return this._method=new Function(...e,r),this._method}dispose(){this._method!==null&&(this._object&&typeof this._object.dispose=="function"&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){let t=[fv(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(let n in this.parameters)t.push(this.parameters[n].getCacheKey(e));return wh(t)}set needsUpdate(e){e===!0&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return this.codeNode===null?this:(this._needsOutputUpdate===!0&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value,this)}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}},Z1=L(sg);function zS(o){let e,t=o.context.getViewZ;return t!==void 0&&(e=t(this)),(e||De.z).negate()}var vx=w(([o,e],t)=>{let n=zS(t);return Ln(o,e,n)}),Tx=w(([o],e)=>{let t=zS(e);return o.mul(o,t,t).negate().exp().oneMinus()}),Lc=w(([o,e])=>W(e.toFloat().mix(wc.rgb,o.toVec3()),wc.a));function j1(o,e,t){return console.warn('THREE.TSL: "rangeFog( color, near, far )" is deprecated. Use "fog( color, rangeFogFactor( near, far ) )" instead.'),Lc(o,vx(e,t))}function Q1(o,e){return console.warn('THREE.TSL: "densityFog( color, density )" is deprecated. Use "fog( color, densityFogFactor( density ) )" instead.'),Lc(o,Tx(e))}var Rs=null,Cs=null,rg=class extends Y{static get type(){return"RangeNode"}constructor(e=y(),t=y()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){let t=e.getTypeLength(Ki(this.minNode.value)),n=e.getTypeLength(Ki(this.maxNode.value));return t>n?t:n}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){let t=e.object,n=null;if(t.count>1){let i=this.minNode.value,s=this.maxNode.value,r=e.getTypeLength(Ki(i)),c=e.getTypeLength(Ki(s));Rs=Rs||new re,Cs=Cs||new re,Rs.setScalar(0),Cs.setScalar(0),r===1?Rs.setScalar(i):i.isColor?Rs.set(i.r,i.g,i.b,1):Rs.set(i.x,i.y,i.z||0,i.w||0),c===1?Cs.setScalar(s):s.isColor?Cs.set(s.r,s.g,s.b,1):Cs.set(s.x,s.y,s.z||0,s.w||0);let a=4,l=a*t.count,u=new Float32Array(l);for(let d=0;d<l;d++){let f=d%a,m=Rs.getComponent(f),g=Cs.getComponent(f);u[d]=Hr.lerp(m,g,Math.random())}let h=this.getNodeType(e);if(t.count<=4096)n=Hc(u,"vec4",t.count).element(Kc).convert(h);else{let d=new ps(u,4);e.geometry.setAttribute("__range"+this.id,d),n=Bu(d).convert(h)}}else n=y(0);return n}},J1=L(rg),og=class extends Y{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){e.hasBuiltin(this._builtinName)}generate(e,t){let n=this.getBuiltinName(e),i=this.getNodeType(e);return e.shaderStage==="compute"?e.format(n,i,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${n} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(i))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}},jc=(o,e)=>F(new og(o,e)),eN=jc("numWorkgroups","uvec3"),tN=jc("workgroupId","uvec3"),nN=jc("globalId","uvec3"),iN=jc("localId","uvec3"),sN=jc("subgroupSize","uint"),ag=class extends Y{constructor(e){super(),this.scope=e}generate(e){let{scope:t}=this,{renderer:n}=e;n.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}},Sx=L(ag),rN=()=>Sx("workgroup").append(),oN=()=>Sx("storage").append(),aN=()=>Sx("texture").append(),cg=class extends gi{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let n,i=e.context.assign;if(n=super.generate(e),i!==!0){let s=this.getNodeType(e);n=e.format(n,s,t)}return n}},lg=class extends Y{constructor(e,t,n=0){super(t),this.bufferType=t,this.bufferCount=n,this.isWorkgroupInfoNode=!0,this.elementType=t,this.scope=e}label(e){return this.name=e,this}setScope(e){return this.scope=e,this}getElementType(){return this.elementType}getInputType(){return`${this.scope}Array`}element(e){return F(new cg(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}},cN=(o,e)=>F(new lg("Workgroup",o,e)),Oe=class extends Me{static get type(){return"AtomicFunctionNode"}constructor(e,t,n,i=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=n,this.storeNode=i}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){let t=this.method,n=this.getNodeType(e),i=this.getInputType(e),s=this.pointerNode,r=this.valueNode,c=[];c.push(`&${s.build(e,i)}`),r!==null&&c.push(r.build(e,i));let a=`${e.getMethod(t,n)}( ${c.join(", ")} )`;if(this.storeNode!==null){let l=this.storeNode.build(e,i);e.addLineFlowCode(`${l} = ${a}`,this)}else e.addLineFlowCode(a,this)}};Oe.ATOMIC_LOAD="atomicLoad";Oe.ATOMIC_STORE="atomicStore";Oe.ATOMIC_ADD="atomicAdd";Oe.ATOMIC_SUB="atomicSub";Oe.ATOMIC_MAX="atomicMax";Oe.ATOMIC_MIN="atomicMin";Oe.ATOMIC_AND="atomicAnd";Oe.ATOMIC_OR="atomicOr";Oe.ATOMIC_XOR="atomicXor";var lN=L(Oe),kn=(o,e,t,n=null)=>{let i=lN(o,e,t,n);return i.append(),i},uN=(o,e=null)=>kn(Oe.ATOMIC_LOAD,o,null,e),hN=(o,e,t=null)=>kn(Oe.ATOMIC_STORE,o,e,t),dN=(o,e,t=null)=>kn(Oe.ATOMIC_ADD,o,e,t),fN=(o,e,t=null)=>kn(Oe.ATOMIC_SUB,o,e,t),pN=(o,e,t=null)=>kn(Oe.ATOMIC_MAX,o,e,t),mN=(o,e,t=null)=>kn(Oe.ATOMIC_MIN,o,e,t),gN=(o,e,t=null)=>kn(Oe.ATOMIC_AND,o,e,t),_N=(o,e,t=null)=>kn(Oe.ATOMIC_OR,o,e,t),xN=(o,e,t=null)=>kn(Oe.ATOMIC_XOR,o,e,t),uu;function Qc(o){uu=uu||new WeakMap;let e=uu.get(o);return e===void 0&&uu.set(o,e={}),e}function bx(o){let e=Qc(o);return e.shadowMatrix||(e.shadowMatrix=X("mat4").setGroup(Z).onRenderUpdate(()=>(o.castShadow!==!0&&o.shadow.updateMatrices(o),o.shadow.matrix)))}function kS(o){let e=Qc(o);if(e.projectionUV===void 0){let t=bx(o).mul(mi);e.projectionUV=t.xyz.div(t.w)}return e.projectionUV}function Mx(o){let e=Qc(o);return e.position||(e.position=X(new M).setGroup(Z).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(o.matrixWorld)))}function HS(o){let e=Qc(o);return e.targetPosition||(e.targetPosition=X(new M).setGroup(Z).onRenderUpdate((t,n)=>n.value.setFromMatrixPosition(o.target.matrixWorld)))}function $h(o){let e=Qc(o);return e.viewPosition||(e.viewPosition=X(new M).setGroup(Z).onRenderUpdate(({camera:t},n)=>{n.value=n.value||new M,n.value.setFromMatrixPosition(o.matrixWorld),n.value.applyMatrix4(t.matrixWorldInverse)}))}var Ax=o=>Ct.transformDirection(Mx(o).sub(HS(o))),yN=o=>o.sort((e,t)=>e.id-t.id),vN=(o,e)=>{for(let t of e)if(t.isAnalyticLightNode&&t.light.id===o)return t;return null},Df=new WeakMap,Fc=class extends Y{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=b().toVar("totalDiffuse"),this.totalSpecularNode=b().toVar("totalSpecular"),this.outgoingLightNode=b().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){let e=[],t=this._lights;for(let n=0;n<t.length;n++)e.push(t[n].id);return wh(e)}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);let t=[];for(let n of this._lightNodes)t.push(n.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){let t=e.getDataFromNode(this);for(let n of t.nodes)n.build(e)}setupLightsNode(e){let t=[],n=this._lightNodes,i=yN(this._lights),s=e.renderer.library;for(let r of i)if(r.isNode)t.push(F(r));else{let c=null;if(n!==null&&(c=vN(r.id,n)),c===null){let a=s.getLightNodeClass(r.constructor);if(a===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${r.constructor.name}`);continue}let l=null;Df.has(r)?l=Df.get(r):(l=F(new a(r)),Df.set(r,l)),t.push(l)}}this._lightNodes=t}setupLights(e,t){for(let n of t)n.build(e)}setup(e){this._lightNodes===null&&this.setupLightsNode(e);let t=e.context,n=t.lightingModel,i=this.outgoingLightNode;if(n){let{_lightNodes:s,totalDiffuseNode:r,totalSpecularNode:c}=this;t.outgoingLight=i;let a=e.addStack(),l=e.getDataFromNode(this);l.nodes=a.nodes,n.start(t,a,e),this.setupLights(e,s),n.indirect(t,a,e);let{backdrop:u,backdropAlpha:h}=t,{directDiffuse:d,directSpecular:f,indirectDiffuse:m,indirectSpecular:g}=t.reflectedLight,_=d.add(m);u!==null&&(h!==null?_=b(h.mix(_,u)):_=b(u),t.material.transparent=!0),r.assign(_),c.assign(f.add(g)),i.assign(r.add(c)),n.finish(t,a,e),i=i.bypass(e.removeStack())}return i}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}},TN=(o=[])=>F(new Fc).setLights(o),ug=class extends Y{static get type(){return"ShadowBaseNode"}constructor(e){super(),this.light=e,this.updateBeforeType=J.RENDER,this.isShadowBaseNode=!0}setupShadowPosition({material:e}){Ex.assign(e.shadowPositionNode||mi)}dispose(){this.updateBeforeType=J.NONE}},Ex=b().toVar("shadowPositionWorld");function SN(o,e={}){return e.toneMapping=o.toneMapping,e.toneMappingExposure=o.toneMappingExposure,e.outputColorSpace=o.outputColorSpace,e.renderTarget=o.getRenderTarget(),e.activeCubeFace=o.getActiveCubeFace(),e.activeMipmapLevel=o.getActiveMipmapLevel(),e.renderObjectFunction=o.getRenderObjectFunction(),e.pixelRatio=o.getPixelRatio(),e.mrt=o.getMRT(),e.clearColor=o.getClearColor(e.clearColor||new q),e.clearAlpha=o.getClearAlpha(),e.autoClear=o.autoClear,e.scissorTest=o.getScissorTest(),e}function bN(o,e){return e=SN(o,e),o.setMRT(null),o.setRenderObjectFunction(null),o.setClearColor(0,1),o.autoClear=!0,e}function MN(o,e){o.toneMapping=e.toneMapping,o.toneMappingExposure=e.toneMappingExposure,o.outputColorSpace=e.outputColorSpace,o.setRenderTarget(e.renderTarget,e.activeCubeFace,e.activeMipmapLevel),o.setRenderObjectFunction(e.renderObjectFunction),o.setPixelRatio(e.pixelRatio),o.setMRT(e.mrt),o.setClearColor(e.clearColor,e.clearAlpha),o.autoClear=e.autoClear,o.setScissorTest(e.scissorTest)}function AN(o,e={}){return e.background=o.background,e.backgroundNode=o.backgroundNode,e.overrideMaterial=o.overrideMaterial,e}function EN(o,e){return e=AN(o,e),o.background=null,o.backgroundNode=null,o.overrideMaterial=null,e}function wN(o,e){o.background=e.background,o.backgroundNode=e.backgroundNode,o.overrideMaterial=e.overrideMaterial}function RN(o,e,t){return t=bN(o,t),t=EN(e,t),t}function CN(o,e,t){MN(o,t),wN(e,t)}var zy=new WeakMap,NN=w(([o,e,t])=>{let n=mi.sub(o).length();return n=n.sub(e).div(t.sub(e)),n=n.saturate(),n}),PN=o=>{let e=o.shadow.camera,t=me("near","float",e).setGroup(Z),n=me("far","float",e).setGroup(Z),i=Q0(o);return NN(i,t,n)},IN=o=>{let e=zy.get(o);if(e===void 0){let t=o.isPointLight?PN(o):null;e=new Re,e.colorNode=W(0,0,0,1),e.depthNode=t,e.isShadowPassMaterial=!0,e.name="ShadowMaterial",e.fog=!1,zy.set(o,e)}return e},WS=w(({depthTexture:o,shadowCoord:e})=>ae(o,e.xy).compare(e.z)),qS=w(({depthTexture:o,shadowCoord:e,shadow:t})=>{let n=(g,_)=>ae(o,g).compare(_),i=me("mapSize","vec2",t).setGroup(Z),s=me("radius","float",t).setGroup(Z),r=U(1).div(i),c=r.x.negate().mul(s),a=r.y.negate().mul(s),l=r.x.mul(s),u=r.y.mul(s),h=c.div(2),d=a.div(2),f=l.div(2),m=u.div(2);return Be(n(e.xy.add(U(c,a)),e.z),n(e.xy.add(U(0,a)),e.z),n(e.xy.add(U(l,a)),e.z),n(e.xy.add(U(h,d)),e.z),n(e.xy.add(U(0,d)),e.z),n(e.xy.add(U(f,d)),e.z),n(e.xy.add(U(c,0)),e.z),n(e.xy.add(U(h,0)),e.z),n(e.xy,e.z),n(e.xy.add(U(f,0)),e.z),n(e.xy.add(U(l,0)),e.z),n(e.xy.add(U(h,m)),e.z),n(e.xy.add(U(0,m)),e.z),n(e.xy.add(U(f,m)),e.z),n(e.xy.add(U(c,u)),e.z),n(e.xy.add(U(0,u)),e.z),n(e.xy.add(U(l,u)),e.z)).mul(1/17)}),XS=w(({depthTexture:o,shadowCoord:e,shadow:t})=>{let n=(u,h)=>ae(o,u).compare(h),i=me("mapSize","vec2",t).setGroup(Z),s=U(1).div(i),r=s.x,c=s.y,a=e.xy,l=vi(a.mul(i).add(.5));return a.subAssign(l.mul(s)),Be(n(a,e.z),n(a.add(U(r,0)),e.z),n(a.add(U(0,c)),e.z),n(a.add(s),e.z),fe(n(a.add(U(r.negate(),0)),e.z),n(a.add(U(r.mul(2),0)),e.z),l.x),fe(n(a.add(U(r.negate(),c)),e.z),n(a.add(U(r.mul(2),c)),e.z),l.x),fe(n(a.add(U(0,c.negate())),e.z),n(a.add(U(0,c.mul(2))),e.z),l.y),fe(n(a.add(U(r,c.negate())),e.z),n(a.add(U(r,c.mul(2))),e.z),l.y),fe(fe(n(a.add(U(r.negate(),c.negate())),e.z),n(a.add(U(r.mul(2),c.negate())),e.z),l.x),fe(n(a.add(U(r.negate(),c.mul(2))),e.z),n(a.add(U(r.mul(2),c.mul(2))),e.z),l.x),l.y)).mul(1/9)}),$S=w(({depthTexture:o,shadowCoord:e})=>{let t=y(1).toVar(),n=ae(o).sample(e.xy).rg,i=Uh(e.z,n.x);return ne(i.notEqual(y(1)),()=>{let s=e.z.sub(n.x),r=Le(0,n.y.mul(n.y)),c=r.div(r.add(s.mul(s)));c=Dn(ce(c,.3).div(.95-.3)),t.assign(Dn(Le(i,c)))}),t}),DN=w(({samples:o,radius:e,size:t,shadowPass:n})=>{let i=y(0).toVar(),s=y(0).toVar(),r=o.lessThanEqual(y(1)).select(y(0),y(2).div(o.sub(1))),c=o.lessThanEqual(y(1)).select(y(0),y(-1));pe({start:v(0),end:v(o),type:"int",condition:"<"},({i:l})=>{let u=c.add(y(l).mul(r)),h=n.sample(Be(Zc.xy,U(0,u).mul(e)).div(t)).x;i.addAssign(h),s.addAssign(h.mul(h))}),i.divAssign(o),s.divAssign(o);let a=zn(s.sub(i.mul(i)));return U(i,a)}),LN=w(({samples:o,radius:e,size:t,shadowPass:n})=>{let i=y(0).toVar(),s=y(0).toVar(),r=o.lessThanEqual(y(1)).select(y(0),y(2).div(o.sub(1))),c=o.lessThanEqual(y(1)).select(y(0),y(-1));pe({start:v(0),end:v(o),type:"int",condition:"<"},({i:l})=>{let u=c.add(y(l).mul(r)),h=n.sample(Be(Zc.xy,U(u,0).mul(e)).div(t));i.addAssign(h.x),s.addAssign(Be(h.y.mul(h.y),h.x.mul(h.x)))}),i.divAssign(o),s.divAssign(o);let a=zn(s.sub(i.mul(i)));return U(i,a)}),FN=[WS,qS,XS,$S],Lf,hu=new Dc,rh=class extends ug{static get type(){return"ShadowNode"}constructor(e,t=null){super(e),this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this._node=null,this.isShadowNode=!0}setupShadowFilter(e,{filterFn:t,depthTexture:n,shadowCoord:i,shadow:s}){let r=i.x.greaterThanEqual(0).and(i.x.lessThanEqual(1)).and(i.y.greaterThanEqual(0)).and(i.y.lessThanEqual(1)).and(i.z.lessThanEqual(1)),c=t({depthTexture:n,shadowCoord:i,shadow:s});return r.select(c,y(1))}setupShadowCoord(e,t){let{shadow:n}=this,{renderer:i}=e,s=me("bias","float",n).setGroup(Z),r=t,c;if(n.camera.isOrthographicCamera||i.logarithmicDepthBuffer!==!0)r=r.xyz.div(r.w),c=r.z,i.coordinateSystem===$t&&(c=c.mul(2).sub(1));else{let a=r.w;r=r.xy.div(a);let l=me("near","float",n.camera).setGroup(Z),u=me("far","float",n.camera).setGroup(Z);c=fx(a.negate(),l,u)}return r=b(r.x,r.y.oneMinus(),c.add(s)),r}getShadowFilterFn(e){return FN[e]}setupShadow(e){let{renderer:t}=e,{light:n,shadow:i}=this,s=t.shadowMap.type,r=new Yt(i.mapSize.width,i.mapSize.height);r.compareFunction=Xa;let c=e.createRenderTarget(i.mapSize.width,i.mapSize.height);if(c.depthTexture=r,i.camera.updateProjectionMatrix(),s===Rr){r.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:Ms,type:bt}),this.vsmShadowMapHorizontal=e.createRenderTarget(i.mapSize.width,i.mapSize.height,{format:Ms,type:bt});let x=ae(r),T=ae(this.vsmShadowMapVertical.texture),A=me("blurSamples","float",i).setGroup(Z),E=me("radius","float",i).setGroup(Z),N=me("mapSize","vec2",i).setGroup(Z),R=this.vsmMaterialVertical||(this.vsmMaterialVertical=new Re);R.fragmentNode=DN({samples:A,radius:E,size:N,shadowPass:x}).context(e.getSharedContext()),R.name="VSMVertical",R=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new Re),R.fragmentNode=LN({samples:A,radius:E,size:N,shadowPass:T}).context(e.getSharedContext()),R.name="VSMHorizontal"}let a=me("intensity","float",i).setGroup(Z),l=me("normalBias","float",i).setGroup(Z),u=bx(n).mul(Ex.add(zh.mul(l))),h=this.setupShadowCoord(e,u),d=i.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(d===null)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");let f=s===Rr?this.vsmShadowMapHorizontal.texture:r,m=this.setupShadowFilter(e,{filterFn:d,shadowTexture:c.texture,depthTexture:f,shadowCoord:h,shadow:i}),g=ae(c.texture,h),_=fe(1,m.rgb.mix(g,1),a.mul(g.a)).toVar();return this.shadowMap=c,this.shadow.map=c,_}setup(e){if(e.renderer.shadowMap.enabled!==!1)return w(()=>{let t=this._node;return this.setupShadowPosition(e),t===null&&(this._node=t=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(t=e.material.receivedShadowNode(t)),t})()}renderShadow(e){let{shadow:t,shadowMap:n,light:i}=this,{renderer:s,scene:r}=e;t.updateMatrices(i),n.setSize(t.mapSize.width,t.mapSize.height),s.render(r,t.camera)}updateShadow(e){let{shadowMap:t,light:n,shadow:i}=this,{renderer:s,scene:r,camera:c}=e,a=s.shadowMap.type,l=t.depthTexture.version;this._depthVersionCached=l,i.camera.layers.mask=c.layers.mask;let u=s.getRenderObjectFunction(),h=s.getMRT(),d=h?h.has("velocity"):!1;Lf=RN(s,r,Lf),r.overrideMaterial=IN(n),s.setRenderObjectFunction((f,m,g,_,x,T,...A)=>{(f.castShadow===!0||f.receiveShadow&&a===Rr)&&(d&&(_v(f).useVelocity=!0),f.onBeforeShadow(s,f,c,i.camera,_,m.overrideMaterial,T),s.renderObject(f,m,g,_,x,T,...A),f.onAfterShadow(s,f,c,i.camera,_,m.overrideMaterial,T))}),s.setRenderTarget(t),this.renderShadow(e),s.setRenderObjectFunction(u),n.isPointLight!==!0&&a===Rr&&this.vsmPass(s),CN(s,r,Lf)}vsmPass(e){let{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),hu.material=this.vsmMaterialVertical,hu.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),hu.material=this.vsmMaterialHorizontal,hu.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,this.vsmShadowMapVertical!==null&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),this.vsmShadowMapHorizontal!==null&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),super.dispose()}updateBefore(e){let{shadow:t}=this;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}},YS=(o,e)=>F(new rh(o,e)),yi=class extends Qi{static get type(){return"AnalyticLightNode"}constructor(e=null){super(),this.light=e,this.color=new q,this.colorNode=e&&e.colorNode||X(this.color).setGroup(Z),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0,this.updateType=J.FRAME}customCacheKey(){return xc(this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadowNode(){return YS(this.light)}setupShadow(e){let{renderer:t}=e;if(t.shadowMap.enabled===!1)return;let n=this.shadowColorNode;if(n===null){let i=this.light.shadow.shadowNode,s;i!==void 0?s=F(i):s=this.setupShadowNode(e),this.shadowNode=s,this.shadowColorNode=n=this.colorNode.mul(s),this.baseColorNode=this.colorNode}this.colorNode=n}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):this.shadowNode!==null&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null)}update(){let{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}},wx=w(o=>{let{lightDistance:e,cutoffDistance:t,decayExponent:n}=o,i=e.pow(n).max(.01).reciprocal();return t.greaterThan(0).select(i.mul(e.div(t).pow4().oneMinus().clamp().pow2()),i)}),UN=new q,wn=w(([o,e])=>{let t=o.toVar(),n=ye(t),i=gn(1,Le(n.x,Le(n.y,n.z)));n.mulAssign(i),t.mulAssign(i.mul(e.mul(2).oneMinus()));let s=U(t.xy).toVar(),c=e.mul(1.5).oneMinus();return ne(n.z.greaterThanEqual(c),()=>{ne(t.z.greaterThan(0),()=>{s.x.assign(ce(4,t.x))})}).ElseIf(n.x.greaterThanEqual(c),()=>{let a=Rc(t.x);s.x.assign(t.z.mul(a).add(a.mul(2)))}).ElseIf(n.y.greaterThanEqual(c),()=>{let a=Rc(t.y);s.x.assign(t.x.add(a.mul(2)).add(2)),s.y.assign(t.z.mul(a).sub(2))}),U(.125,.25).mul(s).add(U(.375,.75)).flipY()}).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),BN=w(({depthTexture:o,bd3D:e,dp:t,texelSize:n})=>ae(o,wn(e,n.y)).compare(t)),ON=w(({depthTexture:o,bd3D:e,dp:t,texelSize:n,shadow:i})=>{let s=me("radius","float",i).setGroup(Z),r=U(-1,1).mul(s).mul(n.y);return ae(o,wn(e.add(r.xyy),n.y)).compare(t).add(ae(o,wn(e.add(r.yyy),n.y)).compare(t)).add(ae(o,wn(e.add(r.xyx),n.y)).compare(t)).add(ae(o,wn(e.add(r.yyx),n.y)).compare(t)).add(ae(o,wn(e,n.y)).compare(t)).add(ae(o,wn(e.add(r.xxy),n.y)).compare(t)).add(ae(o,wn(e.add(r.yxy),n.y)).compare(t)).add(ae(o,wn(e.add(r.xxx),n.y)).compare(t)).add(ae(o,wn(e.add(r.yxx),n.y)).compare(t)).mul(1/9)}),VN=w(({filterFn:o,depthTexture:e,shadowCoord:t,shadow:n})=>{let i=t.xyz.toVar(),s=i.length(),r=X("float").setGroup(Z).onRenderUpdate(()=>n.camera.near),c=X("float").setGroup(Z).onRenderUpdate(()=>n.camera.far),a=me("bias","float",n).setGroup(Z),l=X(n.mapSize).setGroup(Z),u=y(1).toVar();return ne(s.sub(c).lessThanEqual(0).and(s.sub(r).greaterThanEqual(0)),()=>{let h=s.sub(r).div(c.sub(r)).toVar();h.addAssign(a);let d=i.normalize(),f=U(1).div(l.mul(U(4,2)));u.assign(o({depthTexture:e,bd3D:d,dp:h,texelSize:f,shadow:n}))}),u}),ky=new re,Xr=new H,nc=new H,hg=class extends rh{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===Id?BN:ON}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:s,shadow:r}){return VN({filterFn:t,shadowTexture:n,depthTexture:i,shadowCoord:s,shadow:r})}renderShadow(e){let{shadow:t,shadowMap:n,light:i}=this,{renderer:s,scene:r}=e,c=t.getFrameExtents();nc.copy(t.mapSize),nc.multiply(c),n.setSize(nc.width,nc.height),Xr.copy(t.mapSize);let a=s.autoClear,l=s.getClearColor(UN),u=s.getClearAlpha();s.autoClear=!1,s.setClearColor(t.clearColor,t.clearAlpha),s.clear();let h=t.getViewportCount();for(let d=0;d<h;d++){let f=t.getViewport(d),m=Xr.x*f.x,g=nc.y-Xr.y-Xr.y*f.y;ky.set(m,g,Xr.x*f.z,Xr.y*f.w),n.viewport.copy(ky),t.updateMatrices(i,d),s.render(r,t.camera)}s.autoClear=a,s.setClearColor(l,u)}},GN=(o,e)=>F(new hg(o,e)),KS=w(({color:o,lightViewPosition:e,cutoffDistance:t,decayExponent:n},i)=>{let s=i.context.lightingModel,r=e.sub(De),c=r.normalize(),a=r.length(),l=wx({lightDistance:a,cutoffDistance:t,decayExponent:n}),u=o.mul(l),h=i.context.reflectedLight;s.direct({lightDirection:c,lightColor:u,reflectedLight:h},i.stack,i)}),dg=class extends yi{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=X(0).setGroup(Z),this.decayExponentNode=X(2).setGroup(Z)}update(e){let{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return GN(this.light)}setup(e){super.setup(e),KS({color:this.colorNode,lightViewPosition:$h(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}},zN=w(([o=be()])=>{let e=o.mul(2),t=e.x.floor(),n=e.y.floor();return t.add(n).mod(2).sign()}),kN=w(([o=be()],{renderer:e,material:t})=>{let n=y(1).toVar(),i=j_(o.mul(2).sub(1));if(t.alphaToCoverage&&e.samples>1){let s=y(i.fwidth()).toVar();n.assign(Ln(s.oneMinus(),s.add(1),i).oneMinus())}else i.greaterThan(1).discard();return n}),mc=w(([o,e,t])=>{let n=y(t).toVar(),i=y(e).toVar(),s=_i(o).toVar();return it(s,i,n)}).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),oh=w(([o,e])=>{let t=_i(e).toVar(),n=y(o).toVar();return it(t,n.negate(),n)}).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),Ue=w(([o])=>{let e=y(o).toVar();return v(Pn(e))}).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),Se=w(([o,e])=>{let t=y(o).toVar();return e.assign(Ue(t)),t.sub(y(e))}),HN=w(([o,e,t,n,i,s])=>{let r=y(s).toVar(),c=y(i).toVar(),a=y(n).toVar(),l=y(t).toVar(),u=y(e).toVar(),h=y(o).toVar(),d=y(ce(1,c)).toVar();return ce(1,r).mul(h.mul(d).add(u.mul(c))).add(r.mul(l.mul(d).add(a.mul(c))))}).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),WN=w(([o,e,t,n,i,s])=>{let r=y(s).toVar(),c=y(i).toVar(),a=b(n).toVar(),l=b(t).toVar(),u=b(e).toVar(),h=b(o).toVar(),d=y(ce(1,c)).toVar();return ce(1,r).mul(h.mul(d).add(u.mul(c))).add(r.mul(l.mul(d).add(a.mul(c))))}).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]}),ZS=st([HN,WN]),qN=w(([o,e,t,n,i,s,r,c,a,l,u])=>{let h=y(u).toVar(),d=y(l).toVar(),f=y(a).toVar(),m=y(c).toVar(),g=y(r).toVar(),_=y(s).toVar(),x=y(i).toVar(),T=y(n).toVar(),A=y(t).toVar(),E=y(e).toVar(),N=y(o).toVar(),R=y(ce(1,f)).toVar(),P=y(ce(1,d)).toVar();return y(ce(1,h)).toVar().mul(P.mul(N.mul(R).add(E.mul(f))).add(d.mul(A.mul(R).add(T.mul(f))))).add(h.mul(P.mul(x.mul(R).add(_.mul(f))).add(d.mul(g.mul(R).add(m.mul(f))))))}).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),XN=w(([o,e,t,n,i,s,r,c,a,l,u])=>{let h=y(u).toVar(),d=y(l).toVar(),f=y(a).toVar(),m=b(c).toVar(),g=b(r).toVar(),_=b(s).toVar(),x=b(i).toVar(),T=b(n).toVar(),A=b(t).toVar(),E=b(e).toVar(),N=b(o).toVar(),R=y(ce(1,f)).toVar(),P=y(ce(1,d)).toVar();return y(ce(1,h)).toVar().mul(P.mul(N.mul(R).add(E.mul(f))).add(d.mul(A.mul(R).add(T.mul(f))))).add(h.mul(P.mul(x.mul(R).add(_.mul(f))).add(d.mul(g.mul(R).add(m.mul(f))))))}).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),jS=st([qN,XN]),$N=w(([o,e,t])=>{let n=y(t).toVar(),i=y(e).toVar(),s=V(o).toVar(),r=V(s.bitAnd(V(7))).toVar(),c=y(mc(r.lessThan(V(4)),i,n)).toVar(),a=y(ee(2,mc(r.lessThan(V(4)),n,i))).toVar();return oh(c,_i(r.bitAnd(V(1)))).add(oh(a,_i(r.bitAnd(V(2)))))}).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),YN=w(([o,e,t,n])=>{let i=y(n).toVar(),s=y(t).toVar(),r=y(e).toVar(),c=V(o).toVar(),a=V(c.bitAnd(V(15))).toVar(),l=y(mc(a.lessThan(V(8)),r,s)).toVar(),u=y(mc(a.lessThan(V(4)),s,mc(a.equal(V(12)).or(a.equal(V(14))),r,i))).toVar();return oh(l,_i(a.bitAnd(V(1)))).add(oh(u,_i(a.bitAnd(V(2)))))}).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),je=st([$N,YN]),KN=w(([o,e,t])=>{let n=y(t).toVar(),i=y(e).toVar(),s=yo(o).toVar();return b(je(s.x,i,n),je(s.y,i,n),je(s.z,i,n))}).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),ZN=w(([o,e,t,n])=>{let i=y(n).toVar(),s=y(t).toVar(),r=y(e).toVar(),c=yo(o).toVar();return b(je(c.x,r,s,i),je(c.y,r,s,i),je(c.z,r,s,i))}).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),Kt=st([KN,ZN]),jN=w(([o])=>{let e=y(o).toVar();return ee(.6616,e)}).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),QN=w(([o])=>{let e=y(o).toVar();return ee(.982,e)}).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),JN=w(([o])=>{let e=b(o).toVar();return ee(.6616,e)}).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),QS=st([jN,JN]),eP=w(([o])=>{let e=b(o).toVar();return ee(.982,e)}).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]}),JS=st([QN,eP]),Ht=w(([o,e])=>{let t=v(e).toVar(),n=V(o).toVar();return n.shiftLeft(t).bitOr(n.shiftRight(v(32).sub(t)))}).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),eb=w(([o,e,t])=>{o.subAssign(t),o.bitXorAssign(Ht(t,v(4))),t.addAssign(e),e.subAssign(o),e.bitXorAssign(Ht(o,v(6))),o.addAssign(t),t.subAssign(e),t.bitXorAssign(Ht(e,v(8))),e.addAssign(o),o.subAssign(t),o.bitXorAssign(Ht(t,v(16))),t.addAssign(e),e.subAssign(o),e.bitXorAssign(Ht(o,v(19))),o.addAssign(t),t.subAssign(e),t.bitXorAssign(Ht(e,v(4))),e.addAssign(o)}),Jc=w(([o,e,t])=>{let n=V(t).toVar(),i=V(e).toVar(),s=V(o).toVar();return n.bitXorAssign(i),n.subAssign(Ht(i,v(14))),s.bitXorAssign(n),s.subAssign(Ht(n,v(11))),i.bitXorAssign(s),i.subAssign(Ht(s,v(25))),n.bitXorAssign(i),n.subAssign(Ht(i,v(16))),s.bitXorAssign(n),s.subAssign(Ht(n,v(4))),i.bitXorAssign(s),i.subAssign(Ht(s,v(14))),n.bitXorAssign(i),n.subAssign(Ht(i,v(24))),n}).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),ht=w(([o])=>{let e=V(o).toVar();return y(e).div(y(V(v(4294967295))))}).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),In=w(([o])=>{let e=y(o).toVar();return e.mul(e).mul(e).mul(e.mul(e.mul(6).sub(15)).add(10))}).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),tP=w(([o])=>{let e=v(o).toVar(),t=V(V(1)).toVar(),n=V(V(v(3735928559)).add(t.shiftLeft(V(2))).add(V(13))).toVar();return Jc(n.add(V(e)),n,n)}).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),nP=w(([o,e])=>{let t=v(e).toVar(),n=v(o).toVar(),i=V(V(2)).toVar(),s=V().toVar(),r=V().toVar(),c=V().toVar();return s.assign(r.assign(c.assign(V(v(3735928559)).add(i.shiftLeft(V(2))).add(V(13))))),s.addAssign(V(n)),r.addAssign(V(t)),Jc(s,r,c)}).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),iP=w(([o,e,t])=>{let n=v(t).toVar(),i=v(e).toVar(),s=v(o).toVar(),r=V(V(3)).toVar(),c=V().toVar(),a=V().toVar(),l=V().toVar();return c.assign(a.assign(l.assign(V(v(3735928559)).add(r.shiftLeft(V(2))).add(V(13))))),c.addAssign(V(s)),a.addAssign(V(i)),l.addAssign(V(n)),Jc(c,a,l)}).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),sP=w(([o,e,t,n])=>{let i=v(n).toVar(),s=v(t).toVar(),r=v(e).toVar(),c=v(o).toVar(),a=V(V(4)).toVar(),l=V().toVar(),u=V().toVar(),h=V().toVar();return l.assign(u.assign(h.assign(V(v(3735928559)).add(a.shiftLeft(V(2))).add(V(13))))),l.addAssign(V(c)),u.addAssign(V(r)),h.addAssign(V(s)),eb(l,u,h),l.addAssign(V(i)),Jc(l,u,h)}).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),rP=w(([o,e,t,n,i])=>{let s=v(i).toVar(),r=v(n).toVar(),c=v(t).toVar(),a=v(e).toVar(),l=v(o).toVar(),u=V(V(5)).toVar(),h=V().toVar(),d=V().toVar(),f=V().toVar();return h.assign(d.assign(f.assign(V(v(3735928559)).add(u.shiftLeft(V(2))).add(V(13))))),h.addAssign(V(l)),d.addAssign(V(a)),f.addAssign(V(c)),eb(h,d,f),h.addAssign(V(r)),d.addAssign(V(s)),Jc(h,d,f)}).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]}),ge=st([tP,nP,iP,sP,rP]),oP=w(([o,e])=>{let t=v(e).toVar(),n=v(o).toVar(),i=V(ge(n,t)).toVar(),s=yo().toVar();return s.x.assign(i.bitAnd(v(255))),s.y.assign(i.shiftRight(v(8)).bitAnd(v(255))),s.z.assign(i.shiftRight(v(16)).bitAnd(v(255))),s}).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),aP=w(([o,e,t])=>{let n=v(t).toVar(),i=v(e).toVar(),s=v(o).toVar(),r=V(ge(s,i,n)).toVar(),c=yo().toVar();return c.x.assign(r.bitAnd(v(255))),c.y.assign(r.shiftRight(v(8)).bitAnd(v(255))),c.z.assign(r.shiftRight(v(16)).bitAnd(v(255))),c}).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),Zt=st([oP,aP]),cP=w(([o])=>{let e=U(o).toVar(),t=v().toVar(),n=v().toVar(),i=y(Se(e.x,t)).toVar(),s=y(Se(e.y,n)).toVar(),r=y(In(i)).toVar(),c=y(In(s)).toVar(),a=y(ZS(je(ge(t,n),i,s),je(ge(t.add(v(1)),n),i.sub(1),s),je(ge(t,n.add(v(1))),i,s.sub(1)),je(ge(t.add(v(1)),n.add(v(1))),i.sub(1),s.sub(1)),r,c)).toVar();return QS(a)}).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),lP=w(([o])=>{let e=b(o).toVar(),t=v().toVar(),n=v().toVar(),i=v().toVar(),s=y(Se(e.x,t)).toVar(),r=y(Se(e.y,n)).toVar(),c=y(Se(e.z,i)).toVar(),a=y(In(s)).toVar(),l=y(In(r)).toVar(),u=y(In(c)).toVar(),h=y(jS(je(ge(t,n,i),s,r,c),je(ge(t.add(v(1)),n,i),s.sub(1),r,c),je(ge(t,n.add(v(1)),i),s,r.sub(1),c),je(ge(t.add(v(1)),n.add(v(1)),i),s.sub(1),r.sub(1),c),je(ge(t,n,i.add(v(1))),s,r,c.sub(1)),je(ge(t.add(v(1)),n,i.add(v(1))),s.sub(1),r,c.sub(1)),je(ge(t,n.add(v(1)),i.add(v(1))),s,r.sub(1),c.sub(1)),je(ge(t.add(v(1)),n.add(v(1)),i.add(v(1))),s.sub(1),r.sub(1),c.sub(1)),a,l,u)).toVar();return JS(h)}).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]}),Rx=st([cP,lP]),uP=w(([o])=>{let e=U(o).toVar(),t=v().toVar(),n=v().toVar(),i=y(Se(e.x,t)).toVar(),s=y(Se(e.y,n)).toVar(),r=y(In(i)).toVar(),c=y(In(s)).toVar(),a=b(ZS(Kt(Zt(t,n),i,s),Kt(Zt(t.add(v(1)),n),i.sub(1),s),Kt(Zt(t,n.add(v(1))),i,s.sub(1)),Kt(Zt(t.add(v(1)),n.add(v(1))),i.sub(1),s.sub(1)),r,c)).toVar();return QS(a)}).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),hP=w(([o])=>{let e=b(o).toVar(),t=v().toVar(),n=v().toVar(),i=v().toVar(),s=y(Se(e.x,t)).toVar(),r=y(Se(e.y,n)).toVar(),c=y(Se(e.z,i)).toVar(),a=y(In(s)).toVar(),l=y(In(r)).toVar(),u=y(In(c)).toVar(),h=b(jS(Kt(Zt(t,n,i),s,r,c),Kt(Zt(t.add(v(1)),n,i),s.sub(1),r,c),Kt(Zt(t,n.add(v(1)),i),s,r.sub(1),c),Kt(Zt(t.add(v(1)),n.add(v(1)),i),s.sub(1),r.sub(1),c),Kt(Zt(t,n,i.add(v(1))),s,r,c.sub(1)),Kt(Zt(t.add(v(1)),n,i.add(v(1))),s.sub(1),r,c.sub(1)),Kt(Zt(t,n.add(v(1)),i.add(v(1))),s,r.sub(1),c.sub(1)),Kt(Zt(t.add(v(1)),n.add(v(1)),i.add(v(1))),s.sub(1),r.sub(1),c.sub(1)),a,l,u)).toVar();return JS(h)}).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Cx=st([uP,hP]),dP=w(([o])=>{let e=y(o).toVar(),t=v(Ue(e)).toVar();return ht(ge(t))}).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),fP=w(([o])=>{let e=U(o).toVar(),t=v(Ue(e.x)).toVar(),n=v(Ue(e.y)).toVar();return ht(ge(t,n))}).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),pP=w(([o])=>{let e=b(o).toVar(),t=v(Ue(e.x)).toVar(),n=v(Ue(e.y)).toVar(),i=v(Ue(e.z)).toVar();return ht(ge(t,n,i))}).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),mP=w(([o])=>{let e=W(o).toVar(),t=v(Ue(e.x)).toVar(),n=v(Ue(e.y)).toVar(),i=v(Ue(e.z)).toVar(),s=v(Ue(e.w)).toVar();return ht(ge(t,n,i,s))}).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]}),gP=st([dP,fP,pP,mP]),_P=w(([o])=>{let e=y(o).toVar(),t=v(Ue(e)).toVar();return b(ht(ge(t,v(0))),ht(ge(t,v(1))),ht(ge(t,v(2))))}).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),xP=w(([o])=>{let e=U(o).toVar(),t=v(Ue(e.x)).toVar(),n=v(Ue(e.y)).toVar();return b(ht(ge(t,n,v(0))),ht(ge(t,n,v(1))),ht(ge(t,n,v(2))))}).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),yP=w(([o])=>{let e=b(o).toVar(),t=v(Ue(e.x)).toVar(),n=v(Ue(e.y)).toVar(),i=v(Ue(e.z)).toVar();return b(ht(ge(t,n,i,v(0))),ht(ge(t,n,i,v(1))),ht(ge(t,n,i,v(2))))}).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),vP=w(([o])=>{let e=W(o).toVar(),t=v(Ue(e.x)).toVar(),n=v(Ue(e.y)).toVar(),i=v(Ue(e.z)).toVar(),s=v(Ue(e.w)).toVar();return b(ht(ge(t,n,i,s,v(0))),ht(ge(t,n,i,s,v(1))),ht(ge(t,n,i,s,v(2))))}).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]}),tb=st([_P,xP,yP,vP]),ah=w(([o,e,t,n])=>{let i=y(n).toVar(),s=y(t).toVar(),r=v(e).toVar(),c=b(o).toVar(),a=y(0).toVar(),l=y(1).toVar();return pe(r,()=>{a.addAssign(l.mul(Rx(c))),l.mulAssign(i),c.mulAssign(s)}),a}).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),nb=w(([o,e,t,n])=>{let i=y(n).toVar(),s=y(t).toVar(),r=v(e).toVar(),c=b(o).toVar(),a=b(0).toVar(),l=y(1).toVar();return pe(r,()=>{a.addAssign(l.mul(Cx(c))),l.mulAssign(i),c.mulAssign(s)}),a}).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),TP=w(([o,e,t,n])=>{let i=y(n).toVar(),s=y(t).toVar(),r=v(e).toVar(),c=b(o).toVar();return U(ah(c,r,s,i),ah(c.add(b(v(19),v(193),v(17))),r,s,i))}).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),SP=w(([o,e,t,n])=>{let i=y(n).toVar(),s=y(t).toVar(),r=v(e).toVar(),c=b(o).toVar(),a=b(nb(c,r,s,i)).toVar(),l=y(ah(c.add(b(v(19),v(193),v(17))),r,s,i)).toVar();return W(a,l)}).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),bP=w(([o,e,t,n,i,s,r])=>{let c=v(r).toVar(),a=y(s).toVar(),l=v(i).toVar(),u=v(n).toVar(),h=v(t).toVar(),d=v(e).toVar(),f=U(o).toVar(),m=b(tb(U(d.add(u),h.add(l)))).toVar(),g=U(m.x,m.y).toVar();g.subAssign(.5),g.mulAssign(a),g.addAssign(.5);let _=U(U(y(d),y(h)).add(g)).toVar(),x=U(_.sub(f)).toVar();return ne(c.equal(v(2)),()=>ye(x.x).add(ye(x.y))),ne(c.equal(v(3)),()=>Le(ye(x.x),ye(x.y))),Ji(x,x)}).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),MP=w(([o,e,t,n,i,s,r,c,a])=>{let l=v(a).toVar(),u=y(c).toVar(),h=v(r).toVar(),d=v(s).toVar(),f=v(i).toVar(),m=v(n).toVar(),g=v(t).toVar(),_=v(e).toVar(),x=b(o).toVar(),T=b(tb(b(_.add(f),g.add(d),m.add(h)))).toVar();T.subAssign(.5),T.mulAssign(u),T.addAssign(.5);let A=b(b(y(_),y(g),y(m)).add(T)).toVar(),E=b(A.sub(x)).toVar();return ne(l.equal(v(2)),()=>ye(E.x).add(ye(E.y)).add(ye(E.z))),ne(l.equal(v(3)),()=>Le(Le(ye(E.x),ye(E.y)),ye(E.z))),Ji(E,E)}).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),vo=st([bP,MP]),AP=w(([o,e,t])=>{let n=v(t).toVar(),i=y(e).toVar(),s=U(o).toVar(),r=v().toVar(),c=v().toVar(),a=U(Se(s.x,r),Se(s.y,c)).toVar(),l=y(1e6).toVar();return pe({start:-1,end:v(1),name:"x",condition:"<="},({x:u})=>{pe({start:-1,end:v(1),name:"y",condition:"<="},({y:h})=>{let d=y(vo(a,u,h,r,c,i,n)).toVar();l.assign(Et(l,d))})}),ne(n.equal(v(0)),()=>{l.assign(zn(l))}),l}).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),EP=w(([o,e,t])=>{let n=v(t).toVar(),i=y(e).toVar(),s=U(o).toVar(),r=v().toVar(),c=v().toVar(),a=U(Se(s.x,r),Se(s.y,c)).toVar(),l=U(1e6,1e6).toVar();return pe({start:-1,end:v(1),name:"x",condition:"<="},({x:u})=>{pe({start:-1,end:v(1),name:"y",condition:"<="},({y:h})=>{let d=y(vo(a,u,h,r,c,i,n)).toVar();ne(d.lessThan(l.x),()=>{l.y.assign(l.x),l.x.assign(d)}).ElseIf(d.lessThan(l.y),()=>{l.y.assign(d)})})}),ne(n.equal(v(0)),()=>{l.assign(zn(l))}),l}).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),wP=w(([o,e,t])=>{let n=v(t).toVar(),i=y(e).toVar(),s=U(o).toVar(),r=v().toVar(),c=v().toVar(),a=U(Se(s.x,r),Se(s.y,c)).toVar(),l=b(1e6,1e6,1e6).toVar();return pe({start:-1,end:v(1),name:"x",condition:"<="},({x:u})=>{pe({start:-1,end:v(1),name:"y",condition:"<="},({y:h})=>{let d=y(vo(a,u,h,r,c,i,n)).toVar();ne(d.lessThan(l.x),()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(d)}).ElseIf(d.lessThan(l.y),()=>{l.z.assign(l.y),l.y.assign(d)}).ElseIf(d.lessThan(l.z),()=>{l.z.assign(d)})})}),ne(n.equal(v(0)),()=>{l.assign(zn(l))}),l}).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),RP=w(([o,e,t])=>{let n=v(t).toVar(),i=y(e).toVar(),s=b(o).toVar(),r=v().toVar(),c=v().toVar(),a=v().toVar(),l=b(Se(s.x,r),Se(s.y,c),Se(s.z,a)).toVar(),u=y(1e6).toVar();return pe({start:-1,end:v(1),name:"x",condition:"<="},({x:h})=>{pe({start:-1,end:v(1),name:"y",condition:"<="},({y:d})=>{pe({start:-1,end:v(1),name:"z",condition:"<="},({z:f})=>{let m=y(vo(l,h,d,f,r,c,a,i,n)).toVar();u.assign(Et(u,m))})})}),ne(n.equal(v(0)),()=>{u.assign(zn(u))}),u}).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),CP=st([AP,RP]),NP=w(([o,e,t])=>{let n=v(t).toVar(),i=y(e).toVar(),s=b(o).toVar(),r=v().toVar(),c=v().toVar(),a=v().toVar(),l=b(Se(s.x,r),Se(s.y,c),Se(s.z,a)).toVar(),u=U(1e6,1e6).toVar();return pe({start:-1,end:v(1),name:"x",condition:"<="},({x:h})=>{pe({start:-1,end:v(1),name:"y",condition:"<="},({y:d})=>{pe({start:-1,end:v(1),name:"z",condition:"<="},({z:f})=>{let m=y(vo(l,h,d,f,r,c,a,i,n)).toVar();ne(m.lessThan(u.x),()=>{u.y.assign(u.x),u.x.assign(m)}).ElseIf(m.lessThan(u.y),()=>{u.y.assign(m)})})})}),ne(n.equal(v(0)),()=>{u.assign(zn(u))}),u}).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),PP=st([EP,NP]),IP=w(([o,e,t])=>{let n=v(t).toVar(),i=y(e).toVar(),s=b(o).toVar(),r=v().toVar(),c=v().toVar(),a=v().toVar(),l=b(Se(s.x,r),Se(s.y,c),Se(s.z,a)).toVar(),u=b(1e6,1e6,1e6).toVar();return pe({start:-1,end:v(1),name:"x",condition:"<="},({x:h})=>{pe({start:-1,end:v(1),name:"y",condition:"<="},({y:d})=>{pe({start:-1,end:v(1),name:"z",condition:"<="},({z:f})=>{let m=y(vo(l,h,d,f,r,c,a,i,n)).toVar();ne(m.lessThan(u.x),()=>{u.z.assign(u.y),u.y.assign(u.x),u.x.assign(m)}).ElseIf(m.lessThan(u.y),()=>{u.z.assign(u.y),u.y.assign(m)}).ElseIf(m.lessThan(u.z),()=>{u.z.assign(m)})})})}),ne(n.equal(v(0)),()=>{u.assign(zn(u))}),u}).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),DP=st([wP,IP]),LP=w(([o])=>{let e=o.y,t=o.z,n=b().toVar();return ne(e.lessThan(1e-4),()=>{n.assign(b(t,t,t))}).Else(()=>{let i=o.x;i=i.sub(Pn(i)).mul(6).toVar();let s=v(Y_(i)),r=i.sub(y(s)),c=t.mul(e.oneMinus()),a=t.mul(e.mul(r).oneMinus()),l=t.mul(e.mul(r.oneMinus()).oneMinus());ne(s.equal(v(0)),()=>{n.assign(b(t,l,c))}).ElseIf(s.equal(v(1)),()=>{n.assign(b(a,t,c))}).ElseIf(s.equal(v(2)),()=>{n.assign(b(c,t,l))}).ElseIf(s.equal(v(3)),()=>{n.assign(b(c,a,t))}).ElseIf(s.equal(v(4)),()=>{n.assign(b(l,c,t))}).Else(()=>{n.assign(b(t,c,a))})}),n}).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),FP=w(([o])=>{let e=b(o).toVar(),t=y(e.x).toVar(),n=y(e.y).toVar(),i=y(e.z).toVar(),s=y(Et(t,Et(n,i))).toVar(),r=y(Le(t,Le(n,i))).toVar(),c=y(r.sub(s)).toVar(),a=y().toVar(),l=y().toVar(),u=y().toVar();return u.assign(r),ne(r.greaterThan(0),()=>{l.assign(c.div(r))}).Else(()=>{l.assign(0)}),ne(l.lessThanEqual(0),()=>{a.assign(0)}).Else(()=>{ne(t.greaterThanEqual(r),()=>{a.assign(n.sub(i).div(c))}).ElseIf(n.greaterThanEqual(r),()=>{a.assign(Be(2,i.sub(t).div(c)))}).Else(()=>{a.assign(Be(4,t.sub(n).div(c)))}),a.mulAssign(1/6),ne(a.lessThan(0),()=>{a.addAssign(1)})}),b(a,l,u)}).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),UP=w(([o])=>{let e=b(o).toVar(),t=I_(z_(e,b(.04045))).toVar(),n=b(e.div(12.92)).toVar(),i=b(mn(Le(e.add(b(.055)),b(0)).div(1.055),b(2.4))).toVar();return fe(n,i,t)}).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),ib=(o,e)=>{o=y(o),e=y(e);let t=U(e.dFdx(),e.dFdy()).length().mul(.7071067811865476);return Ln(o.sub(t),o.add(t),e)},sb=(o,e,t,n)=>fe(o,e,t[n].clamp()),BP=(o,e,t=be())=>sb(o,e,t,"x"),OP=(o,e,t=be())=>sb(o,e,t,"y"),rb=(o,e,t,n,i)=>fe(o,e,ib(t,n[i])),VP=(o,e,t,n=be())=>rb(o,e,t,n,"x"),GP=(o,e,t,n=be())=>rb(o,e,t,n,"y"),zP=(o=1,e=0,t=be())=>t.mul(o).add(e),kP=(o,e=1)=>(o=y(o),o.abs().pow(e).mul(o.sign())),HP=(o,e=1,t=.5)=>y(o).sub(t).mul(e).add(t),WP=(o=be(),e=1,t=0)=>Rx(o.convert("vec2|vec3")).mul(e).add(t),qP=(o=be(),e=1,t=0)=>Cx(o.convert("vec2|vec3")).mul(e).add(t),XP=(o=be(),e=1,t=0)=>(o=o.convert("vec2|vec3"),W(Cx(o),Rx(o.add(U(19,73)))).mul(e).add(t)),$P=(o=be(),e=1)=>CP(o.convert("vec2|vec3"),e,v(1)),YP=(o=be(),e=1)=>PP(o.convert("vec2|vec3"),e,v(1)),KP=(o=be(),e=1)=>DP(o.convert("vec2|vec3"),e,v(1)),ZP=(o=be())=>gP(o.convert("vec2|vec3")),jP=(o=be(),e=3,t=2,n=.5,i=1)=>ah(o,v(e),t,n).mul(i),QP=(o=be(),e=3,t=2,n=.5,i=1)=>TP(o,v(e),t,n).mul(i),JP=(o=be(),e=3,t=2,n=.5,i=1)=>nb(o,v(e),t,n).mul(i),eI=(o=be(),e=3,t=2,n=.5,i=1)=>SP(o,v(e),t,n).mul(i),tI=w(([o,e,t])=>{let n=xi(o).toVar("nDir"),i=ce(y(.5).mul(e.sub(t)),mi).div(n).toVar("rbmax"),s=ce(y(-.5).mul(e.sub(t)),mi).div(n).toVar("rbmin"),r=b().toVar("rbminmax");r.x=n.x.greaterThan(y(0)).select(i.x,s.x),r.y=n.y.greaterThan(y(0)).select(i.y,s.y),r.z=n.z.greaterThan(y(0)).select(i.z,s.z);let c=Et(Et(r.x,r.y),r.z).toVar("correction");return mi.add(n.mul(c)).toVar("boxIntersection").sub(t)}),ob=w(([o,e])=>{let t=o.x,n=o.y,i=o.z,s=e.element(0).mul(.886227);return s=s.add(e.element(1).mul(2*.511664).mul(n)),s=s.add(e.element(2).mul(2*.511664).mul(i)),s=s.add(e.element(3).mul(2*.511664).mul(t)),s=s.add(e.element(4).mul(2*.429043).mul(t).mul(n)),s=s.add(e.element(5).mul(2*.429043).mul(n).mul(i)),s=s.add(e.element(6).mul(i.mul(i).mul(.743125).sub(.247708))),s=s.add(e.element(7).mul(2*.429043).mul(t).mul(i)),s=s.add(e.element(8).mul(.429043).mul(ee(t,t).sub(ee(n,n)))),s}),p=Object.freeze({__proto__:null,BRDF_GGX:em,BRDF_Lambert:zs,BasicShadowFilter:WS,Break:jT,Const:I0,Continue:gR,DFGApprox:_x,D_GGX:lS,Discard:Y0,EPSILON:i0,F_Schlick:mo,Fn:w,INFINITY:Cw,If:ne,Loop:pe,NodeAccess:ut,NodeShaderStage:Jf,NodeType:dw,NodeUpdateType:J,PCFShadowFilter:qS,PCFSoftShadowFilter:XS,PI:Lu,PI2:Nw,Return:Bw,Schlick_to_F0:hS,ScriptableNodeResources:Mu,ShaderNode:cc,TBNViewMatrix:Fs,VSMShadowFilter:$S,V_GGX_SmithCorrelated:cS,Var:P0,abs:ye,acesFilmicToneMapping:BS,acos:l0,add:Be,addMethodChaining:D,addNodeElement:Ow,agxToneMapping:OS,all:k_,alphaT:Pu,and:Xv,anisotropy:qi,anisotropyB:Os,anisotropyT:lc,any:s0,append:Av,array:Fv,arrayBuffer:Ew,asin:c0,assign:Vv,atan:q_,atan2:R0,atomicAdd:dN,atomicAnd:gN,atomicFunc:kn,atomicLoad:uN,atomicMax:pN,atomicMin:mN,atomicOr:_N,atomicStore:hN,atomicSub:fN,atomicXor:xN,attenuationColor:O_,attenuationDistance:B_,attribute:Fn,attributeArray:x1,backgroundBlurriness:ES,backgroundIntensity:Zm,backgroundRotation:wS,batch:KT,billboarding:r1,bitAnd:Zv,bitNot:jv,bitOr:Qv,bitXor:Jv,bitangentGeometry:nR,bitangentLocal:iR,bitangentView:uT,bitangentWorld:sR,bitcast:Pw,blendBurn:NS,blendColor:A1,blendDodge:PS,blendOverlay:DS,blendScreen:IS,blur:_S,bool:_i,buffer:Hc,bufferAttribute:kc,bumpMap:pT,burn:E1,bvec2:Rv,bvec3:I_,bvec4:Iv,bypass:q0,cache:hc,call:Gv,cameraFar:$i,cameraIndex:ix,cameraNear:Xi,cameraNormalMatrix:Hw,cameraPosition:j0,cameraProjectionMatrix:Hs,cameraProjectionMatrixInverse:zw,cameraViewMatrix:Ct,cameraWorldMatrix:kw,cbrt:b0,cdl:L1,ceil:Fh,checker:zN,cineonToneMapping:US,clamp:Dn,clearcoat:Nu,clearcoatRoughness:Ac,code:Xh,color:Ev,colorSpaceToWorking:nx,colorToDirection:UR,compute:W0,cond:C0,context:Oh,convert:Lv,convertColorSpace:Lw,convertToTexture:f1,cos:hi,cross:Bh,cubeTexture:uo,dFdx:X_,dFdy:$_,dashSize:vu,defaultBuildStages:ep,defaultShaderStages:vv,defined:Tc,degrees:o0,deltaTime:bS,densityFog:Q1,densityFogFactor:Tx,depth:px,depthPass:V1,difference:y0,diffuseColor:de,directPointLight:KS,directionToColor:sS,dispersion:V_,distance:x0,div:gn,dodge:w1,dot:Ji,drawIndex:$T,dynamicBufferAttribute:H0,element:Dv,emissive:lp,equal:zv,equals:g0,equirectUV:mx,exp:H_,exp2:lo,expression:ji,faceDirection:qc,faceForward:J_,faceforward:Iw,float:y,floor:Pn,fog:Lc,fract:vi,frameGroup:Bv,frameId:KC,frontFacing:tT,fwidth:p0,gain:HC,gapSize:up,getConstNodeType:Mv,getCurrentStack:P_,getDirection:mS,getDistanceAttenuation:wx,getGeometryRoughness:aS,getNormalFromDepth:m1,getParallaxCorrectNormal:tI,getRoughness:gx,getScreenPosition:p1,getShIrradianceAt:ob,getTextureIndex:TS,getViewPosition:Jr,globalId:nN,glsl:$1,glslFn:Y1,grayscale:N1,greaterThan:z_,greaterThanEqual:qv,hash:kC,highpModelNormalViewMatrix:eR,highpModelViewMatrix:Jw,hue:D1,instance:pR,instanceIndex:Kc,instancedArray:y1,instancedBufferAttribute:Bu,instancedDynamicBufferAttribute:xp,instancedMesh:YT,int:v,inverseSqrt:W_,inversesqrt:Dw,invocationLocalIndex:fR,invocationSubgroupIndex:dR,ior:uc,iridescence:Dh,iridescenceIOR:L_,iridescenceThickness:F_,ivec2:$e,ivec3:Cv,ivec4:Nv,js:q1,label:N0,length:pi,lengthSq:j_,lessThan:Hv,lessThanEqual:Wv,lightPosition:Mx,lightProjectionUV:kS,lightShadowMatrix:bx,lightTargetDirection:Ax,lightTargetPosition:HS,lightViewPosition:$h,lightingContext:JT,lights:TN,linearDepth:Wu,linearToneMapping:LS,localId:iN,log:Lh,log2:Nn,logarithmicDepthToViewZ:AR,loop:_R,luminance:yx,mat2:Nh,mat3:dt,mat4:Bs,matcapUV:xS,materialAO:qT,materialAlphaTest:mT,materialAnisotropy:NT,materialAnisotropyVector:Qr,materialAttenuationColor:OT,materialAttenuationDistance:BT,materialClearcoat:MT,materialClearcoatNormal:ET,materialClearcoatRoughness:AT,materialColor:gT,materialDispersion:WT,materialEmissive:xT,materialIOR:UT,materialIridescence:PT,materialIridescenceIOR:IT,materialIridescenceThickness:DT,materialLightMap:cx,materialLineDashOffset:kT,materialLineDashSize:GT,materialLineGapSize:zT,materialLineScale:VT,materialLineWidth:uR,materialMetalness:ST,materialNormal:bT,materialOpacity:ax,materialPointSize:HT,materialReference:fi,materialReflectivity:Tu,materialRefractionRatio:sT,materialRotation:wT,materialRoughness:TT,materialSheen:RT,materialSheenRoughness:CT,materialShininess:_T,materialSpecular:yT,materialSpecularColor:vT,materialSpecularIntensity:Lp,materialSpecularStrength:dc,materialThickness:FT,materialTransmission:LT,max:Le,maxMipLevel:Z0,mediumpModelViewMatrix:eT,metalness:Mc,min:Et,mix:fe,mixElement:E0,mod:K_,modInt:G_,modelDirection:Yw,modelNormalMatrix:J0,modelPosition:Kw,modelScale:Zw,modelViewMatrix:Ws,modelViewPosition:jw,modelViewProjection:lx,modelWorldMatrix:Qt,modelWorldMatrixInverse:Qw,morphReference:QT,mrt:SS,mul:ee,mx_aastep:ib,mx_cell_noise_float:ZP,mx_contrast:HP,mx_fractal_noise_float:jP,mx_fractal_noise_vec2:QP,mx_fractal_noise_vec3:JP,mx_fractal_noise_vec4:eI,mx_hsvtorgb:LP,mx_noise_float:WP,mx_noise_vec3:qP,mx_noise_vec4:XP,mx_ramplr:BP,mx_ramptb:OP,mx_rgbtohsv:FP,mx_safepower:kP,mx_splitlr:VP,mx_splittb:GP,mx_srgb_texture_to_lin_rec709:UP,mx_transform_uv:zP,mx_worley_noise_float:$P,mx_worley_noise_vec2:YP,mx_worley_noise_vec3:KP,negate:u0,neutralToneMapping:VS,nodeArray:Us,nodeImmutable:O,nodeObject:F,nodeObjects:Gc,nodeProxy:L,normalFlat:nT,normalGeometry:Vh,normalLocal:wt,normalMap:Ip,normalView:tn,normalWorld:Gh,normalize:xi,not:Yv,notEqual:kv,numWorkgroups:eN,objectDirection:Ww,objectGroup:D_,objectPosition:Q0,objectScale:Xw,objectViewPosition:$w,objectWorldMatrix:qw,oneMinus:h0,or:$v,orthographicDepthToViewZ:MR,oscSawtooth:n1,oscSine:JC,oscSquare:e1,oscTriangle:t1,output:wc,outputStruct:zC,overlay:C1,overloadingFn:st,parabola:Um,parallaxDirection:dT,parallaxUV:oR,parameter:OC,pass:B1,passTexture:O1,pcurve:WC,perspectiveDepthToViewZ:dx,pmremTexture:xx,pointUV:T1,pointWidth:Rw,positionGeometry:Wc,positionLocal:Ee,positionPrevious:zu,positionView:De,positionViewDirection:Te,positionWorld:mi,positionWorldDirection:sx,posterize:F1,pow:mn,pow2:Z_,pow3:v0,pow4:T0,property:Ov,radians:r0,rand:A0,range:J1,rangeFog:j1,rangeFogFactor:vx,reciprocal:f0,reference:me,referenceBuffer:Cp,reflect:_0,reflectVector:aT,reflectView:rT,reflector:u1,refract:Q_,refractVector:cT,refractView:oT,reinhardToneMapping:FS,remainder:n0,remap:X0,remapClamp:$0,renderGroup:Z,renderOutput:K0,rendererReference:G0,rotate:Wh,rotateUV:i1,roughness:Rn,round:d0,rtt:AS,sRGBTransferEOTF:F0,sRGBTransferOETF:U0,sampler:Vw,saturate:M0,saturation:P1,screen:R1,screenCoordinate:Zc,screenSize:Nc,screenUV:Un,scriptable:Z1,scriptableValue:bu,select:it,setCurrentStack:Sc,shaderStages:tp,shadow:YS,shadowPositionWorld:Ex,shapeCircle:kN,sharedUniformGroup:Ph,sheen:Ls,sheenRoughness:Ih,shiftLeft:e0,shiftRight:t0,shininess:Iu,sign:Rc,sin:Wt,sinc:qC,skinning:mR,skinningReference:ZT,smoothstep:Ln,smoothstepElement:w0,specularColor:Mt,specularF90:Ec,spherizeUV:s1,split:ww,spritesheetUV:a1,sqrt:zn,stack:Su,step:Uh,storage:qh,storageBarrier:oN,storageObject:_1,storageTexture:RS,string:Aw,struct:GC,sub:ce,subgroupIndex:hR,subgroupSize:sN,tan:a0,tangentGeometry:kh,tangentLocal:Xc,tangentView:$c,tangentWorld:lT,temp:D0,texture:ae,texture3D:wC,textureBarrier:aN,textureBicubic:pS,textureCubeUV:gS,textureLoad:Pe,textureSize:Zi,textureStore:S1,thickness:U_,time:qs,timerDelta:QC,timerGlobal:jC,timerLocal:ZC,toOutputColorSpace:B0,toWorkingColorSpace:O0,toneMapping:z0,toneMappingExposure:k0,toonOutlinePass:G1,transformDirection:S0,transformNormal:iT,transformNormalToView:rx,transformedBentNormalView:fT,transformedBitangentView:hT,transformedBitangentWorld:rR,transformedClearcoatNormalView:to,transformedNormalView:Ie,transformedNormalWorld:zh,transformedTangentView:ox,transformedTangentWorld:tR,transmission:Du,transpose:m0,triNoise3D:$C,triplanarTexture:c1,triplanarTextures:MS,trunc:Y_,tslFn:Mw,uint:V,uniform:X,uniformArray:pn,uniformGroup:Uv,uniforms:Gw,userData:b1,uv:be,uvec2:wv,uvec3:yo,uvec4:Pv,varying:ft,varyingProperty:bc,vec2:U,vec3:b,vec4:W,vectorComponents:ks,velocity:M1,vertexColor:v1,vertexIndex:XT,vertexStage:L0,vibrance:I1,viewZToLogarithmicDepth:fx,viewZToOrthographicDepth:ao,viewZToPerspectiveDepth:nS,viewport:oo,viewportBottomLeft:SR,viewportCoordinate:tS,viewportDepthTexture:hx,viewportLinearDepth:ER,viewportMipTexture:ux,viewportResolution:vR,viewportSafeUV:o1,viewportSharedTexture:FR,viewportSize:eS,viewportTexture:bR,viewportTopLeft:TR,viewportUV:yR,wgsl:X1,wgslFn:K1,workgroupArray:cN,workgroupBarrier:rN,workgroupId:tN,workingToColorSpace:V0,xor:Kv}),fn=new Ic,fg=class extends On{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,n){let i=this.renderer,s=this.nodes.getBackgroundNode(e)||e.background,r=!1;if(s===null)i._clearColor.getRGB(fn,ln),fn.a=i._clearColor.a;else if(s.isColor===!0)s.getRGB(fn,ln),fn.a=1,r=!0;else if(s.isNode===!0){let a=this.get(e),l=s;fn.copy(i._clearColor);let u=a.backgroundMesh;if(u===void 0){let d=Oh(W(l).mul(Zm),{getUV:()=>wS.mul(Gh),getTextureLevel:()=>ES}),f=lx;f=f.setZ(f.w);let m=new Re;m.name="Background.material",m.side=St,m.depthTest=!1,m.depthWrite=!1,m.fog=!1,m.lights=!1,m.vertexNode=f,m.colorNode=d,a.backgroundMeshNode=d,a.backgroundMesh=u=new Vt(new Yo(1,32,32),m),u.frustumCulled=!1,u.name="Background.mesh",u.onBeforeRender=function(g,_,x){this.matrixWorld.copyPosition(x.matrixWorld)}}let h=l.getCacheKey();a.backgroundCacheKey!==h&&(a.backgroundMeshNode.node=W(l).mul(Zm),a.backgroundMeshNode.needsUpdate=!0,u.material.needsUpdate=!0,a.backgroundCacheKey=h),t.unshift(u,u.geometry,u.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",s);let c=i.xr.getEnvironmentBlendMode();if(c==="additive"?fn.set(0,0,0,1):c==="alpha-blend"&&fn.set(0,0,0,0),i.autoClear===!0||r===!0){let a=n.clearColorValue;a.r=fn.r,a.g=fn.g,a.b=fn.b,a.a=fn.a,(i.backend.isWebGLBackend===!0||i.alpha===!0)&&(a.r*=a.a,a.g*=a.a,a.b*=a.a),n.depthClearValue=i._clearDepth,n.stencilClearValue=i._clearStencil,n.clearColor=i.autoClearColor===!0,n.clearDepth=i.autoClearDepth===!0,n.clearStencil=i.autoClearStencil===!0}else n.clearColor=!1,n.clearDepth=!1,n.clearStencil=!1}},nI=0,Uc=class{constructor(e="",t=[],n=0,i=[]){this.name=e,this.bindings=t,this.index=n,this.bindingsReference=i,this.id=nI++}},pg=class{constructor(e,t,n,i,s,r,c,a,l,u=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=n,this.transforms=u,this.nodeAttributes=i,this.bindings=s,this.updateNodes=r,this.updateBeforeNodes=c,this.updateAfterNodes=a,this.observer=l,this.usedTimes=0}createBindings(){let e=[];for(let t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){let i=new Uc(t.name,[],t.index,t);e.push(i);for(let s of t.bindings)i.bindings.push(s.clone())}else e.push(t);return e}},ch=class{constructor(e,t,n=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=n}},mg=class{constructor(e,t,n){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=n.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}},lh=class{constructor(e,t,n=!1,i=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=n,this.count=i}},gg=class extends lh{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}},_g=class{constructor(e,t,n=""){this.name=e,this.type=t,this.code=n,Object.defineProperty(this,"isNodeCode",{value:!0})}},iI=0,gc=class{constructor(e=null){this.id=iI++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}},xg=class{constructor(e,t){this.name=e,this.members=t,this.output=!1}},Gn=class{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}},yg=class extends Gn{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}},vg=class extends Gn{constructor(e,t=new H){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}},Tg=class extends Gn{constructor(e,t=new M){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}},Sg=class extends Gn{constructor(e,t=new re){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}},bg=class extends Gn{constructor(e,t=new q){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}},Mg=class extends Gn{constructor(e,t=new Ar){super(e,t),this.isMatrix2Uniform=!0,this.boundary=16,this.itemSize=4}},Ag=class extends Gn{constructor(e,t=new Q){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}},Eg=class extends Gn{constructor(e,t=new ue){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}},wg=class extends yg{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}},Rg=class extends vg{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}},Cg=class extends Tg{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}},Ng=class extends Sg{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}},Pg=class extends bg{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}},Ig=class extends Mg{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}},Dg=class extends Ag{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}},Lg=class extends Eg{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}},no=4,Hy=[.125,.215,.35,.446,.526,.582],Is=20,Ff=new gs(-1,1,1,-1,0,1),sI=new qe(90,1),Wy=new q,Uf=null,Bf=0,Of=0,Ps=(1+Math.sqrt(5))/2,$r=1/Ps,qy=[new M(-Ps,$r,0),new M(Ps,$r,0),new M(-$r,0,Ps),new M($r,0,Ps),new M(0,Ps,-$r),new M(0,Ps,$r),new M(-1,1,-1),new M(1,1,-1),new M(-1,1,1),new M(1,1,1)],ab=new WeakMap,rI=[3,1,5,0,4,2],Vf=mS(be(),Fn("faceIndex")).normalize(),Nx=b(Vf.x,Vf.y,Vf.z),Fg=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,n=.1,i=100,s=null){if(this._setSize(256),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");let c=s||this._allocateTargets();return this.fromSceneAsync(e,t,n,i,c),c}Uf=this._renderer.getRenderTarget(),Bf=this._renderer.getActiveCubeFace(),Of=this._renderer.getActiveMipmapLevel();let r=s||this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}async fromSceneAsync(e,t=0,n=.1,i=100,s=null){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,t,n,i,s)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);let n=t||this._allocateTargets();return this.fromEquirectangularAsync(e,n),n}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);let n=t||this._allocateTargets();return this.fromCubemapAsync(e,t),n}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=$y(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Yy(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===li||e.mapping===Vi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Uf,Bf,Of),e.scissorTest=!1,du(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),Uf=this._renderer.getRenderTarget(),Bf=this._renderer.getActiveCubeFace(),Of=this._renderer.getActiveMipmapLevel();let n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){let e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:_t,minFilter:_t,generateMipmaps:!1,type:bt,format:dn,colorSpace:ln},i=Xy(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Xy(e,t,n);let{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=oI(s)),this._blurMaterial=aI(s,e,t)}return i}async _compileMaterial(e){let t=new Vt(this._lodPlanes[0],e);await this._renderer.compile(t,Ff)}_sceneToCubeUV(e,t,n,i){let s=sI;s.near=t,s.far=n;let r=[1,1,1,1,-1,1],c=[1,-1,1,-1,1,-1],a=this._renderer,l=a.autoClear;a.getClearColor(Wy),a.autoClear=!1;let u=this._backgroundBox;if(u===null){let f=new us({name:"PMREM.Background",side:St,depthWrite:!1,depthTest:!1});u=new Vt(new hs,f)}let h=!1,d=e.background;d?d.isColor&&(u.material.color.copy(d),e.background=null,h=!0):(u.material.color.copy(Wy),h=!0),a.setRenderTarget(i),a.clear(),h&&a.render(u,s);for(let f=0;f<6;f++){let m=f%3;m===0?(s.up.set(0,r[f],0),s.lookAt(c[f],0,0)):m===1?(s.up.set(0,0,r[f]),s.lookAt(0,c[f],0)):(s.up.set(0,r[f],0),s.lookAt(0,0,c[f]));let g=this._cubeSize;du(i,m*g,f>2?g:0,g,g),a.render(e,s)}a.autoClear=l,e.background=d}_textureToCubeUV(e,t){let n=this._renderer,i=e.mapping===li||e.mapping===Vi;i?this._cubemapMaterial===null&&(this._cubemapMaterial=$y(e)):this._equirectMaterial===null&&(this._equirectMaterial=Yy(e));let s=i?this._cubemapMaterial:this._equirectMaterial;s.fragmentNode.value=e;let r=this._lodMeshes[0];r.material=s;let c=this._cubeSize;du(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(r,Ff)}_applyPMREM(e){let t=this._renderer,n=t.autoClear;t.autoClear=!1;let i=this._lodPlanes.length;for(let s=1;s<i;s++){let r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=qy[(i-s-1)%qy.length];this._blur(e,s-1,s,r,c)}t.autoClear=n}_blur(e,t,n,i,s){let r=this._pingPongRenderTarget;this._halfBlur(e,r,t,n,i,"latitudinal",s),this._halfBlur(r,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,r,c){let a=this._renderer,l=this._blurMaterial;r!=="latitudinal"&&r!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");let u=3,h=this._lodMeshes[i];h.material=l;let d=ab.get(l),f=this._sizeLods[n]-1,m=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Is-1),g=s/m,_=isFinite(s)?1+Math.floor(u*g):Is;_>Is&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${Is}`);let x=[],T=0;for(let P=0;P<Is;++P){let I=P/g,G=Math.exp(-I*I/2);x.push(G),P===0?T+=G:P<_&&(T+=2*G)}for(let P=0;P<x.length;P++)x[P]=x[P]/T;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=_,d.weights.array=x,d.latitudinal.value=r==="latitudinal"?1:0,c&&(d.poleAxis.value=c);let{_lodMax:A}=this;d.dTheta.value=m,d.mipInt.value=A-n;let E=this._sizeLods[i],N=3*E*(i>A-no?i-A+no:0),R=4*(this._cubeSize-E);du(t,N,R,3*E,2*E),a.setRenderTarget(t),a.render(h,Ff)}};function oI(o){let e=[],t=[],n=[],i=[],s=o,r=o-no+1+Hy.length;for(let c=0;c<r;c++){let a=Math.pow(2,s);t.push(a);let l=1/a;c>o-no?l=Hy[c-o+no-1]:c===0&&(l=0),n.push(l);let u=1/(a-2),h=-u,d=1+u,f=[h,h,d,h,d,d,h,h,d,d,h,d],m=6,g=6,_=3,x=2,T=1,A=new Float32Array(_*g*m),E=new Float32Array(x*g*m),N=new Float32Array(T*g*m);for(let P=0;P<m;P++){let I=P%3*2/3-1,G=P>2?0:-1,z=[I,G,0,I+2/3,G,0,I+2/3,G+1,0,I,G,0,I+2/3,G+1,0,I,G+1,0],$=rI[P];A.set(z,_*g*$),E.set(f,x*g*$);let j=[$,$,$,$,$,$];N.set(j,T*g*$)}let R=new bn;R.setAttribute("position",new et(A,_)),R.setAttribute("uv",new et(E,x)),R.setAttribute("faceIndex",new et(N,T)),e.push(R),i.push(new Vt(R,null)),s>no&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n,lodMeshes:i}}function Xy(o,e,t){let n=new Ut(o,e,t);return n.texture.mapping=Ta,n.texture.name="PMREM.cubeUv",n.texture.isPMREMTexture=!0,n.scissorTest=!0,n}function du(o,e,t,n,i){o.viewport.set(e,t,n,i),o.scissor.set(e,t,n,i)}function Px(o){let e=new Re;return e.depthTest=!1,e.depthWrite=!1,e.blending=Bi,e.name=`PMREM_${o}`,e}function aI(o,e,t){let n=pn(new Array(Is).fill(0)),i=X(new M(0,1,0)),s=X(0),r=y(Is),c=X(0),a=X(1),l=ae(null),u=X(0),h=y(1/e),d=y(1/t),f=y(o),m={n:r,latitudinal:c,weights:n,poleAxis:i,outputDirection:Nx,dTheta:s,samples:a,envMap:l,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},g=Px("blur");return g.fragmentNode=_S({...m,latitudinal:c.equal(1)}),ab.set(g,m),g}function $y(o){let e=Px("cubemap");return e.fragmentNode=uo(o,Nx),e}function Yy(o){let e=Px("equirect");return e.fragmentNode=ae(o,mx(Nx),0),e}var Ky=new WeakMap,cI=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),fu=o=>/e/g.test(o)?String(o).replace(/\+/g,""):(o=Number(o),o+(o%1?"":".0")),uh=class{constructor(e,t,n){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=n,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=Su(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new gc,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=Ky.get(this.renderer);return e===void 0&&(e=new nn,Ky.set(this.renderer,e)),e}createRenderTarget(e,t,n){return new Ut(e,t,n)}createCubeRenderTarget(e,t){return new qu(e,t)}createPMREMGenerator(){return new Fg(this.renderer)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){let n=this.getBindGroupsCache(),i=[],s=!0;for(let c of t)i.push(c),s=s&&c.groupNode.shared!==!0;let r;return s?(r=n.get(i),r===void 0&&(r=new Uc(e,i,this.bindingsIndexes[e].group,i),n.set(i,r))):r=new Uc(e,i,this.bindingsIndexes[e].group,i),r}getBindGroupArray(e,t){let n=this.bindings[t],i=n[e];return i===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),n[e]=i=[]),i}getBindings(){let e=this.bindGroups;if(e===null){let t={},n=this.bindings;for(let i of tp)for(let s in n[i]){let r=n[i][s];(t[s]||(t[s]=[])).push(...r)}e=[];for(let i in t){let s=t[i],r=this._getBindGroup(i,s);e.push(r)}this.bindGroups=e}return e}sortBindingGroups(){let e=this.getBindings();e.sort((t,n)=>t.bindings[0].groupNode.order-n.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){let n=e[t];this.bindingsIndexes[n.name].group=t,n.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(let e of this.nodes)e.getUpdateType()!==J.NONE&&this.updateNodes.push(e.getSelf());for(let e of this.sequentialNodes){let t=e.getUpdateBeforeType(),n=e.getUpdateAfterType();t!==J.NONE&&this.updateBeforeNodes.push(e.getSelf()),n!==J.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===_t||e.magFilter===Sa||e.magFilter===Ts||e.magFilter===hn||e.minFilter===_t||e.minFilter===Sa||e.minFilter===Ts||e.minFilter===hn}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){let n=this.getDataFromNode(e);return n.cache===void 0&&(n.cache=new gc(t?this.getCache():null)),n.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){let t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,n=null){let i=this.generateArrayDeclaration(e,t)+"( ";for(let s=0;s<t;s++){let r=n?n[s]:null;r!==null?i+=r.build(this,e):i+=this.generateConst(e),s<t-1&&(i+=", ")}return i+=" )",i}generateStruct(e,t,n=null){let i=[];for(let s of t){let{name:r,type:c}=s;n&&n[r]&&n[r].isNode?i.push(n[r].build(this,c)):i.push(this.generateConst(c))}return e+"( "+i.join(", ")+" )"}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new q:e==="vec2"?t=new H:e==="vec3"?t=new M:e==="vec4"&&(t=new re)),e==="float")return fu(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${fu(t.r)}, ${fu(t.g)}, ${fu(t.b)} )`;let n=this.getTypeLength(e),i=this.getComponentType(e),s=r=>this.generateConst(i,r);if(n===2)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)} )`;if(n===3)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)} )`;if(n===4)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)}, ${s(t.w)} )`;if(n>4&&t&&(t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(s).join(", ")} )`;if(n>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){let n=this.attributes;for(let s of n)if(s.name===e)return s;let i=new ch(e,t);return n.push(i),i}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){let t=e.type;if(e.isDataTexture){if(t===tt)return"int";if(t===ke)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;let t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;let n=mv(e),i=t==="float"?"":t[0];return/mat2/.test(t)===!0&&(n=n.replace("vec","mat")),i+n}getTypeFromArray(e){return cI.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);let n=t.array,i=e.itemSize,s=e.normalized,r;return!(e instanceof mr)&&s!==!0&&(r=this.getTypeFromArray(n)),this.getTypeFromLength(i,r)}getTypeLength(e){let t=this.getVectorType(e),n=/vec([2-4])/.exec(t);return n!==null?Number(n[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){let t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Su(this.stack),this.stacks.push(P_()||this.stack),Sc(this.stack),this.stack}removeStack(){let e=this.stack;return this.stack=e.parent,Sc(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,n=null){n=n===null?e.isGlobal(this)?this.globalCache:this.cache:n;let i=n.getData(e);return i===void 0&&(i={},n.setData(e,i)),i[t]===void 0&&(i[t]={}),i[t]}getNodeProperties(e,t="any"){let n=this.getDataFromNode(e,t);return n.properties||(n.properties={outputNode:null})}getBufferAttributeFromNode(e,t){let n=this.getDataFromNode(e),i=n.bufferAttribute;if(i===void 0){let s=this.uniforms.index++;i=new ch("nodeAttribute"+s,t,e),this.bufferAttributes.push(i),n.bufferAttribute=i}return i}getStructTypeFromNode(e,t,n=null,i=this.shaderStage){let s=this.getDataFromNode(e,i),r=s.structType;if(r===void 0){let c=this.structs.index++;n===null&&(n="StructType"+c),r=new xg(n,t),this.structs[i].push(r),s.structType=r}return r}getOutputStructTypeFromNode(e,t){let n=this.getStructTypeFromNode(e,t,"OutputType","fragment");return n.output=!0,n}getUniformFromNode(e,t,n=this.shaderStage,i=null){let s=this.getDataFromNode(e,n,this.globalCache),r=s.uniform;if(r===void 0){let c=this.uniforms.index++;r=new mg(i||"nodeUniform"+c,t,e),this.uniforms[n].push(r),s.uniform=r}return r}getArrayCount(e){let t=null;return e.isArrayNode?t=e.count:e.isVarNode&&e.node.isArrayNode&&(t=e.node.count),t}getVarFromNode(e,t=null,n=e.getNodeType(this),i=this.shaderStage,s=!1){let r=this.getDataFromNode(e,i),c=r.variable;if(c===void 0){let a=s?"_const":"_var",l=this.vars[i]||(this.vars[i]=[]),u=this.vars[a]||(this.vars[a]=0);t===null&&(t=(s?"nodeConst":"nodeVar")+u,this.vars[a]++);let h=this.getArrayCount(e);c=new lh(t,n,s,h),s||l.push(c),r.variable=c}return c}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(let t of e.values)if(!this.isDeterministic(t))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,t=null,n=e.getNodeType(this)){let i=this.getDataFromNode(e,"any"),s=i.varying;if(s===void 0){let r=this.varyings,c=r.length;t===null&&(t="nodeVarying"+c),s=new gg(t,n),r.push(s),i.varying=s}return s}getCodeFromNode(e,t,n=this.shaderStage){let i=this.getDataFromNode(e),s=i.code;if(s===void 0){let r=this.codes[n]||(this.codes[n]=[]),c=r.length;s=new _g("nodeCode"+c,t),r.push(s),i.code=s}return s}addFlowCodeHierarchy(e,t){let{flowCodes:n,flowCodeBlock:i}=this.getDataFromNode(e),s=!0,r=t;for(;r;){if(i.get(r)===!0){s=!1;break}r=this.getDataFromNode(r).parentNodeBlock}if(s)for(let c of n)this.addLineFlowCode(c)}addLineFlowCodeBlock(e,t,n){let i=this.getDataFromNode(e),s=i.flowCodes||(i.flowCodes=[]),r=i.flowCodeBlock||(i.flowCodeBlock=new WeakMap);s.push(t),r.set(n,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){let t=e.getNodeType(this),n=this.flowChildNode(e,t);return this.flowsData.set(e,n),n}buildFunctionNode(e){let t=new ih,n=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=n,t}flowShaderNode(e){let t=e.layout,n={[Symbol.iterator](){let r=0,c=Object.values(this);return{next:()=>({value:c[r],done:r++>=c.length})}}};for(let r of t.inputs)n[r.name]=new Qu(r.type,r.name);e.layout=null;let i=e.call(n),s=this.flowStagesNode(i,t.type);return e.layout=t,s}flowStagesNode(e,t=null){let n=this.flow,i=this.vars,s=this.cache,r=this.buildStage,c=this.stack,a={code:""};this.flow=a,this.vars={},this.cache=new gc,this.stack=Su();for(let l of ep)this.setBuildStage(l),a.result=e.build(this,t);return a.vars=this.getVars(this.shaderStage),this.flow=n,this.vars=i,this.cache=s,this.stack=c,this.setBuildStage(r),a}getFunctionOperator(){return null}flowChildNode(e,t=null){let n=this.flow,i={code:""};return this.flow=i,i.result=e.build(this,t),this.flow=n,i}flowNodeFromShaderStage(e,t,n=null,i=null){let s=this.shaderStage;this.setShaderStage(e);let r=this.flowChildNode(t,n);return i!==null&&(r.code+=`${this.tab+i} = ${r.result};
`),this.flowCode[e]=this.flowCode[e]+r.code,this.setShaderStage(s),r}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t,n=null){return`${n!==null?this.generateArrayDeclaration(e,n):this.getType(e)} ${t}`}getVars(e){let t="",n=this.vars[e];if(n!==void 0)for(let i of n)t+=`${this.getVar(i.type,i.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){let t=this.codes[e],n="";if(t!==void 0)for(let i of t)n+=i.code+`
`;return n}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){let{object:e,material:t,renderer:n}=this;if(t!==null){let i=n.library.fromMaterial(t);i===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),i=new Re),i.build(this)}else this.addFlow("compute",e);for(let i of ep){this.setBuildStage(i),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(let s of tp){this.setShaderStage(s);let r=this.flowNodes[s];for(let c of r)i==="generate"?this.flowNode(c):c.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new wg(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new Rg(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new Cg(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new Ng(e);if(t==="color")return new Pg(e);if(t==="mat2")return new Ig(e);if(t==="mat3")return new Dg(e);if(t==="mat4")return new Lg(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,n){if(t=this.getVectorType(t),n=this.getVectorType(n),t===n||n===null||this.isReference(n))return e;let i=this.getTypeLength(t),s=this.getTypeLength(n);return i===16&&s===9?`${this.getType(n)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:i===9&&s===4?`${this.getType(n)}(${e}[0].xy, ${e}[1].xy)`:i>4||s>4||s===0?e:i===s?`${this.getType(n)}( ${e} )`:i>s?this.format(`${e}.${"xyz".slice(0,s)}`,this.getTypeFromLength(s,this.getComponentType(t)),n):s===4&&i>1?`${this.getType(n)}( ${this.format(e,t,"vec3")}, 1.0 )`:i===2?`${this.getType(n)}( ${this.format(e,t,"vec2")}, 0.0 )`:(i===1&&s>1&&t!==this.getComponentType(n)&&(e=`${this.getType(this.getComponentType(n))}( ${e} )`),`${this.getType(n)}( ${e} )`)}getSignature(){return`// Three.js r${wr} - Node System
`}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}},hh=class{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let n=e.get(t);return n===void 0&&(n={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,n)),n}updateBeforeNode(e){let t=e.getUpdateBeforeType(),n=e.updateReference(this);if(t===J.FRAME){let{frameMap:i}=this._getMaps(this.updateBeforeMap,n);i.get(n)!==this.frameId&&e.updateBefore(this)!==!1&&i.set(n,this.frameId)}else if(t===J.RENDER){let{renderMap:i}=this._getMaps(this.updateBeforeMap,n);i.get(n)!==this.renderId&&e.updateBefore(this)!==!1&&i.set(n,this.renderId)}else t===J.OBJECT&&e.updateBefore(this)}updateAfterNode(e){let t=e.getUpdateAfterType(),n=e.updateReference(this);if(t===J.FRAME){let{frameMap:i}=this._getMaps(this.updateAfterMap,n);i.get(n)!==this.frameId&&e.updateAfter(this)!==!1&&i.set(n,this.frameId)}else if(t===J.RENDER){let{renderMap:i}=this._getMaps(this.updateAfterMap,n);i.get(n)!==this.renderId&&e.updateAfter(this)!==!1&&i.set(n,this.renderId)}else t===J.OBJECT&&e.updateAfter(this)}updateNode(e){let t=e.getUpdateType(),n=e.updateReference(this);if(t===J.FRAME){let{frameMap:i}=this._getMaps(this.updateMap,n);i.get(n)!==this.frameId&&e.update(this)!==!1&&i.set(n,this.frameId)}else if(t===J.RENDER){let{renderMap:i}=this._getMaps(this.updateMap,n);i.get(n)!==this.renderId&&e.update(this)!==!1&&i.set(n,this.renderId)}else t===J.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}},Bc=class{constructor(e,t,n=null,i="",s=!1){this.type=e,this.name=t,this.count=n,this.qualifier=i,this.isConst=s}};Bc.isNodeFunctionInput=!0;var Ug=class extends yi{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);let t=e.context.lightingModel,n=this.colorNode,i=Ax(this.light),s=e.context.reflectedLight;t.direct({lightDirection:i,lightColor:n,reflectedLight:s},e.stack,e)}},Gf=new ue,pu=new ue,ic=null,Bg=class extends yi{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=X(new M).setGroup(Z),this.halfWidth=X(new M).setGroup(Z),this.updateType=J.RENDER}update(e){super.update(e);let{light:t}=this,n=e.camera.matrixWorldInverse;pu.identity(),Gf.copy(t.matrixWorld),Gf.premultiply(n),pu.extractRotation(Gf),this.halfWidth.value.set(t.width*.5,0,0),this.halfHeight.value.set(0,t.height*.5,0),this.halfWidth.value.applyMatrix4(pu),this.halfHeight.value.applyMatrix4(pu)}setup(e){super.setup(e);let t,n;e.isAvailable("float32Filterable")?(t=ae(ic.LTC_FLOAT_1),n=ae(ic.LTC_FLOAT_2)):(t=ae(ic.LTC_HALF_1),n=ae(ic.LTC_HALF_2));let{colorNode:i,light:s}=this,r=e.context.lightingModel,c=$h(s),a=e.context.reflectedLight;r.directRectArea({lightColor:i,lightPosition:c,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:a,ltc_1:t,ltc_2:n},e.stack,e)}static setLTC(e){ic=e}},dh=class extends yi{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=X(0).setGroup(Z),this.penumbraCosNode=X(0).setGroup(Z),this.cutoffDistanceNode=X(0).setGroup(Z),this.decayExponentNode=X(0).setGroup(Z)}update(e){super.update(e);let{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){let{coneCosNode:t,penumbraCosNode:n}=this;return Ln(t,n,e)}setup(e){super.setup(e);let t=e.context.lightingModel,{colorNode:n,cutoffDistanceNode:i,decayExponentNode:s,light:r}=this,c=$h(r).sub(De),a=c.normalize(),l=a.dot(Ax(r)),u=this.getSpotAttenuation(l),h=c.length(),d=wx({lightDistance:h,cutoffDistance:i,decayExponent:s}),f=n.mul(u).mul(d);if(r.map){let g=kS(r),_=ae(r.map,g.xy).onRenderUpdate(()=>r.map);f=g.mul(2).sub(1).abs().lessThan(1).all().select(f.mul(_),f)}let m=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:f,reflectedLight:m},e.stack,e)}},Og=class extends dh{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){let t=this.light.iesMap,n=null;if(t&&t.isTexture===!0){let i=e.acos().mul(1/Math.PI);n=ae(t,U(i,0),0).r}else n=super.getSpotAttenuation(e);return n}},Vg=class extends yi{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}},Gg=class extends yi{static get type(){return"HemisphereLightNode"}constructor(e=null){super(e),this.lightPositionNode=Mx(e),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=X(new q).setGroup(Z)}update(e){let{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){let{colorNode:t,groundColorNode:n,lightDirectionNode:i}=this,r=tn.dot(i).mul(.5).add(.5),c=fe(n,t,r);e.context.irradiance.addAssign(c)}},zg=class extends yi{static get type(){return"LightProbeNode"}constructor(e=null){super(e);let t=[];for(let n=0;n<9;n++)t.push(new M);this.lightProbe=pn(t)}update(e){let{light:t}=this;super.update(e);for(let n=0;n<9;n++)this.lightProbe.array[n].copy(t.sh.coefficients[n]).multiplyScalar(t.intensity)}setup(e){let t=ob(Gh,this.lightProbe);e.context.irradiance.addAssign(t)}},fh=class{parseFunction(){console.warn("Abstract function.")}},Oc=class{constructor(e,t,n="",i=""){this.type=e,this.inputs=t,this.name=n,this.precision=i}getCode(){console.warn("Abstract function.")}};Oc.isNodeFunction=!0;var lI=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,uI=/[a-z_0-9]+/ig,Zy="#pragma main",hI=o=>{o=o.trim();let e=o.indexOf(Zy),t=e!==-1?o.slice(e+Zy.length):o,n=t.match(lI);if(n!==null&&n.length===5){let i=n[4],s=[],r=null;for(;(r=uI.exec(i))!==null;)s.push(r);let c=[],a=0;for(;a<s.length;){let m=s[a][0]==="const";m===!0&&a++;let g=s[a][0];g==="in"||g==="out"||g==="inout"?a++:g="";let _=s[a++][0],x=Number.parseInt(s[a][0]);Number.isNaN(x)===!1?a++:x=null;let T=s[a++][0];c.push(new Bc(_,T,x,g,m))}let l=t.substring(n[0].length),u=n[3]!==void 0?n[3]:"",h=n[2],d=n[1]!==void 0?n[1]:"",f=e!==-1?o.slice(0,e):"";return{type:h,inputs:c,name:u,precision:d,inputsCode:i,blockCode:l,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")},kg=class extends Oc{constructor(e){let{type:t,inputs:n,name:i,precision:s,inputsCode:r,blockCode:c,headerCode:a}=hI(e);super(t,n,i,s),this.inputsCode=r,this.blockCode=c,this.headerCode=a}getCode(e=this.name){let t,n=this.blockCode;if(n!==""){let{type:i,inputsCode:s,headerCode:r,precision:c}=this,a=`${i} ${e} ( ${s.trim()} )`;c!==""&&(a=`${c} ${a}`),t=r+a+n}else t="";return t}},Hg=class extends fh{parseFunction(e){return new kg(e)}},jy=new WeakMap,En=[],Yr=[],Wg=class extends On{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new hh,this.nodeBuilderCache=new Map,this.callHashCache=new nn,this.groupsData=new nn,this.cacheLib={}}updateGroup(e){let t=e.groupNode,n=t.name;if(n===D_.name)return!0;if(n===Z.name){let s=this.get(e),r=this.nodeFrame.renderId;return s.renderId!==r?(s.renderId=r,!0):!1}if(n===Bv.name){let s=this.get(e),r=this.nodeFrame.frameId;return s.frameId!==r?(s.frameId=r,!0):!1}En[0]=t,En[1]=e;let i=this.groupsData.get(En);return i===void 0&&this.groupsData.set(En,i={}),En.length=0,i.version!==t.version?(i.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){let t=this.get(e),n=t.nodeBuilderState;if(n===void 0){let{nodeBuilderCache:i}=this,s=this.getForRenderCacheKey(e);if(n=i.get(s),n===void 0){let r=this.backend.createNodeBuilder(e.object,this.renderer);r.scene=e.scene,r.material=e.material,r.camera=e.camera,r.context.material=e.material,r.lightsNode=e.lightsNode,r.environmentNode=this.getEnvironmentNode(e.scene),r.fogNode=this.getFogNode(e.scene),r.clippingContext=e.clippingContext,r.build(),n=this._createNodeBuilderState(r),i.set(s,n)}n.usedTimes++,t.nodeBuilderState=n}return n}delete(e){if(e.isRenderObject){let t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){let t=this.get(e),n=t.nodeBuilderState;if(n===void 0){let i=this.backend.createNodeBuilder(e,this.renderer);i.build(),n=this._createNodeBuilderState(i),t.nodeBuilderState=n}return n}_createNodeBuilderState(e){return new pg(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{let n=this.get(e);n.environmentNode&&(t=n.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{let n=this.get(e);n.backgroundNode&&(t=n.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){En[0]=e,En[1]=t;let n=this.renderer.info.calls,i=this.callHashCache.get(En)||{};if(i.callId!==n){let s=this.getEnvironmentNode(e),r=this.getFogNode(e);t&&Yr.push(t.getCacheKey(!0)),s&&Yr.push(s.getCacheKey()),r&&Yr.push(r.getCacheKey()),Yr.push(this.renderer.shadowMap.enabled?1:0),i.callId=n,i.cacheKey=wh(Yr),this.callHashCache.set(En,i),Yr.length=0}return En.length=0,i.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){let t=this.get(e),n=e.background;if(n){let i=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==n||i){let s=this.getCacheNode("background",n,()=>{if(n.isCubeTexture===!0||n.mapping===ys||n.mapping===vs||n.mapping===Ta){if(e.backgroundBlurriness>0||n.mapping===Ta)return xx(n);{let r;return n.isCubeTexture===!0?r=uo(n):r=ae(n),oS(r)}}else{if(n.isTexture===!0)return ae(n,Un.flipY()).setUpdateMatrix(!0);n.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",n)}},i);t.backgroundNode=s,t.background=n,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,n,i=!1){let s=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap),r=s.get(t);return(r===void 0||i)&&(r=n(),s.set(t,r)),r}updateFog(e){let t=this.get(e),n=e.fog;if(n){if(t.fog!==n){let i=this.getCacheNode("fog",n,()=>{if(n.isFogExp2){let s=me("color","color",n).setGroup(Z),r=me("density","float",n).setGroup(Z);return Lc(s,Tx(r))}else if(n.isFog){let s=me("color","color",n).setGroup(Z),r=me("near","float",n).setGroup(Z),c=me("far","float",n).setGroup(Z);return Lc(s,vx(r,c))}else console.error("THREE.Renderer: Unsupported fog configuration.",n)});t.fogNode=i,t.fog=n}}else delete t.fogNode,delete t.fog}updateEnvironment(e){let t=this.get(e),n=e.environment;if(n){if(t.environment!==n){let i=this.getCacheNode("environment",n,()=>{if(n.isCubeTexture===!0)return uo(n);if(n.isTexture===!0)return ae(n);console.error("Nodes: Unsupported environment configuration.",n)});t.environmentNode=i,t.environment=n}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,n=null,i=null,s=null){let r=this.nodeFrame;return r.renderer=e,r.scene=t,r.object=n,r.camera=i,r.material=s,r}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){let e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return jy.get(e)!==this.getOutputCacheKey()}getOutputNode(e){let t=this.renderer,n=this.getOutputCacheKey(),i=ae(e,Un).renderOutput(t.toneMapping,t.currentColorSpace);return jy.set(e,n),i}updateBefore(e){let t=e.getNodeBuilderState();for(let n of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(n)}updateAfter(e){let t=e.getNodeBuilderState();for(let n of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(n)}updateForCompute(e){let t=this.getNodeFrame(),n=this.getForCompute(e);for(let i of n.updateNodes)t.updateNode(i)}updateForRender(e){let t=this.getNodeFrameForRender(e),n=e.getNodeBuilderState();for(let i of n.updateNodes)t.updateNode(i)}needsRefresh(e){let t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new hh,this.nodeBuilderCache=new Map,this.cacheLib={}}},zf=new Tt,ph=class o{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new Q,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,n){let i=e.length;for(let s=0;s<i;s++){zf.copy(e[s]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);let r=t[n+s],c=zf.normal;r.x=-c.x,r.y=-c.y,r.z=-c.z,r.w=zf.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let n=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);let i=t.clippingPlanes,s=i.length,r,c;if(this.clipIntersection?(r=this.intersectionPlanes,c=e.intersectionPlanes.length):(r=this.unionPlanes,c=e.unionPlanes.length),r.length!==c+s){r.length=c+s;for(let a=0;a<s;a++)r[c+a]=new re;n=!0}this.projectPlanes(i,r,c),n&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new o(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}},qg=class{constructor(e,t){this.bundleGroup=e,this.camera=t}},sc=[],Xg=class{constructor(){this.bundles=new nn}get(e,t){let n=this.bundles;sc[0]=e,sc[1]=t;let i=n.get(sc);return i===void 0&&(i=new qg(e,t),n.set(sc,i)),sc.length=0,i}dispose(){this.bundles=new nn}},mh=class{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null,n=this.getMaterialNodeClass(e.type);if(n!==null){t=new n;for(let i in e)t[i]=e[i]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);n.set(t,e)}addClass(e,t,n){if(n.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);n.set(t,e)}},dI=new Fc,rc=[],$g=class extends nn{constructor(){super()}createNode(e=[]){return new Fc().setLights(e)}getNode(e,t){if(e.isQuadMesh)return dI;rc[0]=e,rc[1]=t;let n=this.get(rc);return n===void 0&&(n=this.createNode(),this.set(rc,n)),rc.length=0,n}},gh=class extends Ut{constructor(e=1,t=1,n={}){super(e,t,n),this.isXRRenderTarget=!0,this.hasExternalTextures=!1,this.autoAllocateDepthBuffer=!0}copy(e){return super.copy(e),this.hasExternalTextures=e.hasExternalTextures,this.autoAllocateDepthBuffer=e.autoAllocateDepthBuffer,this}},Qy=new M,Jy=new M,Yg=class extends Ft{constructor(e){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new qe,this._cameraL.viewport=new re,this._cameraR=new qe,this._cameraR.viewport=new re,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new xa,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._currentRenderTarget=null,this._xrRenderTarget=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new H,this._onSessionEvent=mI.bind(this),this._onSessionEnd=gI.bind(this),this._onInputSourcesChange=_I.bind(this),this._onAnimationFrame=xI.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._useLayers=typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getFrame(){return this._xrFrame}getSession(){return this._session}async setSession(e){let t=this._renderer,n=t.backend,i=t.getContext();if(this._session=e,e!==null){if(n.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(this._currentRenderTarget=t.getRenderTarget(),e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await n.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),this._useLayers===!0){let s=null,r=null,c=null;t.depth&&(c=t.stencil?i.DEPTH24_STENCIL8:i.DEPTH_COMPONENT24,s=t.stencil?ni:vn,r=t.stencil?zi:ke);let a={colorFormat:i.RGBA8,depthFormat:c,scaleFactor:this._framebufferScaleFactor},l=new XRWebGLBinding(e,i),u=l.createProjectionLayer(a);this._glBinding=l,this._glProjLayer=u,e.updateRenderState({layers:[u]}),t.setPixelRatio(1),t.setSize(u.textureWidth,u.textureHeight,!1),this._xrRenderTarget=new gh(u.textureWidth,u.textureHeight,{format:dn,type:zt,colorSpace:t.outputColorSpace,depthTexture:new Yt(u.textureWidth,u.textureHeight,r,void 0,void 0,void 0,void 0,void 0,void 0,s),stencilBuffer:t.stencil,samples:t.samples}),this._xrRenderTarget.hasExternalTextures=!0}else{let s={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},r=new XRWebGLLayer(e,i,s);this._glBaseLayer=r,e.updateRenderState({baseLayer:r}),t.setPixelRatio(1),t.setSize(r.framebufferWidth,r.framebufferHeight,!1),this._xrRenderTarget=new gh(r.framebufferWidth,r.framebufferHeight,{format:dn,type:zt,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil})}this.setFoveation(this.getFoveation()),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){let t=this._session;if(t===null)return;let n=e.near,i=e.far,s=this._cameraXR,r=this._cameraL,c=this._cameraR;s.near=c.near=r.near=n,s.far=c.far=r.far=i,(this._currentDepthNear!==s.near||this._currentDepthFar!==s.far)&&(t.updateRenderState({depthNear:s.near,depthFar:s.far}),this._currentDepthNear=s.near,this._currentDepthFar=s.far),r.layers.mask=e.layers.mask|2,c.layers.mask=e.layers.mask|4,s.layers.mask=r.layers.mask|c.layers.mask;let a=e.parent,l=s.cameras;ev(s,a);for(let u=0;u<l.length;u++)ev(l[u],a);l.length===2?fI(s,r,c):s.projectionMatrix.copy(r.projectionMatrix),pI(e,s,a)}_getController(e){let t=this._controllers[e];return t===void 0&&(t=new ko,this._controllers[e]=t),t}};function fI(o,e,t){Qy.setFromMatrixPosition(e.matrixWorld),Jy.setFromMatrixPosition(t.matrixWorld);let n=Qy.distanceTo(Jy),i=e.projectionMatrix.elements,s=t.projectionMatrix.elements,r=i[14]/(i[10]-1),c=i[14]/(i[10]+1),a=(i[9]+1)/i[5],l=(i[9]-1)/i[5],u=(i[8]-1)/i[0],h=(s[8]+1)/s[0],d=r*u,f=r*h,m=n/(-u+h),g=m*-u;if(e.matrixWorld.decompose(o.position,o.quaternion,o.scale),o.translateX(g),o.translateZ(m),o.matrixWorld.compose(o.position,o.quaternion,o.scale),o.matrixWorldInverse.copy(o.matrixWorld).invert(),i[10]===-1)o.projectionMatrix.copy(e.projectionMatrix),o.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{let _=r+m,x=c+m,T=d-g,A=f+(n-g),E=a*c/x*_,N=l*c/x*_;o.projectionMatrix.makePerspective(T,A,E,N,_,x),o.projectionMatrixInverse.copy(o.projectionMatrix).invert()}}function ev(o,e){e===null?o.matrixWorld.copy(o.matrix):o.matrixWorld.multiplyMatrices(e.matrixWorld,o.matrix),o.matrixWorldInverse.copy(o.matrixWorld).invert()}function pI(o,e,t){t===null?o.matrix.copy(e.matrixWorld):(o.matrix.copy(t.matrixWorld),o.matrix.invert(),o.matrix.multiply(e.matrixWorld)),o.matrix.decompose(o.position,o.quaternion,o.scale),o.updateMatrixWorld(!0),o.projectionMatrix.copy(e.projectionMatrix),o.projectionMatrixInverse.copy(e.projectionMatrixInverse),o.isPerspectiveCamera&&(o.fov=Li*2*Math.atan(1/o.projectionMatrix.elements[5]),o.zoom=1)}function mI(o){let e=this._controllerInputSources.indexOf(o.inputSource);if(e===-1)return;let t=this._controllers[e];if(t!==void 0){let n=this.getReferenceSpace();t.update(o.inputSource,o.frame,n),t.dispatchEvent({type:o.type,data:o.inputSource})}}function gI(){let o=this._session,e=this._renderer;o.removeEventListener("select",this._onSessionEvent),o.removeEventListener("selectstart",this._onSessionEvent),o.removeEventListener("selectend",this._onSessionEvent),o.removeEventListener("squeeze",this._onSessionEvent),o.removeEventListener("squeezestart",this._onSessionEvent),o.removeEventListener("squeezeend",this._onSessionEvent),o.removeEventListener("end",this._onSessionEnd),o.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let t=0;t<this._controllers.length;t++){let n=this._controllerInputSources[t];n!==null&&(this._controllerInputSources[t]=null,this._controllers[t].disconnect(n))}this._currentDepthNear=null,this._currentDepthFar=null,e.backend.setXRTarget(null),e.setRenderTarget(this._currentRenderTarget),this._session=null,this._xrRenderTarget=null,this.isPresenting=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function _I(o){let e=this._controllers,t=this._controllerInputSources;for(let n=0;n<o.removed.length;n++){let i=o.removed[n],s=t.indexOf(i);s>=0&&(t[s]=null,e[s].disconnect(i))}for(let n=0;n<o.added.length;n++){let i=o.added[n],s=t.indexOf(i);if(s===-1){for(let c=0;c<e.length;c++)if(c>=t.length){t.push(i),s=c;break}else if(t[c]===null){t[c]=i,s=c;break}if(s===-1)break}let r=e[s];r&&r.connect(i)}}function xI(o,e){if(e===void 0)return;let t=this._cameraXR,n=this._renderer,i=n.backend,s=this._glBaseLayer,r=this.getReferenceSpace(),c=e.getViewerPose(r);if(this._xrFrame=e,c!==null){let a=c.views;this._glBaseLayer!==null&&i.setXRTarget(s.framebuffer);let l=!1;a.length!==t.cameras.length&&(t.cameras.length=0,l=!0);for(let u=0;u<a.length;u++){let h=a[u],d;if(this._useLayers===!0){let m=this._glBinding.getViewSubImage(this._glProjLayer,h);d=m.viewport,u===0&&i.setXRRenderTargetTextures(this._xrRenderTarget,m.colorTexture,this._glProjLayer.ignoreDepthValues?void 0:m.depthStencilTexture)}else d=s.getViewport(h);let f=this._cameras[u];f===void 0&&(f=new qe,f.layers.enable(u),f.viewport=new re,this._cameras[u]=f),f.matrix.fromArray(h.transform.matrix),f.matrix.decompose(f.position,f.quaternion,f.scale),f.projectionMatrix.fromArray(h.projectionMatrix),f.projectionMatrixInverse.copy(f.projectionMatrix).invert(),f.viewport.set(d.x,d.y,d.width,d.height),u===0&&(t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale)),l===!0&&t.cameras.push(f)}n.setRenderTarget(this._xrRenderTarget)}for(let a=0;a<this._controllers.length;a++){let l=this._controllerInputSources[a],u=this._controllers[a];l!==null&&u!==void 0&&u.update(l,e,r)}this._currentAnimationLoop&&this._currentAnimationLoop(o,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}var tv=new si,mu=new H,kf=new re,Hf=new xr,gu=new ue,Hi=new re,Kg=class{constructor(e,t={}){this.isRenderer=!0;let{logarithmicDepthBuffer:n=!1,alpha:i=!0,depth:s=!0,stencil:r=!1,antialias:c=!1,samples:a=0,getFallback:l=null,colorBufferType:u=bt}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=a||c===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=n,this.outputColorSpace=K,this.toneMapping=Oi,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=s,this.stencil=r,this.info=new Sm,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new mh,this.lighting=new $g,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new re(0,0,this._width,this._height),this._scissor=new re(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new Dc(new Re),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;let h=this.alpha===!0?0:1;this._clearColor=new Ic(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=u,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Dd},this.xr=new Yg(this),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(d,f,m)=>{await this.compileAsync(d,f);let g=this._renderLists.get(d,f),_=this._renderContexts.get(d,f,this._renderTarget),x=d.overrideMaterial||m.material,T=this._objects.get(m,x,d,f,g.lightsNode,_,_.clippingContext),{fragmentShader:A,vertexShader:E}=T.getNodeBuilderState();return{fragmentShader:A,vertexShader:E}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let n=this.backend;try{await n.init(this)}catch(i){if(this._getFallback!==null)try{this.backend=n=this._getFallback(i),await n.init(this)}catch(s){t(s);return}else{t(i);return}}this._nodes=new Wg(this,n),this._animation=new _m(this._nodes,this.info),this._attributes=new vm(n),this._background=new fg(this,this._nodes),this._geometries=new Tm(this._attributes,this.info),this._textures=new Pm(this,n,this.info),this._pipelines=new Am(n,this._nodes),this._bindings=new Em(n,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new ym(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new Rm(this.lighting),this._bundles=new Xg,this._renderContexts=new Nm,this._animation.start(),this._initialized=!0,e()}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,n=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();let i=this._nodes.nodeFrame,s=i.renderId,r=this._currentRenderContext,c=this._currentRenderObjectFunction,a=this._compilationPromises,l=e.isScene===!0?e:tv;n===null&&(n=e);let u=this._renderTarget,h=this._renderContexts.get(n,t,u),d=this._activeMipmapLevel,f=[];this._currentRenderContext=h,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,i.renderId++,i.update(),h.depth=this.depth,h.stencil=this.stencil,h.clippingContext||(h.clippingContext=new ph),h.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,u);let m=this._renderLists.get(e,t);if(m.begin(),this._projectObject(e,t,0,m,h.clippingContext),n!==e&&n.traverseVisible(function(A){A.isLight&&A.layers.test(t.layers)&&m.pushLight(A)}),m.finish(),u!==null){this._textures.updateRenderTarget(u,d);let A=this._textures.get(u);h.textures=A.textures,h.depthTexture=A.depthTexture}else h.textures=null,h.depthTexture=null;this._background.update(l,m,h);let g=m.opaque,_=m.transparent,x=m.transparentDoublePass,T=m.lightsNode;this.opaque===!0&&g.length>0&&this._renderObjects(g,t,l,T),this.transparent===!0&&_.length>0&&this._renderTransparents(_,x,t,l,T),i.renderId=s,this._currentRenderContext=r,this._currentRenderObjectFunction=c,this._compilationPromises=a,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,n){let{bundleGroup:i,camera:s,renderList:r}=e,c=this._currentRenderContext,a=this._bundles.get(i,s),l=this.backend.get(a);l.renderContexts===void 0&&(l.renderContexts=new Set);let u=i.version!==l.version,h=l.renderContexts.has(c)===!1||u;if(l.renderContexts.add(c),h){this.backend.beginBundle(c),(l.renderObjects===void 0||u)&&(l.renderObjects=[]),this._currentRenderBundle=a;let d=r.opaque;this.opaque===!0&&d.length>0&&this._renderObjects(d,s,t,n),this._currentRenderBundle=null,this.backend.finishBundle(c,a),l.version=i.version}else{let{renderObjects:d}=l;for(let f=0,m=d.length;f<m;f++){let g=d[f];this._nodes.needsRefresh(g)&&(this._nodes.updateBefore(g),this._nodes.updateForRender(g),this._bindings.updateForRender(g),this._nodes.updateAfter(g))}}this.backend.addBundle(c,a)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){let{currentToneMapping:e,currentColorSpace:t}=this;if(e!==Oi===!1&&t!==ln===!1)return null;let{width:s,height:r}=this.getDrawingBufferSize(mu),{depth:c,stencil:a}=this,l=this._frameBufferTarget;return l===null&&(l=new Ut(s,r,{depthBuffer:c,stencilBuffer:a,type:this._colorBufferType,format:dn,colorSpace:ln,generateMipmaps:!1,minFilter:_t,magFilter:_t,samples:this.samples}),l.isPostProcessingRenderTarget=!0,this._frameBufferTarget=l),l.depthBuffer=c,l.stencilBuffer=a,l.setSize(s,r),l.viewport.copy(this._viewport),l.scissor.copy(this._scissor),l.viewport.multiplyScalar(this._pixelRatio),l.scissor.multiplyScalar(this._pixelRatio),l.scissorTest=this._scissorTest,l}_renderScene(e,t,n=!0){if(this._isDeviceLost===!0)return;let i=n?this._getFrameBufferTarget():null,s=this._nodes.nodeFrame,r=s.renderId,c=this._currentRenderContext,a=this._currentRenderObjectFunction,l=e.isScene===!0?e:tv,u=this._renderTarget,h=this._activeCubeFace,d=this._activeMipmapLevel,f;i!==null?(f=i,this.setRenderTarget(f)):f=u;let m=this._renderContexts.get(e,t,f);this._currentRenderContext=m,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,s.renderId=this.info.calls;let g=this.coordinateSystem,_=this.xr;if(t.coordinateSystem!==g&&_.isPresenting===!1&&(t.coordinateSystem=g,t.updateProjectionMatrix(),t.isArrayCamera))for(let j of t.cameras)j.coordinateSystem=g,j.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),_.enabled===!0&&_.isPresenting===!0&&(_.cameraAutoUpdate===!0&&_.updateCamera(t),t=_.getCamera());let x=this._viewport,T=this._scissor,A=this._pixelRatio;f!==null&&(x=f.viewport,T=f.scissor,A=1),this.getDrawingBufferSize(mu),kf.set(0,0,mu.width,mu.height);let E=x.minDepth===void 0?0:x.minDepth,N=x.maxDepth===void 0?1:x.maxDepth;m.viewportValue.copy(x).multiplyScalar(A).floor(),m.viewportValue.width>>=d,m.viewportValue.height>>=d,m.viewportValue.minDepth=E,m.viewportValue.maxDepth=N,m.viewport=m.viewportValue.equals(kf)===!1,m.scissorValue.copy(T).multiplyScalar(A).floor(),m.scissor=this._scissorTest&&m.scissorValue.equals(kf)===!1,m.scissorValue.width>>=d,m.scissorValue.height>>=d,m.clippingContext||(m.clippingContext=new ph),m.clippingContext.updateGlobal(l,t),l.onBeforeRender(this,e,t,f),gu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Hf.setFromProjectionMatrix(gu,g);let R=this._renderLists.get(e,t);if(R.begin(),this._projectObject(e,t,0,R,m.clippingContext),R.finish(),this.sortObjects===!0&&R.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);let j=this._textures.get(f);m.textures=j.textures,m.depthTexture=j.depthTexture,m.width=j.width,m.height=j.height,m.renderTarget=f,m.depth=f.depthBuffer,m.stencil=f.stencilBuffer}else m.textures=null,m.depthTexture=null,m.width=this.domElement.width,m.height=this.domElement.height,m.depth=this.depth,m.stencil=this.stencil;m.width>>=d,m.height>>=d,m.activeCubeFace=h,m.activeMipmapLevel=d,m.occlusionQueryCount=R.occlusionQueryCount,this._background.update(l,R,m),this.backend.beginRender(m);let{bundles:P,lightsNode:I,transparentDoublePass:G,transparent:z,opaque:$}=R;if(P.length>0&&this._renderBundles(P,l,I),this.opaque===!0&&$.length>0&&this._renderObjects($,t,l,I),this.transparent===!0&&z.length>0&&this._renderTransparents(z,G,t,l,I),this.backend.finishRender(m),s.renderId=r,this._currentRenderContext=c,this._currentRenderObjectFunction=a,i!==null){this.setRenderTarget(u,h,d);let j=this._quad;this._nodes.hasOutputChange(f.texture)&&(j.material.fragmentNode=this._nodes.getOutputNode(f.texture),j.material.needsUpdate=!0),this._renderScene(j,j.camera,!1)}return l.onAfterRender(this,e,t,f),m}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,n){this._width=e,this._height=t,this._pixelRatio=n,this.domElement.width=Math.floor(e*n),this.domElement.height=Math.floor(t*n),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,n=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),n===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){let t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,n,i){let s=this._scissor;e.isVector4?s.copy(e):s.set(e,t,n,i)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,n,i,s=0,r=1){let c=this._viewport;e.isVector4?c.copy(e):c.set(e,t,n,i),c.minDepth=s,c.maxDepth=r}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){let t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,n=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,n);let i=this._renderTarget||this._getFrameBufferTarget(),s=null;if(i!==null){this._textures.updateRenderTarget(i);let r=this._textures.get(i);s=this._renderContexts.getForClear(i),s.textures=r.textures,s.depthTexture=r.depthTexture,s.width=r.width,s.height=r.height,s.renderTarget=i,s.depth=i.depthBuffer,s.stencil=i.stencilBuffer}if(s.clearColorValue=this._clearColor,this.backend.clear(e,t,n,s),i!==null&&this._renderTarget===null){let r=this._quad;this._nodes.hasOutputChange(i.texture)&&(r.material.fragmentNode=this._nodes.getOutputNode(i.texture),r.material.needsUpdate=!0),this._renderScene(r,r.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,n=!0){this._initialized===!1&&await this.init(),this.clear(e,t,n)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this._renderTarget!==null?Oi:this.toneMapping}get currentColorSpace(){return this._renderTarget!==null?ln:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()}),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,n=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=n}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);let t=this._nodes.nodeFrame,n=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;let i=this.backend,s=this._pipelines,r=this._bindings,c=this._nodes,a=Array.isArray(e)?e:[e];if(a[0]===void 0||a[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");i.beginCompute(e);for(let l of a){if(s.has(l)===!1){let d=()=>{l.removeEventListener("dispose",d),s.delete(l),r.delete(l),c.delete(l)};l.addEventListener("dispose",d);let f=l.onInitFunction;f!==null&&f.call(l,{renderer:this})}c.updateForCompute(l),r.updateForCompute(l);let u=r.getForCompute(l),h=s.getForCompute(l,u);i.compute(e,l,u,h)}i.finishCompute(e),t.renderId=n}async computeAsync(e){this._initialized===!1&&await this.init(),this.compute(e)}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized===!1&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=Hi.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=Hi.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=Hi.set(0,0,e.image.width,e.image.height);let n=this._currentRenderContext,i;n!==null?i=n.renderTarget:(i=this._renderTarget||this._getFrameBufferTarget(),i!==null&&(this._textures.updateRenderTarget(i),n=this._textures.get(i))),this._textures.updateTexture(e,{renderTarget:i}),this.backend.copyFramebufferToTexture(e,n,t)}copyTextureToTexture(e,t,n=null,i=null,s=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,n,i,s)}async readRenderTargetPixelsAsync(e,t,n,i,s,r=0,c=0){return this.backend.copyTextureToBuffer(e.textures[r],t,n,i,s,c)}_projectObject(e,t,n,i,s){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)n=e.renderOrder,e.isClippingGroup&&e.enabled&&(s=s.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)i.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||Hf.intersectsSprite(e)){this.sortObjects===!0&&Hi.setFromMatrixPosition(e.matrixWorld).applyMatrix4(gu);let{geometry:a,material:l}=e;l.visible&&i.push(e,a,l,n,Hi.z,null,s)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Hf.intersectsObject(e))){let{geometry:a,material:l}=e;if(this.sortObjects===!0&&(a.boundingSphere===null&&a.computeBoundingSphere(),Hi.copy(a.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(gu)),Array.isArray(l)){let u=a.groups;for(let h=0,d=u.length;h<d;h++){let f=u[h],m=l[f.materialIndex];m&&m.visible&&i.push(e,a,m,n,Hi.z,f,s)}}else l.visible&&i.push(e,a,l,n,Hi.z,null,s)}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){let a=i;i=this._renderLists.get(e,t),i.begin(),a.pushBundle({bundleGroup:e,camera:t,renderList:i}),i.finish()}let c=e.children;for(let a=0,l=c.length;a<l;a++)this._projectObject(c[a],t,n,i,s)}_renderBundles(e,t,n){for(let i of e)this._renderBundle(i,t,n)}_renderTransparents(e,t,n,i,s){if(t.length>0){for(let{material:r}of t)r.side=St;this._renderObjects(t,n,i,s,"backSide");for(let{material:r}of t)r.side=Ni;this._renderObjects(e,n,i,s);for(let{material:r}of t)r.side=Ui}else this._renderObjects(e,n,i,s)}_renderObjects(e,t,n,i,s=null){for(let r=0,c=e.length;r<c;r++){let{object:a,geometry:l,material:u,group:h,clippingContext:d}=e[r];this._currentRenderObjectFunction(a,n,t,l,u,h,i,d,s)}}renderObject(e,t,n,i,s,r,c,a=null,l=null){let u,h,d;if(e.onBeforeRender(this,t,n,i,s,r),t.overrideMaterial!==null){let f=t.overrideMaterial;s.positionNode&&s.positionNode.isNode&&(u=f.positionNode,f.positionNode=s.positionNode),f.alphaTest=s.alphaTest,f.alphaMap=s.alphaMap,f.transparent=s.transparent||s.transmission>0,f.isShadowPassMaterial&&(f.side=s.shadowSide===null?s.side:s.shadowSide,s.depthNode&&s.depthNode.isNode&&(d=f.depthNode,f.depthNode=s.depthNode),s.castShadowNode&&s.castShadowNode.isNode&&(h=f.colorNode,f.colorNode=s.castShadowNode)),s=f}s.transparent===!0&&s.side===Ui&&s.forceSinglePass===!1?(s.side=St,this._handleObjectFunction(e,s,t,n,c,r,a,"backSide"),s.side=Ni,this._handleObjectFunction(e,s,t,n,c,r,a,l),s.side=Ui):this._handleObjectFunction(e,s,t,n,c,r,a,l),u!==void 0&&(t.overrideMaterial.positionNode=u),d!==void 0&&(t.overrideMaterial.depthNode=d),h!==void 0&&(t.overrideMaterial.colorNode=h),e.onAfterRender(this,t,n,i,s,r)}_renderObjectDirect(e,t,n,i,s,r,c,a){let l=this._objects.get(e,t,n,i,s,this._currentRenderContext,c,a);l.drawRange=e.geometry.drawRange,l.group=r;let u=this._nodes.needsRefresh(l);u&&(this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l)),this._pipelines.updateForRender(l),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(l),l.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(l,this.info),u&&this._nodes.updateAfter(l)}_createObjectPipeline(e,t,n,i,s,r,c,a){let l=this._objects.get(e,t,n,i,s,this._currentRenderContext,c,a);l.drawRange=e.geometry.drawRange,l.group=r,this._nodes.updateBefore(l),this._geometries.updateForRender(l),this._nodes.updateForRender(l),this._bindings.updateForRender(l),this._pipelines.getForRender(l,this._compilationPromises),this._nodes.updateAfter(l)}get compile(){return this.compileAsync}},Vc=class{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}};function yI(o){return o+(Yi-o%Yi)%Yi}var _h=class extends Vc{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return yI(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}},xh=class extends _h{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}},vI=0,yh=class extends xh{constructor(e,t){super("UniformBuffer_"+vI++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}},Zg=class extends xh{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){let t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){let t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,n=this.uniforms.length;t<n;t++){let i=this.uniforms[t],{boundary:s,itemSize:r}=i,c=e%Yi,a=Yi-c;c!==0&&a-s<0?e+=Yi-c:c%s!==0&&(e+=c%s),i.offset=e/this.bytesPerElement,e+=r*this.bytesPerElement}return Math.ceil(e/Yi)*Yi}update(){let e=!1;for(let t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1,n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s]!==i){let c=this._getBufferForType(r);c[s]=n[s]=i,t=!0}return t}updateVector2(e){let t=!1,n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y){let c=this._getBufferForType(r);c[s+0]=n[s+0]=i.x,c[s+1]=n[s+1]=i.y,t=!0}return t}updateVector3(e){let t=!1,n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y||n[s+2]!==i.z){let c=this._getBufferForType(r);c[s+0]=n[s+0]=i.x,c[s+1]=n[s+1]=i.y,c[s+2]=n[s+2]=i.z,t=!0}return t}updateVector4(e){let t=!1,n=this.values,i=e.getValue(),s=e.offset,r=e.getType();if(n[s+0]!==i.x||n[s+1]!==i.y||n[s+2]!==i.z||n[s+4]!==i.w){let c=this._getBufferForType(r);c[s+0]=n[s+0]=i.x,c[s+1]=n[s+1]=i.y,c[s+2]=n[s+2]=i.z,c[s+3]=n[s+3]=i.w,t=!0}return t}updateColor(e){let t=!1,n=this.values,i=e.getValue(),s=e.offset;if(n[s+0]!==i.r||n[s+1]!==i.g||n[s+2]!==i.b){let r=this.buffer;r[s+0]=n[s+0]=i.r,r[s+1]=n[s+1]=i.g,r[s+2]=n[s+2]=i.b,t=!0}return t}updateMatrix3(e){let t=!1,n=this.values,i=e.getValue().elements,s=e.offset;if(n[s+0]!==i[0]||n[s+1]!==i[1]||n[s+2]!==i[2]||n[s+4]!==i[3]||n[s+5]!==i[4]||n[s+6]!==i[5]||n[s+8]!==i[6]||n[s+9]!==i[7]||n[s+10]!==i[8]){let r=this.buffer;r[s+0]=n[s+0]=i[0],r[s+1]=n[s+1]=i[1],r[s+2]=n[s+2]=i[2],r[s+4]=n[s+4]=i[3],r[s+5]=n[s+5]=i[4],r[s+6]=n[s+6]=i[5],r[s+8]=n[s+8]=i[6],r[s+9]=n[s+9]=i[7],r[s+10]=n[s+10]=i[8],t=!0}return t}updateMatrix4(e){let t=!1,n=this.values,i=e.getValue().elements,s=e.offset;return SI(n,i,s)===!1&&(this.buffer.set(i,s),TI(n,i,s),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}};function TI(o,e,t){for(let n=0,i=e.length;n<i;n++)o[t+n]=e[n]}function SI(o,e,t){for(let n=0,i=e.length;n<i;n++)if(o[t+n]!==e[n])return!1;return!0}var bI=0,vh=class extends Zg{constructor(e,t){super(e),this.id=bI++,this.groupNode=t,this.isNodeUniformsGroup=!0}},MI=0,jg=class extends Vc{constructor(e,t){super(e),this.id=MI++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){let{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){let{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}},_o=class extends jg{constructor(e,t,n,i=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n,this.access=i}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){let{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}},Th=class extends _o{constructor(e,t,n,i=null){super(e,t,n,i),this.isSampledCubeTexture=!0}},Sh=class extends _o{constructor(e,t,n,i=null){super(e,t,n,i),this.isSampledTexture3D=!0}},AI={textureDimensions:"textureSize",equals:"equal"},EI={low:"lowp",medium:"mediump",high:"highp"},nv={swizzleAssign:!0,storageBuffer:!1},iv=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
`,Qg=class extends uh{constructor(e,t){super(e,t,new Hg),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]},this.useComparisonMethod=!0}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==ui}getMethod(e){return AI[e]||e}getOutputStructName(){return""}buildFunctionCode(e){let t=e.layout,n=this.flowShaderNode(e),i=[];for(let r of t.inputs)i.push(this.getType(r.type)+" "+r.name);return`${this.getType(t.type)} ${t.name}( ${i.join(", ")} ) {

	${n.vars}

${n.code}
	return ${n.result};

}`}setupPBO(e){let t=e.value;if(t.pbo===void 0){let n=t.array,i=t.count*t.itemSize,{itemSize:s}=t,r=t.array.constructor.name.toLowerCase().includes("int"),c=r?Aa:Ma;s===2?c=r?Ea:Ms:s===3?c=r?Zd:ba:s===4&&(c=r?wa:dn);let a={Float32Array:yt,Uint8Array:zt,Uint16Array:Gi,Uint32Array:ke,Int8Array:Ss,Int16Array:bs,Int32Array:tt,Uint8ClampedArray:zt},l=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(i/s)))),u=Math.ceil(i/s/l);l*u*s<i&&u++;let h=l*u*s,d=new n.constructor(h);d.set(n,0),t.array=d;let f=new qo(t.array,l,u,c,a[t.array.constructor.name]||yt);f.needsUpdate=!0,f.isPBOTexture=!0;let m=new Jt(f,null,null);m.setPrecision("high"),t.pboNode=m,t.pbo=m.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){let{node:t,indexNode:n}=e,i=t.value;if(this.renderer.backend.has(i)){let u=this.renderer.backend.get(i);u.pbo=i.pbo}let s=this.getUniformFromNode(i.pboNode,"texture",this.shaderStage,this.context.label),r=this.getPropertyName(s);this.increaseUsage(n);let c=n.build(this,"uint"),a=this.getDataFromNode(e),l=a.propertyName;if(l===void 0){let u=this.getVarFromNode(e);l=this.getPropertyName(u);let h=this.getDataFromNode(t),d=h.propertySizeName;d===void 0&&(d=l+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${r}, 0 ).x )`,e),h.propertySizeName=d);let{itemSize:f}=i,m="."+ks.join("").slice(0,f),g=`ivec2(${c} % ${d}, ${c} / ${d})`,_=this.generateTextureLoad(null,r,g,null,"0"),x="vec4";i.pbo.type===ke?x="uvec4":i.pbo.type===tt&&(x="ivec4"),this.addLineFlowCode(`${l} = ${x}(${_})${m}`,e),a.propertyName=l}return l}generateTextureLoad(e,t,n,i,s="0"){return i?`texelFetch( ${t}, ivec3( ${n}, ${i} ), ${s} )`:`texelFetch( ${t}, ${n}, ${s} )`}generateTexture(e,t,n,i){return e.isDepthTexture?`texture( ${t}, ${n} ).x`:(i&&(n=`vec3( ${n}, ${i} )`),`texture( ${t}, ${n} )`)}generateTextureLevel(e,t,n,i){return`textureLod( ${t}, ${n}, ${i} )`}generateTextureBias(e,t,n,i){return`texture( ${t}, ${n}, ${i} )`}generateTextureGrad(e,t,n,i){return`textureGrad( ${t}, ${n}, ${i[0]}, ${i[1]} )`}generateTextureCompare(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`texture( ${t}, vec3( ${n}, ${i} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}getVars(e){let t=[],n=this.vars[e];if(n!==void 0)for(let i of n)t.push(`${this.getVar(i.type,i.name,i.count)};`);return t.join(`
	`)}getUniforms(e){let t=this.uniforms[e],n=[],i={};for(let r of t){let c=null,a=!1;if(r.type==="texture"){let u=r.node.value,h="";u.isDataTexture===!0&&(u.type===ke?h="u":u.type===tt&&(h="i")),u.compareFunction?c=`sampler2DShadow ${r.name};`:u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0?c=`${h}sampler2DArray ${r.name};`:c=`${h}sampler2D ${r.name};`}else if(r.type==="cubeTexture")c=`samplerCube ${r.name};`;else if(r.type==="texture3D")c=`sampler3D ${r.name};`;else if(r.type==="buffer"){let u=r.node,h=this.getType(u.bufferType),d=u.bufferCount,f=d>0?d:"";c=`${u.name} {
	${h} ${r.name}[${f}];
};
`}else c=`${this.getVectorType(r.type)} ${this.getPropertyName(r,e)};`,a=!0;let l=r.node.precision;if(l!==null&&(c=EI[l]+" "+c),a){c="	"+c;let u=r.groupNode.name;(i[u]||(i[u]=[])).push(c)}else c="uniform "+c,n.push(c)}let s="";for(let r in i){let c=i[r];s+=this._getGLSLUniformStruct(e+"_"+r,c.join(`
`))+`
`}return s+=n.join(`
`),s}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==tt){let n=e;e.isInterleavedBufferAttribute&&(n=e.data);let i=n.array;i instanceof Uint32Array||i instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){let n=this.getAttributesArray(),i=0;for(let s of n)t+=`layout( location = ${i++} ) in ${s.type} ${s.name};
`}return t}getStructMembers(e){let t=[];for(let n of e.members)t.push(`	${n.type} ${n.name};`);return t.join(`
`)}getStructs(e){let t=[],n=this.structs[e],i=[];for(let s of n)if(s.output)for(let r of s.members)i.push(`layout( location = ${r.index} ) out ${r.type} ${r.name};`);else{let r="struct "+s.name+` {
`;r+=this.getStructMembers(s),r+=`
};
`,t.push(r)}return i.length===0&&i.push("layout( location = 0 ) out vec4 fragColor;"),`
`+i.join(`
`)+`

`+t.join(`
`)}getVaryings(e){let t="",n=this.varyings;if(e==="vertex"||e==="compute")for(let i of n){e==="compute"&&(i.needsInterpolation=!0);let s=this.getType(i.type);if(i.needsInterpolation){let r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r} out ${s} ${i.name};
`}else t+=`${s} ${i.name};
`}else if(e==="fragment"){for(let i of n)if(i.needsInterpolation){let s=this.getType(i.type),r=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${r}in ${s} ${i.name};
`}}for(let i of this.builtins[e])t+=`${i};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((n,i)=>n*i,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,n=this.shaderStage){let i=this.extensions[n]||(this.extensions[n]=new Map);i.has(e)===!1&&i.set(e,{name:e,behavior:t})}getExtensions(e){let t=[];if(e==="vertex"){let i=this.renderer.backend.extensions;this.object.isBatchedMesh&&i.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}let n=this.extensions[e];if(n!==void 0)for(let{name:i,behavior:s}of n.values())t.push(`#extension ${i} : ${s}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=nv[e];if(t===void 0){let n;switch(t=!1,e){case"float32Filterable":n="OES_texture_float_linear";break;case"clipDistance":n="WEBGL_clip_cull_distance";break}if(n!==void 0){let i=this.renderer.backend.extensions;i.has(n)&&(i.get(n),t=!0)}nv[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){let e=this.transforms,t="";for(let n=0;n<e.length;n++){let i=e[n],s=this.getPropertyName(i.attributeNode);t+=`${i.varyingName} = ${s};
	`}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions 
${e.extensions}

// precision
${iv}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// precision
${iv}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

// structs
${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){let e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(let t in e){let n=`// code

`;n+=this.flowCode[t];let i=this.flowNodes[t],s=i[i.length-1];for(let c of i){let a=this.getFlowData(c),l=c.name;l&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${l}
	`),n+=`${a.code}
	`,c===s&&t!=="compute"&&(n+=`// result
	`,t==="vertex"?(n+="gl_Position = ",n+=`${a.result};`):t==="fragment"&&(c.outputNode.isOutputStructNode||(n+="fragColor = ",n+=`${a.result};`)))}let r=e[t];r.extensions=this.getExtensions(t),r.uniforms=this.getUniforms(t),r.attributes=this.getAttributes(t),r.varyings=this.getVaryings(t),r.vars=this.getVars(t),r.structs=this.getStructs(t),r.codes=this.getCodes(t),r.transforms=this.getTransforms(t),r.flow=n}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,n,i=null){let s=super.getUniformFromNode(e,t,n,i),r=this.getDataFromNode(e,n,this.globalCache),c=r.uniformGPU;if(c===void 0){let a=e.groupNode,l=a.name,u=this.getBindGroupArray(l,n);if(t==="texture")c=new _o(s.name,s.node,a),u.push(c);else if(t==="cubeTexture")c=new Th(s.name,s.node,a),u.push(c);else if(t==="texture3D")c=new Sh(s.name,s.node,a),u.push(c);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,s.name=`buffer${e.id}`;let h=new yh(e,a);h.name=e.name,u.push(h),c=h}else{let h=this.uniformGroups[n]||(this.uniformGroups[n]={}),d=h[l];d===void 0&&(d=new vh(n+"_"+l,a),h[l]=d,u.push(d)),c=this.getNodeUniform(s,t),d.addUniform(c)}r.uniformGPU=c}return s}},Wf=null,Kr=null,bh=class{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null}}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){As("WebGPURenderer: Timestamp tracking is disabled.");return}let t=this.timestampQueryPool[e];if(!t){As(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);return}let n=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=n,n}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return Wf=Wf||new H,this.renderer.getDrawingBufferSize(Wf)}setScissorTest(){}getClearColor(){let e=this.renderer;return Kr=Kr||new Ic,e.getClearColor(Kr),Kr.getRGB(Kr,this.renderer.currentColorSpace),Kr}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:mf(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${wr} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}},wI=0,Jg=class{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}},e_=class{constructor(e){this.backend=e}createAttribute(e,t){let n=this.backend,{gl:i}=n,s=e.array,r=e.usage||i.STATIC_DRAW,c=e.isInterleavedBufferAttribute?e.data:e,a=n.get(c),l=a.bufferGPU;l===void 0&&(l=this._createBuffer(i,t,s,r),a.bufferGPU=l,a.bufferType=t,a.version=c.version);let u;if(s instanceof Float32Array)u=i.FLOAT;else if(s instanceof Uint16Array)e.isFloat16BufferAttribute?u=i.HALF_FLOAT:u=i.UNSIGNED_SHORT;else if(s instanceof Int16Array)u=i.SHORT;else if(s instanceof Uint32Array)u=i.UNSIGNED_INT;else if(s instanceof Int32Array)u=i.INT;else if(s instanceof Int8Array)u=i.BYTE;else if(s instanceof Uint8Array)u=i.UNSIGNED_BYTE;else if(s instanceof Uint8ClampedArray)u=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+s);let h={bufferGPU:l,bufferType:t,type:u,byteLength:s.byteLength,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===i.INT||u===i.UNSIGNED_INT||e.gpuType===tt,id:wI++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){let d=this._createBuffer(i,t,s,r);h=new Jg(h,d)}n.set(e,h)}updateAttribute(e){let t=this.backend,{gl:n}=t,i=e.array,s=e.isInterleavedBufferAttribute?e.data:e,r=t.get(s),c=r.bufferType,a=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(n.bindBuffer(c,r.bufferGPU),a.length===0)n.bufferSubData(c,0,i);else{for(let l=0,u=a.length;l<u;l++){let h=a[l];n.bufferSubData(c,h.start*i.BYTES_PER_ELEMENT,i,h.start,h.count)}s.clearUpdateRanges()}n.bindBuffer(c,null),r.version=s.version}destroyAttribute(e){let t=this.backend,{gl:n}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);let i=t.get(e);n.deleteBuffer(i.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){let t=this.backend,{gl:n}=t,i=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:s}=t.get(i),r=e.array,c=r.byteLength;n.bindBuffer(n.COPY_READ_BUFFER,s);let a=n.createBuffer();n.bindBuffer(n.COPY_WRITE_BUFFER,a),n.bufferData(n.COPY_WRITE_BUFFER,c,n.STREAM_READ),n.copyBufferSubData(n.COPY_READ_BUFFER,n.COPY_WRITE_BUFFER,0,0,c),await t.utils._clientWaitAsync();let l=new e.array.constructor(r.length);return n.bindBuffer(n.COPY_WRITE_BUFFER,a),n.getBufferSubData(n.COPY_WRITE_BUFFER,0,l),n.deleteBuffer(a),n.bindBuffer(n.COPY_READ_BUFFER,null),n.bindBuffer(n.COPY_WRITE_BUFFER,null),l.buffer}_createBuffer(e,t,n,i){let s=e.createBuffer();return e.bindBuffer(t,s),e.bufferData(t,n,i),e.bindBuffer(t,null),s}},qf,oc,t_=class{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){let e=this.gl;qf={[Sn]:e.FUNC_ADD,[wl]:e.FUNC_SUBTRACT,[Rl]:e.FUNC_REVERSE_SUBTRACT},oc={[Cl]:e.ZERO,[Nl]:e.ONE,[Pl]:e.SRC_COLOR,[cr]:e.SRC_ALPHA,[Bl]:e.SRC_ALPHA_SATURATE,[Fl]:e.DST_COLOR,[Dl]:e.DST_ALPHA,[Il]:e.ONE_MINUS_SRC_COLOR,[lr]:e.ONE_MINUS_SRC_ALPHA,[Ul]:e.ONE_MINUS_DST_COLOR,[Ll]:e.ONE_MINUS_DST_ALPHA};let t=e.getParameter(e.SCISSOR_BOX),n=e.getParameter(e.VIEWPORT);this.currentScissor=new re().fromArray(t),this.currentViewport=new re().fromArray(n),this._tempVec4=new re}enable(e){let{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){let{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){let{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){let{gl:t}=this;e!==Cd?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Nd?t.cullFace(t.BACK):e===Pd?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){let{currentLineWidth:t,gl:n}=this;e!==t&&(n.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,n,i,s,r,c,a){let{gl:l}=this;if(e===Bi){this.currentBlendingEnabled===!0&&(this.disable(l.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(l.BLEND),this.currentBlendingEnabled=!0),e!==El){if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==Sn||this.currentBlendEquationAlpha!==Sn)&&(l.blendEquation(l.FUNC_ADD),this.currentBlendEquation=Sn,this.currentBlendEquationAlpha=Sn),a)switch(e){case Tn:l.blendFuncSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Cr:l.blendFunc(l.ONE,l.ONE);break;case Nr:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case Pr:l.blendFuncSeparate(l.ZERO,l.SRC_COLOR,l.ZERO,l.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case Tn:l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA);break;case Cr:l.blendFunc(l.SRC_ALPHA,l.ONE);break;case Nr:l.blendFuncSeparate(l.ZERO,l.ONE_MINUS_SRC_COLOR,l.ZERO,l.ONE);break;case Pr:l.blendFunc(l.ZERO,l.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}return}s=s||t,r=r||n,c=c||i,(t!==this.currentBlendEquation||s!==this.currentBlendEquationAlpha)&&(l.blendEquationSeparate(qf[t],qf[s]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=s),(n!==this.currentBlendSrc||i!==this.currentBlendDst||r!==this.currentBlendSrcAlpha||c!==this.currentBlendDstAlpha)&&(l.blendFuncSeparate(oc[n],oc[i],oc[r],oc[c]),this.currentBlendSrc=n,this.currentBlendDst=i,this.currentBlendSrcAlpha=r,this.currentBlendDstAlpha=c),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){let{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){let{gl:t}=this;switch(e){case Ir:t.depthFunc(t.NEVER);break;case Dr:t.depthFunc(t.ALWAYS);break;case Lr:t.depthFunc(t.LESS);break;case Pi:t.depthFunc(t.LEQUAL);break;case Fr:t.depthFunc(t.EQUAL);break;case Ur:t.depthFunc(t.GEQUAL);break;case Br:t.depthFunc(t.GREATER);break;case Or:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}scissor(e,t,n,i){let s=this._tempVec4.set(e,t,n,i);if(this.currentScissor.equals(s)===!1){let{gl:r}=this;r.scissor(s.x,s.y,s.z,s.w),this.currentScissor.copy(s)}}viewport(e,t,n,i){let s=this._tempVec4.set(e,t,n,i);if(this.currentViewport.equals(s)===!1){let{gl:r}=this;r.viewport(s.x,s.y,s.z,s.w),this.currentViewport.copy(s)}}setScissorTest(e){let t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){let{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,n){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==n)&&(this.gl.stencilFunc(e,t,n),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=n)}setStencilOp(e,t,n){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==n)&&(this.gl.stencilOp(e,t,n),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=n)}setMaterial(e,t,n){let{gl:i}=this;e.side===Ui?this.disable(i.CULL_FACE):this.enable(i.CULL_FACE);let s=e.side===St;t&&(s=!s),this.setFlipSided(s),e.blending===Tn&&e.transparent===!1?this.setBlending(Bi):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);let r=e.stencilWrite;if(this.setStencilTest(r),r&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(i.SAMPLE_ALPHA_TO_COVERAGE):this.disable(i.SAMPLE_ALPHA_TO_COVERAGE),n>0&&this.currentClippingPlanes!==n)for(let a=0;a<8;a++)a<n?this.enable(12288+a):this.disable(12288+a)}setPolygonOffset(e,t,n){let{gl:i}=this;e?(this.enable(i.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==n)&&(i.polygonOffset(t,n),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=n)):this.disable(i.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}bindFramebuffer(e,t){let{gl:n,currentBoundFramebuffers:i}=this;return i[e]!==t?(n.bindFramebuffer(e,t),i[e]=t,e===n.DRAW_FRAMEBUFFER&&(i[n.FRAMEBUFFER]=t),e===n.FRAMEBUFFER&&(i[n.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){let{gl:n}=this,i=[],s=!1;if(e.textures!==null){i=this.currentDrawbuffers.get(t),i===void 0&&(i=[],this.currentDrawbuffers.set(t,i));let r=e.textures;if(i.length!==r.length||i[0]!==n.COLOR_ATTACHMENT0){for(let c=0,a=r.length;c<a;c++)i[c]=n.COLOR_ATTACHMENT0+c;i.length=r.length,s=!0}}else i[0]!==n.BACK&&(i[0]=n.BACK,s=!0);s&&n.drawBuffers(i)}activeTexture(e){let{gl:t,currentTextureSlot:n,maxTextures:i}=this;e===void 0&&(e=t.TEXTURE0+i-1),n!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,n){let{gl:i,currentTextureSlot:s,currentBoundTextures:r,maxTextures:c}=this;n===void 0&&(s===null?n=i.TEXTURE0+c-1:n=s);let a=r[n];a===void 0&&(a={type:void 0,texture:void 0},r[n]=a),(a.type!==e||a.texture!==t)&&(s!==n&&(i.activeTexture(n),this.currentTextureSlot=n),i.bindTexture(e,t),a.type=e,a.texture=t)}bindBufferBase(e,t,n){let{gl:i}=this,s=`${e}-${t}`;return this.currentBoundBufferBases[s]!==n?(i.bindBufferBase(e,t,n),this.currentBoundBufferBases[s]=n,!0):!1}unbindTexture(){let{gl:e,currentTextureSlot:t,currentBoundTextures:n}=this,i=n[t];i!==void 0&&i.type!==void 0&&(e.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)}},n_=class{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=ui){let{gl:n,extensions:i}=this,s;if(e===zt)return n.UNSIGNED_BYTE;if(e===qd)return n.UNSIGNED_SHORT_4_4_4_4;if(e===Xd)return n.UNSIGNED_SHORT_5_5_5_1;if(e===Vl)return n.UNSIGNED_INT_5_9_9_9_REV;if(e===Ss)return n.BYTE;if(e===bs)return n.SHORT;if(e===Gi)return n.UNSIGNED_SHORT;if(e===tt)return n.INT;if(e===ke)return n.UNSIGNED_INT;if(e===yt)return n.FLOAT;if(e===bt)return n.HALF_FLOAT;if(e===$d)return n.ALPHA;if(e===ba)return n.RGB;if(e===dn)return n.RGBA;if(e===Yd)return n.LUMINANCE;if(e===Kd)return n.LUMINANCE_ALPHA;if(e===vn)return n.DEPTH_COMPONENT;if(e===ni)return n.DEPTH_STENCIL;if(e===Ma)return n.RED;if(e===Aa)return n.RED_INTEGER;if(e===Ms)return n.RG;if(e===Ea)return n.RG_INTEGER;if(e===wa)return n.RGBA_INTEGER;if(e===Ra||e===Gr||e===zr||e===kr)if(t===K)if(s=i.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(e===Ra)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Gr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===zr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===kr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=i.get("WEBGL_compressed_texture_s3tc"),s!==null){if(e===Ra)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Gr)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===zr)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===kr)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===Gl||e===zl||e===kl||e===Hl)if(s=i.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(e===Gl)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===zl)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===kl)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Hl)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===Wl||e===Ca||e===Na)if(s=i.get("WEBGL_compressed_texture_etc"),s!==null){if(e===Wl||e===Ca)return t===K?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(e===Na)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===Pa||e===Ia||e===Da||e===La||e===Fa||e===Ua||e===Ba||e===Oa||e===Va||e===Ga||e===za||e===ka||e===Ha||e===Wa)if(s=i.get("WEBGL_compressed_texture_astc"),s!==null){if(e===Pa)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Ia)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Da)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===La)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Fa)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Ua)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Ba)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Oa)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Va)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Ga)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===za)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===ka)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===Ha)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Wa)return t===K?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===qa)if(s=i.get("EXT_texture_compression_bptc"),s!==null){if(e===qa)return t===K?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===jd||e===ql||e===Xl||e===$l)if(s=i.get("EXT_texture_compression_rgtc"),s!==null){if(e===qa)return s.COMPRESSED_RED_RGTC1_EXT;if(e===ql)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===Xl)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===$l)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===zi?n.UNSIGNED_INT_24_8:n[e]!==void 0?n[e]:null}_clientWaitAsync(){let{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((n,i)=>{function s(){let r=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(r===e.WAIT_FAILED){e.deleteSync(t),i();return}if(r===e.TIMEOUT_EXPIRED){requestAnimationFrame(s);return}e.deleteSync(t),n()}s()})}},sv=!1,_u,Xf,rv,i_=class{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},sv===!1&&(this._init(),sv=!0)}_init(){let e=this.gl;_u={[Ii]:e.REPEAT,[yn]:e.CLAMP_TO_EDGE,[Di]:e.MIRRORED_REPEAT},Xf={[Xe]:e.NEAREST,[Ol]:e.NEAREST_MIPMAP_NEAREST,[Ts]:e.NEAREST_MIPMAP_LINEAR,[_t]:e.LINEAR,[Sa]:e.LINEAR_MIPMAP_NEAREST,[hn]:e.LINEAR_MIPMAP_LINEAR},rv={[Yl]:e.NEVER,[eu]:e.ALWAYS,[Xa]:e.LESS,[Zl]:e.LEQUAL,[Kl]:e.EQUAL,[Jl]:e.GEQUAL,[jl]:e.GREATER,[Ql]:e.NOTEQUAL}}getGLTextureType(e){let{gl:t}=this,n;return e.isCubeTexture===!0?n=t.TEXTURE_CUBE_MAP:e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?n=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?n=t.TEXTURE_3D:n=t.TEXTURE_2D,n}getInternalFormat(e,t,n,i,s=!1){let{gl:r,extensions:c}=this;if(e!==null){if(r[e]!==void 0)return r[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=t;return t===r.RED&&(n===r.FLOAT&&(a=r.R32F),n===r.HALF_FLOAT&&(a=r.R16F),n===r.UNSIGNED_BYTE&&(a=r.R8),n===r.UNSIGNED_SHORT&&(a=r.R16),n===r.UNSIGNED_INT&&(a=r.R32UI),n===r.BYTE&&(a=r.R8I),n===r.SHORT&&(a=r.R16I),n===r.INT&&(a=r.R32I)),t===r.RED_INTEGER&&(n===r.UNSIGNED_BYTE&&(a=r.R8UI),n===r.UNSIGNED_SHORT&&(a=r.R16UI),n===r.UNSIGNED_INT&&(a=r.R32UI),n===r.BYTE&&(a=r.R8I),n===r.SHORT&&(a=r.R16I),n===r.INT&&(a=r.R32I)),t===r.RG&&(n===r.FLOAT&&(a=r.RG32F),n===r.HALF_FLOAT&&(a=r.RG16F),n===r.UNSIGNED_BYTE&&(a=r.RG8),n===r.UNSIGNED_SHORT&&(a=r.RG16),n===r.UNSIGNED_INT&&(a=r.RG32UI),n===r.BYTE&&(a=r.RG8I),n===r.SHORT&&(a=r.RG16I),n===r.INT&&(a=r.RG32I)),t===r.RG_INTEGER&&(n===r.UNSIGNED_BYTE&&(a=r.RG8UI),n===r.UNSIGNED_SHORT&&(a=r.RG16UI),n===r.UNSIGNED_INT&&(a=r.RG32UI),n===r.BYTE&&(a=r.RG8I),n===r.SHORT&&(a=r.RG16I),n===r.INT&&(a=r.RG32I)),t===r.RGB&&(n===r.FLOAT&&(a=r.RGB32F),n===r.HALF_FLOAT&&(a=r.RGB16F),n===r.UNSIGNED_BYTE&&(a=r.RGB8),n===r.UNSIGNED_SHORT&&(a=r.RGB16),n===r.UNSIGNED_INT&&(a=r.RGB32UI),n===r.BYTE&&(a=r.RGB8I),n===r.SHORT&&(a=r.RGB16I),n===r.INT&&(a=r.RGB32I),n===r.UNSIGNED_BYTE&&(a=i===K&&s===!1?r.SRGB8:r.RGB8),n===r.UNSIGNED_SHORT_5_6_5&&(a=r.RGB565),n===r.UNSIGNED_SHORT_5_5_5_1&&(a=r.RGB5_A1),n===r.UNSIGNED_SHORT_4_4_4_4&&(a=r.RGB4),n===r.UNSIGNED_INT_5_9_9_9_REV&&(a=r.RGB9_E5)),t===r.RGB_INTEGER&&(n===r.UNSIGNED_BYTE&&(a=r.RGB8UI),n===r.UNSIGNED_SHORT&&(a=r.RGB16UI),n===r.UNSIGNED_INT&&(a=r.RGB32UI),n===r.BYTE&&(a=r.RGB8I),n===r.SHORT&&(a=r.RGB16I),n===r.INT&&(a=r.RGB32I)),t===r.RGBA&&(n===r.FLOAT&&(a=r.RGBA32F),n===r.HALF_FLOAT&&(a=r.RGBA16F),n===r.UNSIGNED_BYTE&&(a=r.RGBA8),n===r.UNSIGNED_SHORT&&(a=r.RGBA16),n===r.UNSIGNED_INT&&(a=r.RGBA32UI),n===r.BYTE&&(a=r.RGBA8I),n===r.SHORT&&(a=r.RGBA16I),n===r.INT&&(a=r.RGBA32I),n===r.UNSIGNED_BYTE&&(a=i===K&&s===!1?r.SRGB8_ALPHA8:r.RGBA8),n===r.UNSIGNED_SHORT_4_4_4_4&&(a=r.RGBA4),n===r.UNSIGNED_SHORT_5_5_5_1&&(a=r.RGB5_A1)),t===r.RGBA_INTEGER&&(n===r.UNSIGNED_BYTE&&(a=r.RGBA8UI),n===r.UNSIGNED_SHORT&&(a=r.RGBA16UI),n===r.UNSIGNED_INT&&(a=r.RGBA32UI),n===r.BYTE&&(a=r.RGBA8I),n===r.SHORT&&(a=r.RGBA16I),n===r.INT&&(a=r.RGBA32I)),t===r.DEPTH_COMPONENT&&(n===r.UNSIGNED_SHORT&&(a=r.DEPTH_COMPONENT16),n===r.UNSIGNED_INT&&(a=r.DEPTH_COMPONENT24),n===r.FLOAT&&(a=r.DEPTH_COMPONENT32F)),t===r.DEPTH_STENCIL&&n===r.UNSIGNED_INT_24_8&&(a=r.DEPTH24_STENCIL8),(a===r.R16F||a===r.R32F||a===r.RG16F||a===r.RG32F||a===r.RGBA16F||a===r.RGBA32F)&&c.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){let{gl:n,extensions:i,backend:s}=this;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE),n.texParameteri(e,n.TEXTURE_WRAP_S,_u[t.wrapS]),n.texParameteri(e,n.TEXTURE_WRAP_T,_u[t.wrapT]),(e===n.TEXTURE_3D||e===n.TEXTURE_2D_ARRAY)&&n.texParameteri(e,n.TEXTURE_WRAP_R,_u[t.wrapR]),n.texParameteri(e,n.TEXTURE_MAG_FILTER,Xf[t.magFilter]);let r=t.mipmaps!==void 0&&t.mipmaps.length>0,c=t.minFilter===_t&&r?hn:t.minFilter;if(n.texParameteri(e,n.TEXTURE_MIN_FILTER,Xf[c]),t.compareFunction&&(n.texParameteri(e,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(e,n.TEXTURE_COMPARE_FUNC,rv[t.compareFunction])),i.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Xe||t.minFilter!==Ts&&t.minFilter!==hn||t.type===yt&&i.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){let a=i.get("EXT_texture_filter_anisotropic");n.texParameterf(e,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,s.getMaxAnisotropy()))}}}createDefaultTexture(e){let{gl:t,backend:n,defaultTextures:i}=this,s=this.getGLTextureType(e),r=i[s];r===void 0&&(r=t.createTexture(),n.state.bindTexture(s,r),t.texParameteri(s,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(s,t.TEXTURE_MAG_FILTER,t.NEAREST),i[s]=r),n.set(e,{textureGPU:r,glTextureType:s,isDefault:!0})}createTexture(e,t){let{gl:n,backend:i}=this,{levels:s,width:r,height:c,depth:a}=t,l=i.utils.convert(e.format,e.colorSpace),u=i.utils.convert(e.type),h=this.getInternalFormat(e.internalFormat,l,u,e.colorSpace,e.isVideoTexture),d=n.createTexture(),f=this.getGLTextureType(e);i.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isDataArrayTexture||e.isCompressedArrayTexture?n.texStorage3D(n.TEXTURE_2D_ARRAY,s,h,r,c,a):e.isData3DTexture?n.texStorage3D(n.TEXTURE_3D,s,h,r,c,a):e.isVideoTexture||n.texStorage2D(f,s,h,r,c),i.set(e,{textureGPU:d,glTextureType:f,glFormat:l,glType:u,glInternalFormat:h})}copyBufferToTexture(e,t){let{gl:n,backend:i}=this,{textureGPU:s,glTextureType:r,glFormat:c,glType:a}=i.get(t),{width:l,height:u}=t.source.data;n.bindBuffer(n.PIXEL_UNPACK_BUFFER,e),i.state.bindTexture(r,s),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,!1),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),n.texSubImage2D(r,0,0,0,l,u,c,a,0),n.bindBuffer(n.PIXEL_UNPACK_BUFFER,null),i.state.unbindTexture()}updateTexture(e,t){let{gl:n}=this,{width:i,height:s}=t,{textureGPU:r,glTextureType:c,glFormat:a,glType:l,glInternalFormat:u}=this.backend.get(e);if(e.isRenderTargetTexture||r===void 0)return;let h=d=>d.isDataTexture?d.image.data:typeof HTMLImageElement<"u"&&d instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&d instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&d instanceof ImageBitmap||d instanceof OffscreenCanvas?d:d.data;if(this.backend.state.bindTexture(c,r),this.setTextureParameters(c,e),e.isCompressedTexture){let d=e.mipmaps,f=t.image;for(let m=0;m<d.length;m++){let g=d[m];e.isCompressedArrayTexture?e.format!==n.RGBA?a!==null?n.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,m,0,0,0,g.width,g.height,f.depth,a,g.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texSubImage3D(n.TEXTURE_2D_ARRAY,m,0,0,0,g.width,g.height,f.depth,a,l,g.data):a!==null?n.compressedTexSubImage2D(n.TEXTURE_2D,m,0,0,g.width,g.height,a,g.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){let d=t.images;for(let f=0;f<6;f++){let m=h(d[f]);n.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,0,0,i,s,a,l,m)}}else if(e.isDataArrayTexture){let d=t.image;n.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,d.width,d.height,d.depth,a,l,d.data)}else if(e.isData3DTexture){let d=t.image;n.texSubImage3D(n.TEXTURE_3D,0,0,0,0,d.width,d.height,d.depth,a,l,d.data)}else if(e.isVideoTexture)e.update(),n.texImage2D(c,0,u,a,l,t.image);else{let d=h(t.image);n.texSubImage2D(c,0,0,0,i,s,a,l,d)}}generateMipmaps(e){let{gl:t,backend:n}=this,{textureGPU:i,glTextureType:s}=n.get(e);n.state.bindTexture(s,i),t.generateMipmap(s)}deallocateRenderBuffers(e){let{gl:t,backend:n}=this;if(e){let i=n.get(e);if(i.renderBufferStorageSetup=void 0,i.framebuffers){for(let s in i.framebuffers)t.deleteFramebuffer(i.framebuffers[s]);delete i.framebuffers}if(i.depthRenderbuffer&&(t.deleteRenderbuffer(i.depthRenderbuffer),delete i.depthRenderbuffer),i.stencilRenderbuffer&&(t.deleteRenderbuffer(i.stencilRenderbuffer),delete i.stencilRenderbuffer),i.msaaFrameBuffer&&(t.deleteFramebuffer(i.msaaFrameBuffer),delete i.msaaFrameBuffer),i.msaaRenderbuffers){for(let s=0;s<i.msaaRenderbuffers.length;s++)t.deleteRenderbuffer(i.msaaRenderbuffers[s]);delete i.msaaRenderbuffers}}}destroyTexture(e){let{gl:t,backend:n}=this,{textureGPU:i,renderTarget:s}=n.get(e);this.deallocateRenderBuffers(s),t.deleteTexture(i),n.delete(e)}copyTextureToTexture(e,t,n=null,i=null,s=0){let{gl:r,backend:c}=this,{state:a}=this.backend,{textureGPU:l,glTextureType:u,glType:h,glFormat:d}=c.get(t),f,m,g,_,x,T;n!==null?(f=n.max.x-n.min.x,m=n.max.y-n.min.y,g=n.min.x,_=n.min.y):(f=e.image.width,m=e.image.height,g=0,_=0),i!==null?(x=i.x,T=i.y):(x=0,T=0),a.bindTexture(u,l),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,t.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,t.unpackAlignment);let A=r.getParameter(r.UNPACK_ROW_LENGTH),E=r.getParameter(r.UNPACK_IMAGE_HEIGHT),N=r.getParameter(r.UNPACK_SKIP_PIXELS),R=r.getParameter(r.UNPACK_SKIP_ROWS),P=r.getParameter(r.UNPACK_SKIP_IMAGES),I=e.isCompressedTexture?e.mipmaps[s]:e.image;if(r.pixelStorei(r.UNPACK_ROW_LENGTH,I.width),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,I.height),r.pixelStorei(r.UNPACK_SKIP_PIXELS,g),r.pixelStorei(r.UNPACK_SKIP_ROWS,_),e.isRenderTargetTexture||e.isDepthTexture){let G=c.get(e),z=c.get(t),$=c.get(G.renderTarget),j=c.get(z.renderTarget),oe=$.framebuffers[G.cacheKey],xe=j.framebuffers[z.cacheKey];a.bindFramebuffer(r.READ_FRAMEBUFFER,oe),a.bindFramebuffer(r.DRAW_FRAMEBUFFER,xe);let Ce=r.COLOR_BUFFER_BIT;e.isDepthTexture&&(Ce=r.DEPTH_BUFFER_BIT),r.blitFramebuffer(g,_,f,m,x,T,f,m,Ce,r.NEAREST),a.bindFramebuffer(r.READ_FRAMEBUFFER,null),a.bindFramebuffer(r.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?r.texSubImage2D(r.TEXTURE_2D,s,x,T,f,m,d,h,I.data):e.isCompressedTexture?r.compressedTexSubImage2D(r.TEXTURE_2D,s,x,T,I.width,I.height,d,I.data):r.texSubImage2D(r.TEXTURE_2D,s,x,T,f,m,d,h,I);r.pixelStorei(r.UNPACK_ROW_LENGTH,A),r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,E),r.pixelStorei(r.UNPACK_SKIP_PIXELS,N),r.pixelStorei(r.UNPACK_SKIP_ROWS,R),r.pixelStorei(r.UNPACK_SKIP_IMAGES,P),s===0&&t.generateMipmaps&&r.generateMipmap(r.TEXTURE_2D),a.unbindTexture()}copyFramebufferToTexture(e,t,n){let{gl:i}=this,{state:s}=this.backend,{textureGPU:r}=this.backend.get(e),{x:c,y:a,z:l,w:u}=n,h=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(h){let f=c!==0||a!==0,m,g;if(e.isDepthTexture===!0?(m=i.DEPTH_BUFFER_BIT,g=i.DEPTH_ATTACHMENT,t.stencil&&(m|=i.STENCIL_BUFFER_BIT)):(m=i.COLOR_BUFFER_BIT,g=i.COLOR_ATTACHMENT0),f){let _=this.backend.get(t.renderTarget),x=_.framebuffers[t.getCacheKey()],T=_.msaaFrameBuffer;s.bindFramebuffer(i.DRAW_FRAMEBUFFER,x),s.bindFramebuffer(i.READ_FRAMEBUFFER,T);let A=d-a-u;i.blitFramebuffer(c,A,c+l,A+u,c,A,c+l,A+u,m,i.NEAREST),s.bindFramebuffer(i.READ_FRAMEBUFFER,x),s.bindTexture(i.TEXTURE_2D,r),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,c,A,l,u),s.unbindTexture()}else{let _=i.createFramebuffer();s.bindFramebuffer(i.DRAW_FRAMEBUFFER,_),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,g,i.TEXTURE_2D,r,0),i.blitFramebuffer(0,0,l,u,0,0,l,u,m,i.NEAREST),i.deleteFramebuffer(_)}}else s.bindTexture(i.TEXTURE_2D,r),i.copyTexSubImage2D(i.TEXTURE_2D,0,0,0,c,d-u-a,l,u),s.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,n,i=!1){let{gl:s}=this,r=t.renderTarget,{depthTexture:c,depthBuffer:a,stencilBuffer:l,width:u,height:h}=r;if(s.bindRenderbuffer(s.RENDERBUFFER,e),a&&!l){let d=s.DEPTH_COMPONENT24;i===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(s.RENDERBUFFER,r.samples,d,u,h):n>0?(c&&c.isDepthTexture&&c.type===s.FLOAT&&(d=s.DEPTH_COMPONENT32F),s.renderbufferStorageMultisample(s.RENDERBUFFER,n,d,u,h)):s.renderbufferStorage(s.RENDERBUFFER,d,u,h),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,e)}else a&&l&&(n>0?s.renderbufferStorageMultisample(s.RENDERBUFFER,n,s.DEPTH24_STENCIL8,u,h):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,u,h),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,n,i,s,r){let{backend:c,gl:a}=this,{textureGPU:l,glFormat:u,glType:h}=this.backend.get(e),d=a.createFramebuffer();a.bindFramebuffer(a.READ_FRAMEBUFFER,d);let f=e.isCubeTexture?a.TEXTURE_CUBE_MAP_POSITIVE_X+r:a.TEXTURE_2D;a.framebufferTexture2D(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,f,l,0);let m=this._getTypedArrayType(h),g=this._getBytesPerTexel(h,u),x=i*s*g,T=a.createBuffer();a.bindBuffer(a.PIXEL_PACK_BUFFER,T),a.bufferData(a.PIXEL_PACK_BUFFER,x,a.STREAM_READ),a.readPixels(t,n,i,s,u,h,0),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),await c.utils._clientWaitAsync();let A=new m(x/m.BYTES_PER_ELEMENT);return a.bindBuffer(a.PIXEL_PACK_BUFFER,T),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,A),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),a.deleteFramebuffer(d),A}_getTypedArrayType(e){let{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){let{gl:n}=this,i=0;if(e===n.UNSIGNED_BYTE&&(i=1),(e===n.UNSIGNED_SHORT_4_4_4_4||e===n.UNSIGNED_SHORT_5_5_5_1||e===n.UNSIGNED_SHORT_5_6_5||e===n.UNSIGNED_SHORT||e===n.HALF_FLOAT)&&(i=2),(e===n.UNSIGNED_INT||e===n.FLOAT)&&(i=4),t===n.RGBA)return i*4;if(t===n.RGB)return i*3;if(t===n.ALPHA)return i}},s_=class{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}},r_=class{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;let e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){let n=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}},ov={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"},o_=class{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){let{gl:n,mode:i,object:s,type:r,info:c,index:a}=this;a!==0?n.drawElements(i,t,r,e):n.drawArrays(i,e,t),c.update(s,t,i,1)}renderInstances(e,t,n){let{gl:i,mode:s,type:r,index:c,object:a,info:l}=this;n!==0&&(c!==0?i.drawElementsInstanced(s,t,r,e,n):i.drawArraysInstanced(s,e,t,n),l.update(a,t,s,n))}renderMultiDraw(e,t,n){let{extensions:i,mode:s,object:r,info:c}=this;if(n===0)return;let a=i.get("WEBGL_multi_draw");if(a===null)for(let l=0;l<n;l++)this.render(e[l],t[l]);else{this.index!==0?a.multiDrawElementsWEBGL(s,t,0,this.type,e,0,n):a.multiDrawArraysWEBGL(s,e,0,t,0,n);let l=0;for(let u=0;u<n;u++)l+=t[u];c.update(r,l,s,1)}}renderMultiDrawInstances(e,t,n,i){let{extensions:s,mode:r,object:c,info:a}=this;if(n===0)return;let l=s.get("WEBGL_multi_draw");if(l===null)for(let u=0;u<n;u++)this.renderInstances(e[u],t[u],i[u]);else{this.index!==0?l.multiDrawElementsInstancedWEBGL(r,t,0,this.type,e,0,i,0,n):l.multiDrawArraysInstancedWEBGL(r,e,0,t,0,i,0,n);let u=0;for(let h=0;h<n;h++)u+=t[h]*i[h];a.update(c,u,r,1)}}},Mh=class{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}},a_=class extends Mh{constructor(e,t,n=2048){if(super(n),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let i=0;i<this.maxQueries;i++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return As(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;let t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e.id,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;let t=this.queryOffsets.get(e.id);if(t==null||this.activeQuery!==null)return;let n=this.queries[t];if(n)try{this.queryStates.get(t)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,n),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(i){console.error("Error in beginQuery:",i),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;let t=this.queryOffsets.get(e.id);if(t!=null&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(n){console.error("Error in endQuery:",n),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{let e=[];for(let[i,s]of this.queryStates)if(s==="ended"){let r=this.queries[i];e.push(this.resolveQuery(r))}if(e.length===0)return this.lastValue;let n=(await Promise.all(e)).reduce((i,s)=>i+s,0);return this.lastValue=n,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,n}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed){t(this.lastValue);return}let n,i=!1,s=()=>{n&&(clearTimeout(n),n=null)},r=a=>{i||(i=!0,s(),t(a))},c=()=>{if(this.isDisposed){r(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){r(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){n=setTimeout(c,1);return}let u=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(u)/1e6)}catch(a){console.error("Error checking query:",a),t(this.lastValue)}};c()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(let e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}},Ah=class extends bh{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this.trackTimestamp=e.trackTimestamp===!0,this._currentContext=null,this._knownBindings=new WeakSet,this._xrFamebuffer=null}init(e){super.init(e);let t=this.parameters,n={antialias:!1,alpha:!0,depth:!1,stencil:!1},i=t.context!==void 0?t.context:e.domElement.getContext("webgl2",n);function s(r){r.preventDefault();let c={api:"WebGL",message:r.statusMessage||"Unknown reason",reason:null,originalEvent:r};e.onDeviceLost(c)}this._onContextLost=s,e.domElement.addEventListener("webglcontextlost",s,!1),this.gl=i,this.extensions=new s_(this),this.capabilities=new r_(this),this.attributeUtils=new e_(this),this.textureUtils=new i_(this),this.bufferRenderer=new o_(this),this.state=new t_(this),this.utils=new n_(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return gt}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFamebuffer=e}setXRRenderTargetTextures(e,t,n=null){let i=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:i.RGBA8}),n!==null){let s=e.stencilBuffer?i.DEPTH24_STENCIL8:i.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:n,glInternalFormat:s}),e.autoAllocateDepthBuffer=!1,this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided")}}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;let t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t]||(this.timestampQueryPool[t]=new a_(this.gl,t,2048));let n=this.timestampQueryPool[t];n.allocateQueriesForContext(e)!==null&&n.beginQuery(e)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;let t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t].endQuery(e)}getContext(){return this.gl}beginRender(e){let{state:t,gl:n}=this,i=this.get(e);if(this.initTimestampQuery(e),i.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,n.drawingBufferWidth,n.drawingBufferHeight),e.scissor){let{x:r,y:c,width:a,height:l}=e.scissorValue;t.scissor(r,e.height-l-c,a,l)}let s=e.occlusionQueryCount;s>0&&(i.currentOcclusionQueries=i.occlusionQueries,i.currentOcclusionQueryObjects=i.occlusionQueryObjects,i.lastOcclusionObject=null,i.occlusionQueries=new Array(s),i.occlusionQueryObjects=new Array(s),i.occlusionQueryIndex=0)}finishRender(e){let{gl:t,state:n}=this,i=this.get(e),s=i.previousContext,r=e.occlusionQueryCount;r>0&&(r>i.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));let c=e.textures;if(c!==null)for(let a=0;a<c.length;a++){let l=c[a];l.generateMipmaps&&this.generateMipmaps(l)}if(this._currentContext=s,e.textures!==null&&e.renderTarget){let a=this.get(e.renderTarget),{samples:l}=e.renderTarget;if(l>0&&this._useMultisampledRTT(e.renderTarget)===!1){let u=a.framebuffers[e.getCacheKey()],h=t.COLOR_BUFFER_BIT,d=a.msaaFrameBuffer,f=e.textures;n.bindFramebuffer(t.READ_FRAMEBUFFER,d),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u);for(let m=0;m<f.length;m++)if(e.scissor){let{x:g,y:_,width:x,height:T}=e.scissorValue,A=e.height-T-_;t.blitFramebuffer(g,A,g+x,A+T,g,A,g+x,A+T,h,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,a.invalidationArray,g,A,x,T)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,h,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,a.invalidationArray)}}s!==null&&(this._setFramebuffer(s),s.viewport?this.updateViewport(s):n.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){let t=this.get(e),{currentOcclusionQueries:n,currentOcclusionQueryObjects:i}=t;if(n&&i){let s=new WeakSet,{gl:r}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;let c=()=>{let a=0;for(let l=0;l<n.length;l++){let u=n[l];u!==null&&r.getQueryParameter(u,r.QUERY_RESULT_AVAILABLE)&&(r.getQueryParameter(u,r.QUERY_RESULT)===0&&s.add(i[l]),n[l]=null,r.deleteQuery(u),a++)}a<n.length?requestAnimationFrame(c):t.occluded=s};c()}}isOccluded(e,t){let n=this.get(e);return n.occluded&&n.occluded.has(t)}updateViewport(e){let{state:t}=this,{x:n,y:i,width:s,height:r}=e.viewportValue;t.viewport(n,e.height-r-i,s,r)}setScissorTest(e){this.state.setScissorTest(e)}clear(e,t,n,i=null,s=!0){let{gl:r}=this;if(i===null){let a=this.getClearColor();a.r*=a.a,a.g*=a.a,a.b*=a.a,i={textures:null,clearColorValue:a}}let c=0;if(e&&(c|=r.COLOR_BUFFER_BIT),t&&(c|=r.DEPTH_BUFFER_BIT),n&&(c|=r.STENCIL_BUFFER_BIT),c!==0){let a;if(i.clearColorValue?a=i.clearColorValue:(a=this.getClearColor(),a.r*=a.a,a.g*=a.a,a.b*=a.a),t&&this.state.setDepthMask(!0),i.textures===null)r.clearColor(a.r,a.g,a.b,a.a),r.clear(c);else{if(s&&this._setFramebuffer(i),e)for(let l=0;l<i.textures.length;l++)r.clearBufferfv(r.COLOR,l,[a.r,a.g,a.b,a.a]);t&&n?r.clearBufferfi(r.DEPTH_STENCIL,0,1,0):t?r.clearBufferfv(r.DEPTH,0,[1]):n&&r.clearBufferiv(r.STENCIL,0,[0])}}}beginCompute(e){let{state:t,gl:n}=this;t.bindFramebuffer(n.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,n,i){let{state:s,gl:r}=this;this.discard===!1&&(r.enable(r.RASTERIZER_DISCARD),this.discard=!0);let{programGPU:c,transformBuffers:a,attributes:l}=this.get(i),u=this._getVaoKey(null,l),h=this.vaoCache[u];h===void 0?this._createVao(null,l):r.bindVertexArray(h),s.useProgram(c),this._bindUniforms(n);let d=this._getTransformFeedback(a);r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,d),r.beginTransformFeedback(r.POINTS),l[0].isStorageInstancedBufferAttribute?r.drawArraysInstanced(r.POINTS,0,1,t.count):r.drawArrays(r.POINTS,0,t.count),r.endTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null);for(let f=0;f<a.length;f++){let m=a[f];m.pbo&&this.textureUtils.copyBufferToTexture(m.transformBuffer,m.pbo),m.switchBuffers()}}finishCompute(e){let t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){let{object:t,pipeline:n,material:i,context:s,hardwareClippingPlanes:r}=e,{programGPU:c}=this.get(n),{gl:a,state:l}=this,u=this.get(s),h=e.getDrawParameters();if(h===null)return;this._bindUniforms(e.getBindings());let d=t.isMesh&&t.matrixWorld.determinant()<0;l.setMaterial(i,d,r),l.useProgram(c);let f=this.get(e),m=f.staticVao;if(m===void 0||f.geometryId!==e.geometry.id){let R=this._getVaoKey(e.getIndex(),e.getAttributes());if(m=this.vaoCache[R],m===void 0){let P;({vaoGPU:m,staticVao:P}=this._createVao(e.getIndex(),e.getAttributes())),P&&(f.staticVao=m,f.geometryId=e.geometry.id)}}a.bindVertexArray(m);let g=e.getIndex(),_=u.lastOcclusionObject;if(_!==t&&_!==void 0){if(_!==null&&_.occlusionTest===!0&&(a.endQuery(a.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),t.occlusionTest===!0){let R=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,R),u.occlusionQueries[u.occlusionQueryIndex]=R,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}let x=this.bufferRenderer;t.isPoints?x.mode=a.POINTS:t.isLineSegments?x.mode=a.LINES:t.isLine?x.mode=a.LINE_STRIP:t.isLineLoop?x.mode=a.LINE_LOOP:i.wireframe===!0?(l.setLineWidth(i.wireframeLinewidth*this.renderer.getPixelRatio()),x.mode=a.LINES):x.mode=a.TRIANGLES;let{vertexCount:T,instanceCount:A}=h,{firstVertex:E}=h;if(x.object=t,g!==null){E*=g.array.BYTES_PER_ELEMENT;let R=this.get(g);x.index=g.count,x.type=R.type}else x.index=0;let N=()=>{t.isBatchedMesh?t._multiDrawInstances!==null?x.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?x.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):As("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):A>1?x.renderInstances(E,T,A):x.render(E,T)};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){let R=this.get(e.camera),P=e.camera.cameras,I=e.getBindingGroup("cameraIndex").bindings[0];if(R.indexesGPU===void 0||R.indexesGPU.length!==P.length){let $=new Uint32Array([0,0,0,0]),j=[];for(let oe=0,xe=P.length;oe<xe;oe++){let Ce=a.createBuffer();$[0]=oe,a.bindBuffer(a.UNIFORM_BUFFER,Ce),a.bufferData(a.UNIFORM_BUFFER,$,a.STATIC_DRAW),j.push(Ce)}R.indexesGPU=j}let G=this.get(I),z=this.renderer.getPixelRatio();for(let $=0,j=P.length;$<j;$++){let oe=P[$];if(t.layers.test(oe.layers)){let xe=oe.viewport,Ce=xe.x*z,Si=xe.y*z,qn=xe.width*z,rn=xe.height*z;l.viewport(Math.floor(Ce),Math.floor(e.context.height-rn-Si),Math.floor(qn),Math.floor(rn)),l.bindBufferBase(a.UNIFORM_BUFFER,G.index,R.indexesGPU[$]),N()}}}else N();a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,n,i,s,r){return this.textureUtils.copyTextureToBuffer(e,t,n,i,s,r)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new Qg(e,t)}createProgram(e){let t=this.gl,{stage:n,code:i}=e,s=n==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(s,i),t.compileShader(s),this.set(e,{shaderGPU:s})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){let n=this.gl,i=e.pipeline,{fragmentProgram:s,vertexProgram:r}=i,c=n.createProgram(),a=this.get(s).shaderGPU,l=this.get(r).shaderGPU;if(n.attachShader(c,a),n.attachShader(c,l),n.linkProgram(c),this.set(i,{programGPU:c,fragmentShader:a,vertexShader:l}),t!==null&&this.parallel){let u=new Promise(h=>{let d=this.parallel,f=()=>{n.getProgramParameter(c,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,i),h()):requestAnimationFrame(f)};f()});t.push(u);return}this._completeCompile(e,i)}_handleSource(e,t){let n=e.split(`
`),i=[],s=Math.max(t-6,0),r=Math.min(t+6,n.length);for(let c=s;c<r;c++){let a=c+1;i.push(`${a===t?">":" "} ${a}: ${n[c]}`)}return i.join(`
`)}_getShaderErrors(e,t,n){let i=e.getShaderParameter(t,e.COMPILE_STATUS),s=e.getShaderInfoLog(t).trim();if(i&&s==="")return"";let r=/ERROR: 0:(\d+)/.exec(s);if(r){let c=parseInt(r[1]);return n.toUpperCase()+`

`+s+`

`+this._handleSource(e.getShaderSource(t),c)}else return s}_logProgramError(e,t,n){if(this.renderer.debug.checkShaderErrors){let i=this.gl,s=i.getProgramInfoLog(e).trim();if(i.getProgramParameter(e,i.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(i,e,n,t);else{let r=this._getShaderErrors(i,n,"vertex"),c=this._getShaderErrors(i,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(e,i.VALIDATE_STATUS)+`

Program Info Log: `+s+`
`+r+`
`+c)}else s!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",s)}}_completeCompile(e,t){let{state:n,gl:i}=this,s=this.get(t),{programGPU:r,fragmentShader:c,vertexShader:a}=s;i.getProgramParameter(r,i.LINK_STATUS)===!1&&this._logProgramError(r,c,a),n.useProgram(r);let l=e.getBindings();this._setupBindings(l,r),this.set(t,{programGPU:r})}createComputePipeline(e,t){let{state:n,gl:i}=this,s={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(s);let{computeProgram:r}=e,c=i.createProgram(),a=this.get(s).shaderGPU,l=this.get(r).shaderGPU,u=r.transforms,h=[],d=[];for(let _=0;_<u.length;_++){let x=u[_];h.push(x.varyingName),d.push(x.attributeNode)}i.attachShader(c,a),i.attachShader(c,l),i.transformFeedbackVaryings(c,h,i.SEPARATE_ATTRIBS),i.linkProgram(c),i.getProgramParameter(c,i.LINK_STATUS)===!1&&this._logProgramError(c,a,l),n.useProgram(c),this._setupBindings(t,c);let f=r.attributes,m=[],g=[];for(let _=0;_<f.length;_++){let x=f[_].node.attribute;m.push(x),this.has(x)||this.attributeUtils.createAttribute(x,i.ARRAY_BUFFER)}for(let _=0;_<d.length;_++){let x=d[_].attribute;this.has(x)||this.attributeUtils.createAttribute(x,i.ARRAY_BUFFER);let T=this.get(x);g.push(T)}this.set(e,{programGPU:c,transformBuffers:g,attributes:m})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let n=0,i=0;for(let s of t){this.set(s,{textures:i,uniformBuffers:n});for(let r of s.bindings)r.isUniformBuffer&&n++,r.isSampledTexture&&i++}}this.updateBindings(e,t)}updateBindings(e){let{gl:t}=this,n=this.get(e),i=n.uniformBuffers,s=n.textures;for(let r of e.bindings)if(r.isUniformsGroup||r.isUniformBuffer){let c=r.buffer,a=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,a),t.bufferData(t.UNIFORM_BUFFER,c,t.DYNAMIC_DRAW),this.set(r,{index:i++,bufferGPU:a})}else if(r.isSampledTexture){let{textureGPU:c,glTextureType:a}=this.get(r.texture);this.set(r,{index:s++,textureGPU:c,glTextureType:a})}}updateBinding(e){let t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){let i=this.get(e).bufferGPU,s=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,s,t.DYNAMIC_DRAW)}}createIndexAttribute(e){let t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;let t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;let t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){let t=Object.keys(ov).filter(i=>ov[i]===e),n=this.extensions;for(let i=0;i<t.length;i++)if(n.has(t[i]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,n=null,i=null,s=0){this.textureUtils.copyTextureToTexture(e,t,n,i,s)}copyFramebufferToTexture(e,t,n){this.textureUtils.copyFramebufferToTexture(e,t,n)}_setFramebuffer(e){let{gl:t,state:n}=this,i=null;if(e.textures!==null){let s=e.renderTarget,r=this.get(s),{samples:c,depthBuffer:a,stencilBuffer:l}=s,u=s.isWebGLCubeRenderTarget===!0,h=s.isRenderTarget3D===!0,d=s.isRenderTargetArray===!0,f=s.isXRRenderTarget===!0,m=f===!0&&s.hasExternalTextures===!0,g=r.msaaFrameBuffer,_=r.depthRenderbuffer,x=this.extensions.get("WEBGL_multisampled_render_to_texture"),T=this._useMultisampledRTT(s),A=vS(e),E;if(u?(r.cubeFramebuffers||(r.cubeFramebuffers={}),E=r.cubeFramebuffers[A]):f&&m===!1?E=this._xrFamebuffer:(r.framebuffers||(r.framebuffers={}),E=r.framebuffers[A]),E===void 0){E=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,E);let N=e.textures;if(u){r.cubeFramebuffers[A]=E;let{textureGPU:R}=this.get(N[0]),P=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+P,R,0)}else{r.framebuffers[A]=E;for(let R=0;R<N.length;R++){let P=N[R],I=this.get(P);I.renderTarget=e.renderTarget,I.cacheKey=A;let G=t.COLOR_ATTACHMENT0+R;if(h||d){let z=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,G,I.textureGPU,0,z)}else T?x.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,G,t.TEXTURE_2D,I.textureGPU,0,c):t.framebufferTexture2D(t.FRAMEBUFFER,G,t.TEXTURE_2D,I.textureGPU,0)}n.drawBuffers(e,E)}if(s.isXRRenderTarget&&s.autoAllocateDepthBuffer===!0){let R=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(R,e,0,T),r.xrDepthRenderbuffer=R}else if(e.depthTexture!==null){let R=this.get(e.depthTexture),P=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;R.renderTarget=e.renderTarget,R.cacheKey=A,T?x.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,P,t.TEXTURE_2D,R.textureGPU,0,c):t.framebufferTexture2D(t.FRAMEBUFFER,P,t.TEXTURE_2D,R.textureGPU,0)}}else if(f&&m){n.bindFramebuffer(t.FRAMEBUFFER,E);let N=this.get(e.textures[0]);T?x.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,N.textureGPU,0,c):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,N.textureGPU,0);let R=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(s.autoAllocateDepthBuffer===!0){let P=r.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,P),t.framebufferRenderbuffer(t.FRAMEBUFFER,R,t.RENDERBUFFER,P)}else{let P=this.get(e.depthTexture);T?x.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,R,t.TEXTURE_2D,P.textureGPU,0,c):t.framebufferTexture2D(t.FRAMEBUFFER,R,t.TEXTURE_2D,P.textureGPU,0)}}if(c>0&&T===!1){if(g===void 0){let N=[];g=t.createFramebuffer(),n.bindFramebuffer(t.FRAMEBUFFER,g);let R=[],P=e.textures;for(let I=0;I<P.length;I++){if(R[I]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,R[I]),N.push(t.COLOR_ATTACHMENT0+I),a){let $=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;N.push($)}let G=e.textures[I],z=this.get(G);t.renderbufferStorageMultisample(t.RENDERBUFFER,c,z.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+I,t.RENDERBUFFER,R[I])}if(r.msaaFrameBuffer=g,r.msaaRenderbuffers=R,_===void 0){_=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(_,e,c),r.depthRenderbuffer=_;let I=l?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;N.push(I)}r.invalidationArray=N}i=r.msaaFrameBuffer}else i=E}n.bindFramebuffer(t.FRAMEBUFFER,i)}_getVaoKey(e,t){let n="";if(e!==null){let i=this.get(e);n+=":"+i.id}for(let i=0;i<t.length;i++){let s=this.get(t[i]);n+=":"+s.id}return n}_createVao(e,t){let{gl:n}=this,i=n.createVertexArray(),s="",r=!0;if(n.bindVertexArray(i),e!==null){let c=this.get(e);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,c.bufferGPU),s+=":"+c.id}for(let c=0;c<t.length;c++){let a=t[c],l=this.get(a);s+=":"+l.id,n.bindBuffer(n.ARRAY_BUFFER,l.bufferGPU),n.enableVertexAttribArray(c),(a.isStorageBufferAttribute||a.isStorageInstancedBufferAttribute)&&(r=!1);let u,h;a.isInterleavedBufferAttribute===!0?(u=a.data.stride*l.bytesPerElement,h=a.offset*l.bytesPerElement):(u=0,h=0),l.isInteger?n.vertexAttribIPointer(c,a.itemSize,l.type,u,h):n.vertexAttribPointer(c,a.itemSize,l.type,a.normalized,u,h),a.isInstancedBufferAttribute&&!a.isInterleavedBufferAttribute?n.vertexAttribDivisor(c,a.meshPerAttribute):a.isInterleavedBufferAttribute&&a.data.isInstancedInterleavedBuffer&&n.vertexAttribDivisor(c,a.data.meshPerAttribute)}return n.bindBuffer(n.ARRAY_BUFFER,null),this.vaoCache[s]=i,{vaoGPU:i,staticVao:r}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let n=this.transformFeedbackCache[t];if(n!==void 0)return n;let{gl:i}=this;n=i.createTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,n);for(let s=0;s<e.length;s++){let r=e[s];i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,s,r.transformBuffer)}return i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=n,n}_setupBindings(e,t){let n=this.gl;for(let i of e)for(let s of i.bindings){let c=this.get(s).index;if(s.isUniformsGroup||s.isUniformBuffer){let a=n.getUniformBlockIndex(t,s.name);n.uniformBlockBinding(t,a,c)}else if(s.isSampledTexture){let a=n.getUniformLocation(t,s.name);n.uniform1i(a,c)}}}_bindUniforms(e){let{gl:t,state:n}=this;for(let i of e)for(let s of i.bindings){let r=this.get(s),c=r.index;s.isUniformsGroup||s.isUniformBuffer?n.bindBufferBase(t.UNIFORM_BUFFER,c,r.bufferGPU):s.isSampledTexture&&n.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+c)}}_useMultisampledRTT(e){return e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e.autoAllocateDepthBuffer!==!1}dispose(){let e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}},io={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},nt={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},lt={Store:"store",Discard:"discard"},Fe={Load:"load",Clear:"clear"},$f={CCW:"ccw",CW:"cw"},Yf={None:"none",Front:"front",Back:"back"},xo={Uint16:"uint16",Uint32:"uint32"},S={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Kf={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},Ds={Linear:"linear",Nearest:"nearest"},te={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDstColor:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},Ns={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},av={None:0,Red:1,Green:2,Blue:4,Alpha:8,All:15},Wi={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},Zf={Uniform:"uniform",Storage:"storage",ReadOnlyStorage:"read-only-storage"},jf={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},Zr={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},cv={OneD:"1d",TwoD:"2d",ThreeD:"3d"},At={OneD:"1d",TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",CubeArray:"cube-array",ThreeD:"3d"},RI={All:"all",StencilOnly:"stencil-only",DepthOnly:"depth-only"},xu={Vertex:"vertex",Instance:"instance"},c_={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"},l_=class extends Vc{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}},u_=class extends l_{constructor(e,t,n){super(e,t?t.value:null),this.textureNode=t,this.groupNode=n}update(){this.texture=this.textureNode.value}},h_=class extends _h{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}},CI=0,d_=class extends h_{constructor(e,t){super("StorageBuffer_"+CI++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:ut.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}},f_=class extends On{constructor(e){super(),this.device=e;let t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:Ds.Linear}),this.flipYSampler=e.createSampler({minFilter:Ds.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:n}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:i})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:io.TriangleStrip,stripIndexFormat:xo.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:io.TriangleStrip,stripIndexFormat:xo.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,n=0){let i=t.format,{width:s,height:r}=t.size,c=this.getTransferPipeline(i),a=this.getFlipYPipeline(i),l=this.device.createTexture({size:{width:s,height:r,depthOrArrayLayers:1},format:i,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),u=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:At.TwoD,baseArrayLayer:n}),h=l.createView({baseMipLevel:0,mipLevelCount:1,dimension:At.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(m,g,_)=>{let x=m.getBindGroupLayout(0),T=this.device.createBindGroup({layout:x,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:g}]}),A=d.beginRenderPass({colorAttachments:[{view:_,loadOp:Fe.Clear,storeOp:lt.Store,clearValue:[0,0,0,0]}]});A.setPipeline(m),A.setBindGroup(0,T),A.draw(4,1,0,0),A.end()};f(c,u,h),f(a,h,u),this.device.queue.submit([d.finish()]),l.destroy()}generateMipmaps(e,t,n=0){let i=this.get(e);i.useCount===void 0&&(i.useCount=0,i.layers=[]);let s=i.layers[n]||this._mipmapCreateBundles(e,t,n),r=this.device.createCommandEncoder({});this._mipmapRunBundles(r,s),this.device.queue.submit([r.finish()]),i.useCount!==0&&(i.layers[n]=s),i.useCount++}_mipmapCreateBundles(e,t,n){let i=this.getTransferPipeline(t.format),s=i.getBindGroupLayout(0),r=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:At.TwoD,baseArrayLayer:n}),c=[];for(let a=1;a<t.mipLevelCount;a++){let l=this.device.createBindGroup({layout:s,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:r}]}),u=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:At.TwoD,baseArrayLayer:n}),h={colorAttachments:[{view:u,loadOp:Fe.Clear,storeOp:lt.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(i),d.setBindGroup(0,l),d.draw(4,1,0,0),c.push({renderBundles:[d.finish()],passDescriptor:h}),r=u}return c}_mipmapRunBundles(e,t){let n=t.length;for(let i=0;i<n;i++){let s=t[i],r=e.beginRenderPass(s.passDescriptor);r.executeBundles(s.renderBundles),r.end()}}},NI={[Yl]:"never",[Xa]:"less",[Kl]:"equal",[Zl]:"less-equal",[jl]:"greater",[Jl]:"greater-equal",[eu]:"always",[Ql]:"not-equal"},PI=[0,1,3,2,4,5],p_=class{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Yt,this.depthTexture.name="depthBuffer"}createSampler(e){let t=this.backend,n=t.device,i=t.get(e),s={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};s.magFilter===Ds.Linear&&s.minFilter===Ds.Linear&&s.mipmapFilter===Ds.Linear&&(s.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(s.compare=NI[e.compareFunction]),i.sampler=n.createSampler(s)}createDefaultTexture(e){let t,n=m_(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(n):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(n),this.backend.get(e).texture=t}createTexture(e,t={}){let n=this.backend,i=n.get(e);if(i.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);let{width:s,height:r,depth:c,levels:a}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());let l=this._getDimension(e),u=e.internalFormat||t.format||m_(e,n.device);i.format=u;let{samples:h,primarySamples:d,isMSAA:f}=n.utils.getTextureSampleData(e),m=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(m|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(m|=GPUTextureUsage.RENDER_ATTACHMENT);let g={label:e.name,size:{width:s,height:r,depthOrArrayLayers:c},mipLevelCount:a,sampleCount:d,dimension:l,format:u,usage:m};if(e.isVideoTexture){let _=e.source.data,x=new VideoFrame(_);g.size.width=x.displayWidth,g.size.height=x.displayHeight,x.close(),i.externalTexture=_}else{if(u===void 0)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);i.texture=n.device.createTexture(g)}if(f){let _=Object.assign({},g);_.label=_.label+"-msaa",_.sampleCount=h,i.msaaTexture=n.device.createTexture(_)}i.initialized=!0,i.textureDescriptorGPU=g}destroyTexture(e){let t=this.backend,n=t.get(e);n.texture!==void 0&&n.texture.destroy(),n.msaaTexture!==void 0&&n.msaaTexture.destroy(),t.delete(e)}destroySampler(e){let n=this.backend.get(e);delete n.sampler}generateMipmaps(e){let t=this.backend.get(e);if(e.isCubeTexture)for(let n=0;n<6;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n);else{let n=e.image.depth||1;for(let i=0;i<n;i++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,i)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();let e=this.backend,{width:t,height:n}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:n,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){let n=this.backend,{width:i,height:s}=n.getDrawingBufferSize(),r=this.depthTexture,c=n.get(r).texture,a,l;if(t?(a=ni,l=zi):e&&(a=vn,l=ke),c!==void 0){if(r.image.width===i&&r.image.height===s&&r.format===a&&r.type===l)return c;this.destroyTexture(r)}return r.name="depthBuffer",r.format=a,r.type=l,r.image.width=i,r.image.height=s,this.createTexture(r,{width:i,height:s}),n.get(r).texture}updateTexture(e,t){let n=this.backend.get(e),{textureDescriptorGPU:i}=n;if(!(e.isRenderTargetTexture||i===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,n.texture,i,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let s=0;s<t.image.depth;s++)this._copyBufferToTexture(t.image,n.texture,i,s,e.flipY,s);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,n.texture,i);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,n.texture,i,e.flipY);else if(e.isVideoTexture){let s=e.source.data;n.externalTexture=s}else this._copyImageToTexture(t.image,n.texture,i,0,e.flipY);n.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,n,i,s,r){let c=this.backend.device,a=this.backend.get(e),l=a.texture,u=a.textureDescriptorGPU.format,h=this._getBytesPerTexel(u),d=i*h;d=Math.ceil(d/256)*256;let f=c.createBuffer({size:i*s*h,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),m=c.createCommandEncoder();m.copyTextureToBuffer({texture:l,origin:{x:t,y:n,z:r}},{buffer:f,bytesPerRow:d},{width:i,height:s});let g=this._getTypedArrayType(u);c.queue.submit([m.finish()]),await f.mapAsync(GPUMapMode.READ);let _=f.getMappedRange();return new g(_)}_isEnvironmentTexture(e){let t=e.mapping;return t===ys||t===vs||t===li||t===Vi}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){let n=new xt;n.minFilter=Xe,n.magFilter=Xe,this.createTexture(n,{width:1,height:1,format:e}),this.defaultTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){let n=new fs;n.minFilter=Xe,n.magFilter=Xe,this.createTexture(n,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=n}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(e===null){let t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,n,i){for(let s=0;s<6;s++){let r=e[s],c=i===!0?PI[s]:s;r.isDataTexture?this._copyBufferToTexture(r.image,t,n,c,i):this._copyImageToTexture(r,t,n,c,i)}}_copyImageToTexture(e,t,n,i,s){this.backend.device.queue.copyExternalImageToTexture({source:e,flipY:s},{texture:t,mipLevel:0,origin:{x:0,y:0,z:i}},{width:e.width,height:e.height,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new f_(this.backend.device)),e}_generateMipmaps(e,t,n=0){this._getPassUtils().generateMipmaps(e,t,n)}_flipY(e,t,n=0){this._getPassUtils().flipY(e,t,n)}_copyBufferToTexture(e,t,n,i,s,r=0){let c=this.backend.device,a=e.data,l=this._getBytesPerTexel(n.format),u=e.width*l;c.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:i}},a,{offset:e.width*e.height*l*r,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,n,i)}_copyCompressedBufferToTexture(e,t,n){let i=this.backend.device,s=this._getBlockData(n.format),r=n.size.depthOrArrayLayers>1;for(let c=0;c<e.length;c++){let a=e[c],l=a.width,u=a.height,h=r?n.size.depthOrArrayLayers:1,d=Math.ceil(l/s.width)*s.byteLength,f=d*Math.ceil(u/s.height);for(let m=0;m<h;m++)i.queue.writeTexture({texture:t,mipLevel:c,origin:{x:0,y:0,z:m}},a.data,{offset:m*f,bytesPerRow:d,rowsPerImage:Math.ceil(u/s.height)},{width:Math.ceil(l/s.width)*s.width,height:Math.ceil(u/s.height)*s.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===S.BC1RGBAUnorm||e===S.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===S.BC2RGBAUnorm||e===S.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===S.BC3RGBAUnorm||e===S.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===S.BC4RUnorm||e===S.BC4RSNorm)return{byteLength:8,width:4,height:4};if(e===S.BC5RGUnorm||e===S.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===S.BC6HRGBUFloat||e===S.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===S.BC7RGBAUnorm||e===S.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===S.ETC2RGB8Unorm||e===S.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===S.ETC2RGB8A1Unorm||e===S.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===S.ETC2RGBA8Unorm||e===S.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===S.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===S.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===S.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===S.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===S.ASTC4x4Unorm||e===S.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===S.ASTC5x4Unorm||e===S.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===S.ASTC5x5Unorm||e===S.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===S.ASTC6x5Unorm||e===S.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===S.ASTC6x6Unorm||e===S.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===S.ASTC8x5Unorm||e===S.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===S.ASTC8x6Unorm||e===S.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===S.ASTC8x8Unorm||e===S.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===S.ASTC10x5Unorm||e===S.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===S.ASTC10x6Unorm||e===S.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===S.ASTC10x8Unorm||e===S.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===S.ASTC10x10Unorm||e===S.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===S.ASTC12x10Unorm||e===S.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===S.ASTC12x12Unorm||e===S.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=Kf.ClampToEdge;return e===Ii?t=Kf.Repeat:e===Di&&(t=Kf.MirrorRepeat),t}_convertFilterMode(e){let t=Ds.Linear;return(e===Xe||e===Ol||e===Ts)&&(t=Ds.Nearest),t}_getBytesPerTexel(e){if(e===S.R8Unorm||e===S.R8Snorm||e===S.R8Uint||e===S.R8Sint)return 1;if(e===S.R16Uint||e===S.R16Sint||e===S.R16Float||e===S.RG8Unorm||e===S.RG8Snorm||e===S.RG8Uint||e===S.RG8Sint)return 2;if(e===S.R32Uint||e===S.R32Sint||e===S.R32Float||e===S.RG16Uint||e===S.RG16Sint||e===S.RG16Float||e===S.RGBA8Unorm||e===S.RGBA8UnormSRGB||e===S.RGBA8Snorm||e===S.RGBA8Uint||e===S.RGBA8Sint||e===S.BGRA8Unorm||e===S.BGRA8UnormSRGB||e===S.RGB9E5UFloat||e===S.RGB10A2Unorm||e===S.RG11B10UFloat||e===S.Depth32Float||e===S.Depth24Plus||e===S.Depth24PlusStencil8||e===S.Depth32FloatStencil8)return 4;if(e===S.RG32Uint||e===S.RG32Sint||e===S.RG32Float||e===S.RGBA16Uint||e===S.RGBA16Sint||e===S.RGBA16Float)return 8;if(e===S.RGBA32Uint||e===S.RGBA32Sint||e===S.RGBA32Float)return 16}_getTypedArrayType(e){if(e===S.R8Uint)return Uint8Array;if(e===S.R8Sint)return Int8Array;if(e===S.R8Unorm)return Uint8Array;if(e===S.R8Snorm)return Int8Array;if(e===S.RG8Uint)return Uint8Array;if(e===S.RG8Sint)return Int8Array;if(e===S.RG8Unorm)return Uint8Array;if(e===S.RG8Snorm)return Int8Array;if(e===S.RGBA8Uint)return Uint8Array;if(e===S.RGBA8Sint)return Int8Array;if(e===S.RGBA8Unorm)return Uint8Array;if(e===S.RGBA8Snorm)return Int8Array;if(e===S.R16Uint)return Uint16Array;if(e===S.R16Sint)return Int16Array;if(e===S.RG16Uint)return Uint16Array;if(e===S.RG16Sint)return Int16Array;if(e===S.RGBA16Uint)return Uint16Array;if(e===S.RGBA16Sint)return Int16Array;if(e===S.R16Float||e===S.RG16Float||e===S.RGBA16Float)return Uint16Array;if(e===S.R32Uint)return Uint32Array;if(e===S.R32Sint)return Int32Array;if(e===S.R32Float)return Float32Array;if(e===S.RG32Uint)return Uint32Array;if(e===S.RG32Sint)return Int32Array;if(e===S.RG32Float)return Float32Array;if(e===S.RGBA32Uint)return Uint32Array;if(e===S.RGBA32Sint)return Int32Array;if(e===S.RGBA32Float)return Float32Array;if(e===S.BGRA8Unorm||e===S.BGRA8UnormSRGB)return Uint8Array;if(e===S.RGB10A2Unorm||e===S.RGB9E5UFloat||e===S.RG11B10UFloat)return Uint32Array;if(e===S.Depth32Float)return Float32Array;if(e===S.Depth24Plus||e===S.Depth24PlusStencil8)return Uint32Array;if(e===S.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.isData3DTexture?t=cv.ThreeD:t=cv.TwoD,t}};function m_(o,e=null){let t=o.format,n=o.type,i=o.colorSpace,s;if(o.isCompressedTexture===!0||o.isCompressedArrayTexture===!0)switch(t){case Gr:s=i===K?S.BC1RGBAUnormSRGB:S.BC1RGBAUnorm;break;case zr:s=i===K?S.BC2RGBAUnormSRGB:S.BC2RGBAUnorm;break;case kr:s=i===K?S.BC3RGBAUnormSRGB:S.BC3RGBAUnorm;break;case Ca:s=i===K?S.ETC2RGB8UnormSRGB:S.ETC2RGB8Unorm;break;case Na:s=i===K?S.ETC2RGBA8UnormSRGB:S.ETC2RGBA8Unorm;break;case Pa:s=i===K?S.ASTC4x4UnormSRGB:S.ASTC4x4Unorm;break;case Ia:s=i===K?S.ASTC5x4UnormSRGB:S.ASTC5x4Unorm;break;case Da:s=i===K?S.ASTC5x5UnormSRGB:S.ASTC5x5Unorm;break;case La:s=i===K?S.ASTC6x5UnormSRGB:S.ASTC6x5Unorm;break;case Fa:s=i===K?S.ASTC6x6UnormSRGB:S.ASTC6x6Unorm;break;case Ua:s=i===K?S.ASTC8x5UnormSRGB:S.ASTC8x5Unorm;break;case Ba:s=i===K?S.ASTC8x6UnormSRGB:S.ASTC8x6Unorm;break;case Oa:s=i===K?S.ASTC8x8UnormSRGB:S.ASTC8x8Unorm;break;case Va:s=i===K?S.ASTC10x5UnormSRGB:S.ASTC10x5Unorm;break;case Ga:s=i===K?S.ASTC10x6UnormSRGB:S.ASTC10x6Unorm;break;case za:s=i===K?S.ASTC10x8UnormSRGB:S.ASTC10x8Unorm;break;case ka:s=i===K?S.ASTC10x10UnormSRGB:S.ASTC10x10Unorm;break;case Ha:s=i===K?S.ASTC12x10UnormSRGB:S.ASTC12x10Unorm;break;case Wa:s=i===K?S.ASTC12x12UnormSRGB:S.ASTC12x12Unorm;break;case dn:s=i===K?S.RGBA8UnormSRGB:S.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case dn:switch(n){case Ss:s=S.RGBA8Snorm;break;case bs:s=S.RGBA16Sint;break;case Gi:s=S.RGBA16Uint;break;case ke:s=S.RGBA32Uint;break;case tt:s=S.RGBA32Sint;break;case zt:s=i===K?S.RGBA8UnormSRGB:S.RGBA8Unorm;break;case bt:s=S.RGBA16Float;break;case yt:s=S.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",n)}break;case ba:switch(n){case Vl:s=S.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",n)}break;case Ma:switch(n){case Ss:s=S.R8Snorm;break;case bs:s=S.R16Sint;break;case Gi:s=S.R16Uint;break;case ke:s=S.R32Uint;break;case tt:s=S.R32Sint;break;case zt:s=S.R8Unorm;break;case bt:s=S.R16Float;break;case yt:s=S.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",n)}break;case Ms:switch(n){case Ss:s=S.RG8Snorm;break;case bs:s=S.RG16Sint;break;case Gi:s=S.RG16Uint;break;case ke:s=S.RG32Uint;break;case tt:s=S.RG32Sint;break;case zt:s=S.RG8Unorm;break;case bt:s=S.RG16Float;break;case yt:s=S.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",n)}break;case vn:switch(n){case Gi:s=S.Depth16Unorm;break;case ke:s=S.Depth24Plus;break;case yt:s=S.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",n)}break;case ni:switch(n){case zi:s=S.Depth24PlusStencil8;break;case yt:e&&e.features.has(c_.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),s=S.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",n)}break;case Aa:switch(n){case tt:s=S.R32Sint;break;case ke:s=S.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",n)}break;case Ea:switch(n){case tt:s=S.RG32Sint;break;case ke:s=S.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",n)}break;case wa:switch(n){case tt:s=S.RGBA32Sint;break;case ke:s=S.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",n)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return s}var II=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,DI=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,lv={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},LI=o=>{o=o.trim();let e=o.match(II);if(e!==null&&e.length===4){let t=e[2],n=[],i=null;for(;(i=DI.exec(t))!==null;)n.push({name:i[1],type:i[2]});let s=[];for(let u=0;u<n.length;u++){let{name:h,type:d}=n[u],f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=lv[f]),s.push(new Bc(f,h))}let r=o.substring(e[0].length),c=e[3]||"void",a=e[1]!==void 0?e[1]:"";return{type:lv[c]||c,inputs:s,name:a,inputsCode:t,blockCode:r,outputType:c}}else throw new Error("FunctionNode: Function is not a WGSL code.")},g_=class extends Oc{constructor(e){let{type:t,inputs:n,name:i,inputsCode:s,blockCode:r,outputType:c}=LI(e);super(t,n,i),this.inputsCode=s,this.blockCode=r,this.outputType=c}getCode(e=this.name){let t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}},__=class extends fh{parseFunction(e){return new g_(e)}},jr=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},FI={[ut.READ_ONLY]:"read",[ut.WRITE_ONLY]:"write",[ut.READ_WRITE]:"read_write"},uv={[Ii]:"repeat",[yn]:"clamp",[Di]:"mirror"},yu={vertex:jr?jr.VERTEX:1,fragment:jr?jr.FRAGMENT:2,compute:jr?jr.COMPUTE:4},hv={instance:!0,swizzleAssign:!1,storageBuffer:!0},UI={"^^":"tsl_xor"},BI={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},dv={},jt={tsl_xor:new Ne("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Ne("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Ne("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Ne("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Ne("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Ne("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Ne("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Ne("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Ne("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new Ne("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new Ne("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new Ne("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new Ne(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},ac={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};typeof navigator<"u"&&/Windows/g.test(navigator.userAgent)&&(jt.pow_float=new Ne("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),jt.pow_vec2=new Ne("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[jt.pow_float]),jt.pow_vec3=new Ne("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[jt.pow_float]),jt.pow_vec4=new Ne("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[jt.pow_float]),ac.pow_float="tsl_pow_float",ac.pow_vec2="tsl_pow_vec2",ac.pow_vec3="tsl_pow_vec3",ac.pow_vec4="tsl_pow_vec4");var cb="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(cb+=`diagnostic( off, derivative_uniformity );
`);var x_=class extends uh{constructor(e,t){super(e,t,new __),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==ui}_generateTextureSample(e,t,n,i,s=this.shaderStage){return s==="fragment"?i?`textureSample( ${t}, ${t}_sampler, ${n}, ${i} )`:`textureSample( ${t}, ${t}_sampler, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n):this.generateTextureLod(e,t,n,i,"0")}_generateVideoSample(e,t,n=this.shaderStage){if(n==="fragment")return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${n} shader.`)}_generateTextureSampleLevel(e,t,n,i,s,r=this.shaderStage){return(r==="fragment"||r==="compute")&&this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${n}, ${i} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,n,i):this.generateTextureLod(e,t,n,s,i)}generateWrapFunction(e){let t=`tsl_coord_${uv[e.wrapS]}S_${uv[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`,n=dv[t];if(n===void 0){let i=[],s=e.isData3DTexture?"vec3f":"vec2f",r=`fn ${t}( coord : ${s} ) -> ${s} {

	return ${s}(
`,c=(a,l)=>{a===Ii?(i.push(jt.repeatWrapping_float),r+=`		tsl_repeatWrapping_float( coord.${l} )`):a===yn?(i.push(jt.clampWrapping_float),r+=`		tsl_clampWrapping_float( coord.${l} )`):a===Di?(i.push(jt.mirrorWrapping_float),r+=`		tsl_mirrorWrapping_float( coord.${l} )`):(r+=`		coord.${l}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${a}" for vertex shader.`))};c(e.wrapS,"x"),r+=`,
`,c(e.wrapT,"y"),e.isData3DTexture&&(r+=`,
`,c(e.wrapR,"z")),r+=`
	);

}
`,dv[t]=n=new Ne(r,i)}return n.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,n){let i=this.getDataFromNode(e,this.shaderStage,this.globalCache);i.dimensionsSnippet===void 0&&(i.dimensionsSnippet={});let s=i.dimensionsSnippet[n];if(i.dimensionsSnippet[n]===void 0){let r,c,{primarySamples:a}=this.renderer.backend.utils.getTextureSampleData(e),l=a>1;e.isData3DTexture?c="vec3<u32>":c="vec2<u32>",l||e.isVideoTexture||e.isStorageTexture?r=t:r=`${t}${n?`, u32( ${n} )`:""}`,s=new so(new ro(`textureDimensions( ${r} )`,c)),i.dimensionsSnippet[n]=s,(e.isDataArrayTexture||e.isData3DTexture)&&(i.arrayLayerCount=new so(new ro(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(i.cubeFaceCount=new so(new ro("6u","u32")))}return s.build(this)}generateFilteredTexture(e,t,n,i="0u"){this._include("biquadraticTexture");let s=this.generateWrapFunction(e),r=this.generateTextureDimension(e,t,i);return`tsl_biquadraticTexture( ${t}, ${s}( ${n} ), ${r}, u32( ${i} ) )`}generateTextureLod(e,t,n,i,s="0u"){let r=this.generateWrapFunction(e),c=this.generateTextureDimension(e,t,s),a=e.isData3DTexture?"vec3":"vec2",l=`${a}<u32>(${r}(${n}) * ${a}<f32>(${c}))`;return this.generateTextureLoad(e,t,l,i,s)}generateTextureLoad(e,t,n,i,s="0u"){return e.isVideoTexture===!0||e.isStorageTexture===!0?`textureLoad( ${t}, ${n} )`:i?`textureLoad( ${t}, ${n}, ${i}, u32( ${s} ) )`:`textureLoad( ${t}, ${n}, u32( ${s} ) )`}generateTextureStore(e,t,n,i){return`textureStore( ${t}, ${n}, ${i} )`}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===yt||this.isSampleCompare(e)===!1&&e.minFilter===Xe&&e.magFilter===Xe||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,n,i,s=this.shaderStage){let r=null;return e.isVideoTexture===!0?r=this._generateVideoSample(t,n,s):this.isUnfilterable(e)?r=this.generateTextureLod(e,t,n,i,"0",s):r=this._generateTextureSample(e,t,n,i,s),r}generateTextureGrad(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${n},  ${i[0]}, ${i[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${r} shader.`)}generateTextureCompare(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleCompare( ${t}, ${t}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${r} shader.`)}generateTextureLevel(e,t,n,i,s,r=this.shaderStage){let c=null;return e.isVideoTexture===!0?c=this._generateVideoSample(t,n,r):c=this._generateTextureSampleLevel(e,t,n,i,s,r),c}generateTextureBias(e,t,n,i,s,r=this.shaderStage){if(r==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${n}, ${i} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${r} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){let n=e.name,i=e.type;return i==="texture"||i==="cubeTexture"||i==="storageTexture"||i==="texture3D"?n:i==="buffer"||i==="storageBuffer"||i==="indirectStorageBuffer"?this.isCustomStruct(e)?n:n+".value":e.groupNode.name+"."+n}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){let t=UI[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?ut.READ_ONLY:e.access}getStorageAccess(e,t){return FI[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,n,i=null){let s=super.getUniformFromNode(e,t,n,i),r=this.getDataFromNode(e,n,this.globalCache);if(r.uniformGPU===void 0){let c,a=e.groupNode,l=a.name,u=this.getBindGroupArray(l,n);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let h=null,d=this.getNodeAccess(e,n);if(t==="texture"||t==="storageTexture"?h=new _o(s.name,s.node,a,d):t==="cubeTexture"?h=new Th(s.name,s.node,a,d):t==="texture3D"&&(h=new Sh(s.name,s.node,a,d)),h.store=e.isStorageTextureNode===!0,h.setVisibility(yu[n]),(n==="fragment"||n==="compute")&&this.isUnfilterable(e.value)===!1&&h.store===!1){let f=new u_(`${s.name}_sampler`,s.node,a);f.setVisibility(yu[n]),u.push(f,h),c=[f,h]}else u.push(h),c=[h]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){let h=t==="buffer"?yh:d_,d=new h(e,a);d.setVisibility(yu[n]),u.push(d),c=d,s.name=i||"NodeBuffer_"+s.id}else{let h=this.uniformGroups[n]||(this.uniformGroups[n]={}),d=h[l];d===void 0&&(d=new vh(l,a),d.setVisibility(yu[n]),h[l]=d,u.push(d)),c=this.getNodeUniform(s,t),d.addUniform(c)}r.uniformGPU=c}return s}getBuiltin(e,t,n,i=this.shaderStage){let s=this.builtins[i]||(this.builtins[i]=new Map);return s.has(e)===!1&&s.set(e,{name:e,property:t,type:n}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){let t=e.layout,n=this.flowShaderNode(e),i=[];for(let r of t.inputs)i.push(r.name+" : "+this.getType(r.type));let s=`fn ${t.name}( ${i.join(", ")} ) -> ${this.getType(t.type)} {
${n.vars}
${n.code}
`;return n.result&&(s+=`	return ${n.result};
`),s+=`
}
`,s}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){let t=[],n=this.directives[e];if(n!==void 0)for(let i of n)t.push(`enable ${i};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){let t=[],n=this.builtins[e];if(n!==void 0)for(let{name:i,property:s,type:r}of n.values())t.push(`@builtin( ${i} ) ${s} : ${r}`);return t.join(`,
	`)}getScopedArray(e,t,n,i){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:n,bufferCount:i}),e}getScopedArrays(e){if(e!=="compute")return;let t=[];for(let{name:n,scope:i,bufferType:s,bufferCount:r}of this.scopedArrays.values()){let c=this.getType(s);t.push(`var<${i}> ${n}: array< ${c}, ${r} >;`)}return t.join(`
`)}getAttributes(e){let t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){let n=this.getBuiltins("attribute");n&&t.push(n);let i=this.getAttributesArray();for(let s=0,r=i.length;s<r;s++){let c=i[s],a=c.name,l=this.getType(c.type);t.push(`@location( ${s} ) ${a} : ${l}`)}}return t.join(`,
	`)}getStructMembers(e){let t=[];for(let n of e.members){let i=e.output?"@location( "+n.index+" ) ":"",s=this.getType(n.type);n.atomic&&(s="atomic< "+s+" >"),t.push(`	${i+n.name} : ${s}`)}return t.join(`,
`)}getStructs(e){let t="",n=this.structs[e];if(n.length>0){let i=[];for(let s of n){let r=`struct ${s.name} {
`;r+=this.getStructMembers(s),r+=`
};`,i.push(r)}t=`
`+i.join(`

`)+`
`}return t}getVar(e,t,n=null){let i=`var ${t} : `;return n!==null?i+=this.generateArrayDeclaration(e,n):i+=this.getType(e),i}getVars(e){let t=[],n=this.vars[e];if(n!==void 0)for(let i of n)t.push(`	${this.getVar(i.type,i.name,i.count)};`);return`
${t.join(`
`)}
`}getVaryings(e){let t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){let s=this.varyings,r=this.vars[e];for(let c=0;c<s.length;c++){let a=s[c];if(a.needsInterpolation){let l=`@location( ${c} )`;/^(int|uint|ivec|uvec)/.test(a.type)&&(l+=" @interpolate( flat )"),t.push(`${l} ${a.name} : ${this.getType(a.type)}`)}else e==="vertex"&&r.includes(a)===!1&&r.push(a)}}let n=this.getBuiltins(e);n&&t.push(n);let i=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+i):i}isCustomStruct(e){return e.value.isStorageBufferAttribute&&e.node.structTypeNode!==null}getUniforms(e){let t=this.uniforms[e],n=[],i=[],s=[],r={};for(let a of t){let l=a.groupNode.name,u=this.bindingsIndexes[l];if(a.type==="texture"||a.type==="cubeTexture"||a.type==="storageTexture"||a.type==="texture3D"){let h=a.node.value;(e==="fragment"||e==="compute")&&this.isUnfilterable(h)===!1&&a.node.isStorageTextureNode!==!0&&(this.isSampleCompare(h)?n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${a.name}_sampler : sampler_comparison;`):n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${a.name}_sampler : sampler;`));let d,f="",{primarySamples:m}=this.renderer.backend.utils.getTextureSampleData(h);if(m>1&&(f="_multisampled"),h.isCubeTexture===!0)d="texture_cube<f32>";else if(h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(h.isDepthTexture===!0)d=`texture_depth${f}_2d`;else if(h.isVideoTexture===!0)d="texture_external";else if(h.isData3DTexture===!0)d="texture_3d<f32>";else if(a.node.isStorageTextureNode===!0){let g=m_(h),_=this.getStorageAccess(a.node,e);d=`texture_storage_2d<${g}, ${_}>`}else{let g=this.getComponentTypeFromTexture(h).charAt(0);d=`texture${f}_2d<${g}32>`}n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${a.name} : ${d};`)}else if(a.type==="buffer"||a.type==="storageBuffer"||a.type==="indirectStorageBuffer"){let h=a.node,d=this.getType(h.getNodeType(this)),f=h.bufferCount,m=f>0&&a.type==="buffer"?", "+f:"",g=h.isStorageBufferNode?`storage, ${this.getStorageAccess(h,e)}`:"uniform";if(this.isCustomStruct(a))i.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var<${g}> ${a.name} : ${d};`);else{let x=`	value : array< ${h.isAtomic?`atomic<${d}>`:`${d}`}${m} >`;i.push(this._getWGSLStructBinding(a.name,x,g,u.binding++,u.group))}}else{let h=this.getType(this.getVectorType(a.type)),d=a.groupNode.name;(r[d]||(r[d]={index:u.binding++,id:u.group,snippets:[]})).snippets.push(`	${a.name} : ${h}`)}}for(let a in r){let l=r[a];s.push(this._getWGSLStructBinding(a,l.snippets.join(`,
`),"uniform",l.index,l.id))}let c=n.join(`
`);return c+=i.join(`
`),c+=s.join(`
`),c}buildCode(){let e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(let t in e){this.shaderStage=t;let n=e[t];n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.structs=this.getStructs(t),n.vars=this.getVars(t),n.codes=this.getCodes(t),n.directives=this.getDirectives(t),n.scopedArrays=this.getScopedArrays(t);let i=`// code

`;i+=this.flowCode[t];let s=this.flowNodes[t],r=s[s.length-1],c=r.outputNode,a=c!==void 0&&c.isOutputStructNode===!0;for(let l of s){let u=this.getFlowData(l),h=l.name;if(h&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${h}
`),i+=`${u.code}
	`,l===r&&t!=="compute"){if(i+=`// result

	`,t==="vertex")i+=`varyings.Vertex = ${u.result};`;else if(t==="fragment")if(a)n.returnType=c.getNodeType(this),n.structs+="var<private> output : "+n.returnType+";",i+=`return ${u.result};`;else{let d="	@location(0) color: vec4<f32>",f=this.getBuiltins("output");f&&(d+=`,
	`+f),n.returnType="OutputStruct",n.structs+=this._getWGSLStruct("OutputStruct",d),n.structs+=`
var<private> output : OutputStruct;`,i+=`output.color = ${u.result};

	return output;`}}}n.flow=i}this.shaderStage=null,this.material!==null?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let n;return t!==null&&(n=this._getWGSLMethod(e+"_"+t)),n===void 0&&(n=this._getWGSLMethod(e)),n||e}getType(e){return BI[e]||e}isAvailable(e){let t=hv[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),hv[e]=t),t}_getWGSLMethod(e){return jt[e]!==void 0&&this._include(e),ac[e]}_include(e){let t=jt[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${cb}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${t} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x + globalId.y * numWorkgroups.x * u32(${t}) + globalId.z * numWorkgroups.x * numWorkgroups.y * u32(${t});

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,n,i=0,s=0){let r=e+"Struct";return`${this._getWGSLStruct(r,t)}
@binding( ${i} ) @group( ${s} )
var<${n}> ${e} : ${r};`}},y_=class{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=S.Depth24PlusStencil8:e.depth&&(t=S.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){let s=this.backend.renderer,r=s.getRenderTarget();t=r?r.samples:s.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;let n=t>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:t,primarySamples:n?1:t,isMSAA:n}}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return io.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return io.LineList;if(e.isLine)return io.LineStrip;if(e.isMesh)return io.TriangleList}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),t===2&&(t=4)),t}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){let e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===zt)return S.BGRA8Unorm;if(e===bt)return S.RGBA16Float;throw new Error("Unsupported outputType")}},OI=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),VI=new Map([[mr,["float16"]]]),GI=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]),v_=class{constructor(e){this.backend=e}createAttribute(e,t){let n=this._getBufferAttribute(e),i=this.backend,s=i.get(n),r=s.buffer;if(r===void 0){let c=i.device,a=n.array;if(e.normalized===!1){if(a.constructor===Int16Array)a=new Int32Array(a);else if(a.constructor===Uint16Array&&(a=new Uint32Array(a),t&GPUBufferUsage.INDEX))for(let u=0;u<a.length;u++)a[u]===65535&&(a[u]=4294967295)}if(n.array=a,(n.isStorageBufferAttribute||n.isStorageInstancedBufferAttribute)&&n.itemSize===3){a=new a.constructor(n.count*4);for(let u=0;u<n.count;u++)a.set(n.array.subarray(u*3,u*3+3),u*4);n.itemSize=4,n.array=a}let l=a.byteLength+(4-a.byteLength%4)%4;r=c.createBuffer({label:n.name,size:l,usage:t,mappedAtCreation:!0}),new a.constructor(r.getMappedRange()).set(a),r.unmap(),s.buffer=r}}updateAttribute(e){let t=this._getBufferAttribute(e),n=this.backend,i=n.device,s=n.get(t).buffer,r=t.array,c=this._isTypedArray(r),a=t.updateRanges;if(a.length===0)i.queue.writeBuffer(s,0,r,0);else{let l=c?1:r.BYTES_PER_ELEMENT;for(let u=0,h=a.length;u<h;u++){let d=a[u],f=d.start*l,m=d.count*l;i.queue.writeBuffer(s,0,r,f,m)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){let t=e.getAttributes(),n=new Map;for(let i=0;i<t.length;i++){let s=t[i],r=s.array.BYTES_PER_ELEMENT,c=this._getBufferAttribute(s),a=n.get(c);if(a===void 0){let h,d;s.isInterleavedBufferAttribute===!0?(h=s.data.stride*r,d=s.data.isInstancedInterleavedBuffer?xu.Instance:xu.Vertex):(h=s.itemSize*r,d=s.isInstancedBufferAttribute?xu.Instance:xu.Vertex),s.normalized===!1&&(s.array.constructor===Int16Array||s.array.constructor===Uint16Array)&&(h=4),a={arrayStride:h,attributes:[],stepMode:d},n.set(c,a)}let l=this._getVertexFormat(s),u=s.isInterleavedBufferAttribute===!0?s.offset*r:0;a.attributes.push({shaderLocation:i,offset:u,format:l})}return Array.from(n.values())}destroyAttribute(e){let t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){let t=this.backend,n=t.device,s=t.get(this._getBufferAttribute(e)).buffer,r=s.size,c=n.createBuffer({label:`${e.name}_readback`,size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=n.createCommandEncoder({label:`readback_encoder_${e.name}`});a.copyBufferToBuffer(s,0,c,0,r);let l=a.finish();n.queue.submit([l]),await c.mapAsync(GPUMapMode.READ);let u=c.getMappedRange(),h=new e.array.constructor(u.slice(0));return c.unmap(),h.buffer}_getVertexFormat(e){let{itemSize:t,normalized:n}=e,i=e.array.constructor,s=e.constructor,r;if(t===1)r=GI.get(i);else{let a=(VI.get(s)||OI.get(i))[n?1:0];if(a){let l=i.BYTES_PER_ELEMENT*t,h=Math.floor((l+3)/4)*4/i.BYTES_PER_ELEMENT;if(h%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");r=`${a}x${h}`}}return r||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),r}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}},T_=class{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){let t=this.backend,n=t.device,i=[],s=0;for(let r of e.bindings){let c={binding:s++,visibility:r.visibility};if(r.isUniformBuffer||r.isStorageBuffer){let a={};r.isStorageBuffer&&(r.visibility&4&&(r.access===ut.READ_WRITE||r.access===ut.WRITE_ONLY)?a.type=Zf.Storage:a.type=Zf.ReadOnlyStorage),c.buffer=a}else if(r.isSampler){let a={};r.texture.isDepthTexture&&r.texture.compareFunction!==null&&(a.type="comparison"),c.sampler=a}else if(r.isSampledTexture&&r.texture.isVideoTexture)c.externalTexture={};else if(r.isSampledTexture&&r.store){let a={};a.format=this.backend.get(r.texture).texture.format;let l=r.access;l===ut.READ_WRITE?a.access=jf.ReadWrite:l===ut.WRITE_ONLY?a.access=jf.WriteOnly:a.access=jf.ReadOnly,c.storageTexture=a}else if(r.isSampledTexture){let a={},{primarySamples:l}=t.utils.getTextureSampleData(r.texture);if(l>1&&(a.multisampled=!0,r.texture.isDepthTexture||(a.sampleType=Zr.UnfilterableFloat)),r.texture.isDepthTexture)a.sampleType=Zr.Depth;else if(r.texture.isDataTexture||r.texture.isDataArrayTexture||r.texture.isData3DTexture){let u=r.texture.type;u===tt?a.sampleType=Zr.SInt:u===ke?a.sampleType=Zr.UInt:u===yt&&(this.backend.hasFeature("float32-filterable")?a.sampleType=Zr.Float:a.sampleType=Zr.UnfilterableFloat)}r.isSampledCubeTexture?a.viewDimension=At.Cube:r.texture.isDataArrayTexture||r.texture.isCompressedArrayTexture?a.viewDimension=At.TwoDArray:r.isSampledTexture3D&&(a.viewDimension=At.ThreeD),c.texture=a}else console.error(`WebGPUBindingUtils: Unsupported binding "${r}".`);i.push(c)}return n.createBindGroupLayout({entries:i})}createBindings(e,t,n,i=0){let{backend:s,bindGroupLayoutCache:r}=this,c=s.get(e),a=r.get(e.bindingsReference);a===void 0&&(a=this.createBindingsLayout(e),r.set(e.bindingsReference,a));let l;n>0&&(c.groups===void 0&&(c.groups=[],c.versions=[]),c.versions[n]===i&&(l=c.groups[n])),l===void 0&&(l=this.createBindGroup(e,a),n>0&&(c.groups[n]=l,c.versions[n]=i)),c.group=l,c.layout=a}updateBinding(e){let t=this.backend,n=t.device,i=e.buffer,s=t.get(e).buffer;n.queue.writeBuffer(s,0,i,0)}createBindGroupIndex(e,t){let i=this.backend.device,s=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,r=e[0],c=i.createBuffer({label:"bindingCameraIndex_"+r,size:16,usage:s});i.queue.writeBuffer(c,0,e,0);let a=[{binding:0,resource:{buffer:c}}];return i.createBindGroup({label:"bindGroupCameraIndex_"+r,layout:t,entries:a})}createBindGroup(e,t){let n=this.backend,i=n.device,s=0,r=[];for(let c of e.bindings){if(c.isUniformBuffer){let a=n.get(c);if(a.buffer===void 0){let l=c.byteLength,u=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,h=i.createBuffer({label:"bindingBuffer_"+c.name,size:l,usage:u});a.buffer=h}r.push({binding:s,resource:{buffer:a.buffer}})}else if(c.isStorageBuffer){let a=n.get(c);if(a.buffer===void 0){let l=c.attribute;a.buffer=n.get(l).buffer}r.push({binding:s,resource:{buffer:a.buffer}})}else if(c.isSampler){let a=n.get(c.texture);r.push({binding:s,resource:a.sampler})}else if(c.isSampledTexture){let a=n.get(c.texture),l;if(a.externalTexture!==void 0)l=i.importExternalTexture({source:a.externalTexture});else{let u=c.store?1:a.texture.mipLevelCount,h=`view-${a.texture.width}-${a.texture.height}-${u}`;if(l=a[h],l===void 0){let d=RI.All,f;c.isSampledCubeTexture?f=At.Cube:c.isSampledTexture3D?f=At.ThreeD:c.texture.isDataArrayTexture||c.texture.isCompressedArrayTexture?f=At.TwoDArray:f=At.TwoD,l=a[h]=a.texture.createView({aspect:d,dimension:f,mipLevelCount:u})}}r.push({binding:s,resource:l})}s++}return i.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:r})}},S_=class{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){let{object:n,material:i,geometry:s,pipeline:r}=e,{vertexProgram:c,fragmentProgram:a}=r,l=this.backend,u=l.device,h=l.utils,d=l.get(r),f=[];for(let oe of e.getBindings()){let xe=l.get(oe);f.push(xe.layout)}let m=l.attributeUtils.createShaderVertexBuffers(e),g;i.transparent===!0&&i.blending!==Bi&&(g=this._getBlending(i));let _={};i.stencilWrite===!0&&(_={compare:this._getStencilCompare(i),failOp:this._getStencilOperation(i.stencilFail),depthFailOp:this._getStencilOperation(i.stencilZFail),passOp:this._getStencilOperation(i.stencilZPass)});let x=this._getColorWriteMask(i),T=[];if(e.context.textures!==null){let oe=e.context.textures;for(let xe=0;xe<oe.length;xe++){let Ce=h.getTextureFormatGPU(oe[xe]);T.push({format:Ce,blend:g,writeMask:x})}}else{let oe=h.getCurrentColorFormat(e.context);T.push({format:oe,blend:g,writeMask:x})}let A=l.get(c).module,E=l.get(a).module,N=this._getPrimitiveState(n,s,i),R=this._getDepthCompare(i),P=h.getCurrentDepthStencilFormat(e.context),I=this._getSampleCount(e.context),G={label:`renderPipeline_${i.name||i.type}_${i.id}`,vertex:Object.assign({},A,{buffers:m}),fragment:Object.assign({},E,{targets:T}),primitive:N,multisample:{count:I,alphaToCoverageEnabled:i.alphaToCoverage&&I>1},layout:u.createPipelineLayout({bindGroupLayouts:f})},z={},$=e.context.depth,j=e.context.stencil;if(($===!0||j===!0)&&($===!0&&(z.format=P,z.depthWriteEnabled=i.depthWrite,z.depthCompare=R),j===!0&&(z.stencilFront=_,z.stencilBack={},z.stencilReadMask=i.stencilFuncMask,z.stencilWriteMask=i.stencilWriteMask),G.depthStencil=z),t===null)d.pipeline=u.createRenderPipeline(G);else{let oe=new Promise(xe=>{u.createRenderPipelineAsync(G).then(Ce=>{d.pipeline=Ce,xe()})});t.push(oe)}}createBundleEncoder(e){let t=this.backend,{utils:n,device:i}=t,s=n.getCurrentDepthStencilFormat(e),r=n.getCurrentColorFormat(e),c=this._getSampleCount(e),a={label:"renderBundleEncoder",colorFormats:[r],depthStencilFormat:s,sampleCount:c};return i.createRenderBundleEncoder(a)}createComputePipeline(e,t){let n=this.backend,i=n.device,s=n.get(e.computeProgram).module,r=n.get(e),c=[];for(let a of t){let l=n.get(a);c.push(l.layout)}r.pipeline=i.createComputePipeline({compute:s,layout:i.createPipelineLayout({bindGroupLayouts:c})})}_getBlending(e){let t,n,i=e.blending,s=e.blendSrc,r=e.blendDst,c=e.blendEquation;if(i===El){let a=e.blendSrcAlpha!==null?e.blendSrcAlpha:s,l=e.blendDstAlpha!==null?e.blendDstAlpha:r,u=e.blendEquationAlpha!==null?e.blendEquationAlpha:c;t={srcFactor:this._getBlendFactor(s),dstFactor:this._getBlendFactor(r),operation:this._getBlendOperation(c)},n={srcFactor:this._getBlendFactor(a),dstFactor:this._getBlendFactor(l),operation:this._getBlendOperation(u)}}else{let a=e.premultipliedAlpha,l=(u,h,d,f)=>{t={srcFactor:u,dstFactor:h,operation:Ns.Add},n={srcFactor:d,dstFactor:f,operation:Ns.Add}};if(a)switch(i){case Tn:l(te.One,te.OneMinusSrcAlpha,te.One,te.OneMinusSrcAlpha);break;case Cr:l(te.One,te.One,te.One,te.One);break;case Nr:l(te.Zero,te.OneMinusSrc,te.Zero,te.One);break;case Pr:l(te.Zero,te.Src,te.Zero,te.SrcAlpha);break}else switch(i){case Tn:l(te.SrcAlpha,te.OneMinusSrcAlpha,te.One,te.OneMinusSrcAlpha);break;case Cr:l(te.SrcAlpha,te.One,te.SrcAlpha,te.One);break;case Nr:l(te.Zero,te.OneMinusSrc,te.Zero,te.One);break;case Pr:l(te.Zero,te.Src,te.Zero,te.Src);break}}if(t!==void 0&&n!==void 0)return{color:t,alpha:n};console.error("THREE.WebGPURenderer: Invalid blending: ",i)}_getBlendFactor(e){let t;switch(e){case Cl:t=te.Zero;break;case Nl:t=te.One;break;case Pl:t=te.Src;break;case Il:t=te.OneMinusSrc;break;case cr:t=te.SrcAlpha;break;case lr:t=te.OneMinusSrcAlpha;break;case Fl:t=te.Dst;break;case Ul:t=te.OneMinusDstColor;break;case Dl:t=te.DstAlpha;break;case Ll:t=te.OneMinusDstAlpha;break;case Bl:t=te.SrcAlphaSaturated;break;case NC:t=te.Constant;break;case PC:t=te.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t,n=e.stencilFunc;switch(n){case af:t=nt.Never;break;case Fo:t=nt.Always;break;case cf:t=nt.Less;break;case uf:t=nt.LessEqual;break;case lf:t=nt.Equal;break;case ff:t=nt.GreaterEqual;break;case hf:t=nt.Greater;break;case df:t=nt.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",n)}return t}_getStencilOperation(e){let t;switch(e){case jn:t=Wi.Keep;break;case Jd:t=Wi.Zero;break;case ef:t=Wi.Replace;break;case of:t=Wi.Invert;break;case tf:t=Wi.IncrementClamp;break;case nf:t=Wi.DecrementClamp;break;case sf:t=Wi.IncrementWrap;break;case rf:t=Wi.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Sn:t=Ns.Add;break;case wl:t=Ns.Subtract;break;case Rl:t=Ns.ReverseSubtract;break;case Ld:t=Ns.Min;break;case Fd:t=Ns.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,n){let i={},s=this.backend.utils;switch(i.topology=s.getPrimitiveTopology(e,n),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(i.stripIndexFormat=t.index.array instanceof Uint16Array?xo.Uint16:xo.Uint32),n.side){case Ni:i.frontFace=$f.CCW,i.cullMode=Yf.Back;break;case St:i.frontFace=$f.CCW,i.cullMode=Yf.Front;break;case Ui:i.frontFace=$f.CCW,i.cullMode=Yf.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",n.side);break}return i}_getColorWriteMask(e){return e.colorWrite===!0?av.All:av.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=nt.Always;else{let n=e.depthFunc;switch(n){case Ir:t=nt.Never;break;case Dr:t=nt.Always;break;case Lr:t=nt.Less;break;case Pi:t=nt.LessEqual;break;case Fr:t=nt.Equal;break;case Ur:t=nt.GreaterEqual;break;case Br:t=nt.Greater;break;case Or:t=nt.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",n)}}return t}},b_=class extends Mh{constructor(e,t,n=2048){super(n),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});let i=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return As(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;let t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e.id,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;let e=new Map(this.queryOffsets),t=this.currentQueryIndex,n=t*8;this.currentQueryIndex=0,this.queryOffsets.clear();let i=this.device.createCommandEncoder();i.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),i.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,n);let s=i.finish();if(this.device.queue.submit([s]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,n),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;let r=new BigUint64Array(this.resultBuffer.getMappedRange(0,n)),c=0;for(let[,a]of e){let l=r[a],u=r[a+1],h=Number(u-l)/1e6;c+=h}return this.resultBuffer.unmap(),this.lastValue=c,c}catch(e){return console.error("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}},M_=class extends bh{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.trackTimestamp=e.trackTimestamp===!0,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new y_(this),this.attributeUtils=new v_(this),this.bindingUtils=new T_(this),this.pipelineUtils=new S_(this),this.textureUtils=new p_(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);let t=this.parameters,n;if(t.device===void 0){let r={powerPreference:t.powerPreference},c=typeof navigator<"u"?await navigator.gpu.requestAdapter(r):null;if(c===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");let a=Object.values(c_),l=[];for(let h of a)c.features.has(h)&&l.push(h);let u={requiredFeatures:l,requiredLimits:t.requiredLimits};n=await c.requestDevice(u)}else n=t.device;n.lost.then(r=>{let c={api:"WebGPU",message:r.message||"Unknown reason",reason:r.reason||null,originalEvent:r};e.onDeviceLost(c)});let i=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=n,this.context=i;let s=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(c_.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:s}),this.updateSize()}get coordinateSystem(){return $t}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){let n=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(n.depth,n.stencil).createView()});let i=e.colorAttachments[0];this.renderer.samples>0?i.view=this.colorBuffer.createView():i.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}let t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e,t={}){let n=e.renderTarget,i=this.get(n),s=i.descriptors;if(s===void 0||i.width!==n.width||i.height!==n.height||i.dimensions!==n.dimensions||i.activeMipmapLevel!==n.activeMipmapLevel||i.activeCubeFace!==e.activeCubeFace||i.samples!==n.samples||i.loadOp!==t.loadOp){s={},i.descriptors=s;let a=()=>{n.removeEventListener("dispose",a),this.delete(n)};n.addEventListener("dispose",a)}let r=e.getCacheKey(),c=s[r];if(c===void 0){let a=e.textures,l=[],u;for(let h=0;h<a.length;h++){let d=this.get(a[h]),f={label:`colorAttachment_${h}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:At.TwoD};n.isRenderTarget3D?(u=e.activeCubeFace,f.baseArrayLayer=0,f.dimension=At.ThreeD,f.depthOrArrayLayers=a[h].image.depth):n.isRenderTargetArray&&(f.dimension=At.TwoDArray,f.depthOrArrayLayers=a[h].image.depth);let m=d.texture.createView(f),g,_;d.msaaTexture!==void 0?(g=d.msaaTexture.createView(),_=m):(g=m,_=void 0),l.push({view:g,depthSlice:u,resolveTarget:_,loadOp:Fe.Load,storeOp:lt.Store,...t})}if(c={colorAttachments:l},e.depth){let d={view:this.get(e.depthTexture).texture.createView()};c.depthStencilAttachment=d}s[r]=c,i.width=n.width,i.height=n.height,i.samples=n.samples,i.activeMipmapLevel=e.activeMipmapLevel,i.activeCubeFace=e.activeCubeFace,i.dimensions=n.dimensions,i.depthSlice=u,i.loadOp=l[0].loadOp}return c}beginRender(e){let t=this.get(e),n=this.device,i=e.occlusionQueryCount,s;i>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,s=n.createQuerySet({type:"occlusion",count:i,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=s,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(i),t.lastOcclusionObject=null);let r;e.textures===null?r=this._getDefaultRenderPassDescriptor():r=this._getRenderPassDescriptor(e,{loadOp:Fe.Load}),this.initTimestampQuery(e,r),r.occlusionQuerySet=s;let c=r.depthStencilAttachment;if(e.textures!==null){let u=r.colorAttachments;for(let h=0;h<u.length;h++){let d=u[h];e.clearColor?(d.clearValue=h===0?e.clearColorValue:{r:0,g:0,b:0,a:1},d.loadOp=Fe.Clear,d.storeOp=lt.Store):(d.loadOp=Fe.Load,d.storeOp=lt.Store)}}else{let u=r.colorAttachments[0];e.clearColor?(u.clearValue=e.clearColorValue,u.loadOp=Fe.Clear,u.storeOp=lt.Store):(u.loadOp=Fe.Load,u.storeOp=lt.Store)}e.depth&&(e.clearDepth?(c.depthClearValue=e.clearDepthValue,c.depthLoadOp=Fe.Clear,c.depthStoreOp=lt.Store):(c.depthLoadOp=Fe.Load,c.depthStoreOp=lt.Store)),e.stencil&&(e.clearStencil?(c.stencilClearValue=e.clearStencilValue,c.stencilLoadOp=Fe.Clear,c.stencilStoreOp=lt.Store):(c.stencilLoadOp=Fe.Load,c.stencilStoreOp=lt.Store));let a=n.createCommandEncoder({label:"renderContext_"+e.id}),l=a.beginRenderPass(r);if(t.descriptor=r,t.encoder=a,t.currentPass=l,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){let{x:u,y:h,width:d,height:f}=e.scissorValue;l.setScissorRect(u,h,d,f)}}finishRender(e){let t=this.get(e),n=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),n>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),n>0){let i=n*8,s=this.occludedResolveCache.get(i);s===void 0&&(s=this.device.createBuffer({size:i,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(i,s));let r=this.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,n,s,0),t.encoder.copyBufferToBuffer(s,0,r,0,i),t.occlusionQueryBuffer=r,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),e.textures!==null){let i=e.textures;for(let s=0;s<i.length;s++){let r=i[s];r.generateMipmaps===!0&&this.textureUtils.generateMipmaps(r)}}}isOccluded(e,t){let n=this.get(e);return n.occluded&&n.occluded.has(t)}async resolveOccludedAsync(e){let t=this.get(e),{currentOcclusionQueryBuffer:n,currentOcclusionQueryObjects:i}=t;if(n&&i){let s=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await n.mapAsync(GPUMapMode.READ);let r=n.getMappedRange(),c=new BigUint64Array(r);for(let a=0;a<i.length;a++)c[a]===BigInt(0)&&s.add(i[a]);n.destroy(),t.occluded=s}}updateViewport(e){let{currentPass:t}=this.get(e),{x:n,y:i,width:s,height:r,minDepth:c,maxDepth:a}=e.viewportValue;t.setViewport(n,i,s,r,c,a)}clear(e,t,n,i=null){let s=this.device,r=this.renderer,c=[],a,l,u,h;if(e){let m=this.getClearColor();if(this.renderer.alpha===!0){let g=m.a;l={r:m.r*g,g:m.g*g,b:m.b*g,a:g}}else l={r:m.r,g:m.g,b:m.b,a:m.a}}if(i===null){u=r.depth,h=r.stencil;let m=this._getDefaultRenderPassDescriptor();if(e){c=m.colorAttachments;let g=c[0];g.clearValue=l,g.loadOp=Fe.Clear,g.storeOp=lt.Store}(u||h)&&(a=m.depthStencilAttachment)}else u=i.depth,h=i.stencil,e&&(c=this._getRenderPassDescriptor(i,{loadOp:Fe.Clear,clearValue:l}).colorAttachments),(u||h)&&(a={view:this.get(i.depthTexture).texture.createView()});u&&(t?(a.depthLoadOp=Fe.Clear,a.depthClearValue=r.getClearDepth(),a.depthStoreOp=lt.Store):(a.depthLoadOp=Fe.Load,a.depthStoreOp=lt.Store)),h&&(n?(a.stencilLoadOp=Fe.Clear,a.stencilClearValue=r.getClearStencil(),a.stencilStoreOp=lt.Store):(a.stencilLoadOp=Fe.Load,a.stencilStoreOp=lt.Store));let d=s.createCommandEncoder({label:"clear"});d.beginRenderPass({colorAttachments:c,depthStencilAttachment:a}).end(),s.queue.submit([d.finish()])}beginCompute(e){let t=this.get(e),n={label:"computeGroup_"+e.id};this.initTimestampQuery(e,n),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(n)}compute(e,t,n,i){let{passEncoderGPU:s}=this.get(e),r=this.get(i).pipeline;s.setPipeline(r);for(let u=0,h=n.length;u<h;u++){let d=n[u],f=this.get(d);s.setBindGroup(u,f.group)}let c=this.device.limits.maxComputeWorkgroupsPerDimension,a=this.get(t);a.dispatchSize===void 0&&(a.dispatchSize={x:0,y:1,z:1});let{dispatchSize:l}=a;t.dispatchCount>c?(l.x=Math.min(t.dispatchCount,c),l.y=Math.ceil(t.dispatchCount/c)):l.x=t.dispatchCount,s.dispatchWorkgroups(l.x,l.y,l.z)}finishCompute(e){let t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){let{object:n,context:i,pipeline:s}=e,r=e.getBindings(),c=this.get(i),a=this.get(s).pipeline,l=c.currentSets,u=c.currentPass,h=e.getDrawParameters();if(h===null)return;l.pipeline!==a&&(u.setPipeline(a),l.pipeline=a);let d=l.bindingGroups;for(let x=0,T=r.length;x<T;x++){let A=r[x],E=this.get(A);d[A.index]!==A.id&&(u.setBindGroup(A.index,E.group),d[A.index]=A.id)}let f=e.getIndex(),m=f!==null;if(m===!0&&l.index!==f){let x=this.get(f).buffer,T=f.array instanceof Uint16Array?xo.Uint16:xo.Uint32;u.setIndexBuffer(x,T),l.index=f}let g=e.getVertexBuffers();for(let x=0,T=g.length;x<T;x++){let A=g[x];if(l.attributes[x]!==A){let E=this.get(A).buffer;u.setVertexBuffer(x,E),l.attributes[x]=A}}if(c.occlusionQuerySet!==void 0){let x=c.lastOcclusionObject;x!==n&&(x!==null&&x.occlusionTest===!0&&(u.endOcclusionQuery(),c.occlusionQueryIndex++),n.occlusionTest===!0&&(u.beginOcclusionQuery(c.occlusionQueryIndex),c.occlusionQueryObjects[c.occlusionQueryIndex]=n),c.lastOcclusionObject=n)}let _=()=>{if(n.isBatchedMesh===!0){let x=n._multiDrawStarts,T=n._multiDrawCounts,A=n._multiDrawCount,E=n._multiDrawInstances;for(let N=0;N<A;N++){let R=E?E[N]:1,P=R>1?0:N;m===!0?u.drawIndexed(T[N],R,x[N]/f.array.BYTES_PER_ELEMENT,0,P):u.draw(T[N],R,x[N],P)}}else if(m===!0){let{vertexCount:x,instanceCount:T,firstVertex:A}=h,E=e.getIndirect();if(E!==null){let N=this.get(E).buffer;u.drawIndexedIndirect(N,0)}else u.drawIndexed(x,T,A,0,0);t.update(n,x,T)}else{let{vertexCount:x,instanceCount:T,firstVertex:A}=h,E=e.getIndirect();if(E!==null){let N=this.get(E).buffer;u.drawIndirect(N,0)}else u.draw(x,T,A,0);t.update(n,x,T)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){let x=this.get(e.camera),T=e.camera.cameras,A=e.getBindingGroup("cameraIndex");if(x.indexesGPU===void 0||x.indexesGPU.length!==T.length){let N=this.get(A),R=[],P=new Uint32Array([0,0,0,0]);for(let I=0,G=T.length;I<G;I++){P[0]=I;let z=this.bindingUtils.createBindGroupIndex(P,N.layout);R.push(z)}x.indexesGPU=R}let E=this.renderer.getPixelRatio();for(let N=0,R=T.length;N<R;N++){let P=T[N];if(n.layers.test(P.layers)){let I=P.viewport;u.setViewport(Math.floor(I.x*E),Math.floor(I.y*E),Math.floor(I.width*E),Math.floor(I.height*E),i.viewportValue.minDepth,i.viewportValue.maxDepth),u.setBindGroup(A.index,x.indexesGPU[N]),_()}}}else _()}needsRenderUpdate(e){let t=this.get(e),{object:n,material:i}=e,s=this.utils,r=s.getSampleCountRenderContext(e.context),c=s.getCurrentColorSpace(e.context),a=s.getCurrentColorFormat(e.context),l=s.getCurrentDepthStencilFormat(e.context),u=s.getPrimitiveTopology(n,i),h=!1;return(t.material!==i||t.materialVersion!==i.version||t.transparent!==i.transparent||t.blending!==i.blending||t.premultipliedAlpha!==i.premultipliedAlpha||t.blendSrc!==i.blendSrc||t.blendDst!==i.blendDst||t.blendEquation!==i.blendEquation||t.blendSrcAlpha!==i.blendSrcAlpha||t.blendDstAlpha!==i.blendDstAlpha||t.blendEquationAlpha!==i.blendEquationAlpha||t.colorWrite!==i.colorWrite||t.depthWrite!==i.depthWrite||t.depthTest!==i.depthTest||t.depthFunc!==i.depthFunc||t.stencilWrite!==i.stencilWrite||t.stencilFunc!==i.stencilFunc||t.stencilFail!==i.stencilFail||t.stencilZFail!==i.stencilZFail||t.stencilZPass!==i.stencilZPass||t.stencilFuncMask!==i.stencilFuncMask||t.stencilWriteMask!==i.stencilWriteMask||t.side!==i.side||t.alphaToCoverage!==i.alphaToCoverage||t.sampleCount!==r||t.colorSpace!==c||t.colorFormat!==a||t.depthStencilFormat!==l||t.primitiveTopology!==u||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=i,t.materialVersion=i.version,t.transparent=i.transparent,t.blending=i.blending,t.premultipliedAlpha=i.premultipliedAlpha,t.blendSrc=i.blendSrc,t.blendDst=i.blendDst,t.blendEquation=i.blendEquation,t.blendSrcAlpha=i.blendSrcAlpha,t.blendDstAlpha=i.blendDstAlpha,t.blendEquationAlpha=i.blendEquationAlpha,t.colorWrite=i.colorWrite,t.depthWrite=i.depthWrite,t.depthTest=i.depthTest,t.depthFunc=i.depthFunc,t.stencilWrite=i.stencilWrite,t.stencilFunc=i.stencilFunc,t.stencilFail=i.stencilFail,t.stencilZFail=i.stencilZFail,t.stencilZPass=i.stencilZPass,t.stencilFuncMask=i.stencilFuncMask,t.stencilWriteMask=i.stencilWriteMask,t.side=i.side,t.alphaToCoverage=i.alphaToCoverage,t.sampleCount=r,t.colorSpace=c,t.colorFormat=a,t.depthStencilFormat=l,t.primitiveTopology=u,t.clippingContextCacheKey=e.clippingContextCacheKey,h=!0),h}getRenderCacheKey(e){let{object:t,material:n}=e,i=this.utils,s=e.context;return[n.transparent,n.blending,n.premultipliedAlpha,n.blendSrc,n.blendDst,n.blendEquation,n.blendSrcAlpha,n.blendDstAlpha,n.blendEquationAlpha,n.colorWrite,n.depthWrite,n.depthTest,n.depthFunc,n.stencilWrite,n.stencilFunc,n.stencilFail,n.stencilZFail,n.stencilZPass,n.stencilFuncMask,n.stencilWriteMask,n.side,i.getSampleCountRenderContext(s),i.getCurrentColorSpace(s),i.getCurrentColorFormat(s),i.getCurrentDepthStencilFormat(s),i.getPrimitiveTopology(t,n),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,n,i,s,r){return this.textureUtils.copyTextureToBuffer(e,t,n,i,s,r)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;let n=e.isComputeNode?"compute":"render";this.timestampQueryPool[n]||(this.timestampQueryPool[n]=new b_(this.device,n,2048));let i=this.timestampQueryPool[n],s=i.allocateQueriesForContext(e);t.timestampWrites={querySet:i.querySet,beginningOfPassWriteIndex:s,endOfPassWriteIndex:s+1}}createNodeBuilder(e,t){return new x_(e,t)}createProgram(e){let t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){let t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){let n=this.get(e),s=n.currentPass.finish();this.get(t).bundleGPU=s,n.currentSets=n._currentSets,n.currentPass=n._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBindings(e,t,n,i){this.bindingUtils.createBindings(e,t,n,i)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,n=null,i=null,s=0){let r=0,c=0,a=0,l=0,u=0,h=0,d=e.image.width,f=e.image.height;n!==null&&(l=n.x,u=n.y,h=n.z||0,d=n.width,f=n.height),i!==null&&(r=i.x,c=i.y,a=i.z||0);let m=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),g=this.get(e).texture,_=this.get(t).texture;m.copyTextureToTexture({texture:g,mipLevel:s,origin:{x:l,y:u,z:h}},{texture:_,mipLevel:s,origin:{x:r,y:c,z:a}},[d,f,1]),this.device.queue.submit([m.finish()])}copyFramebufferToTexture(e,t,n){let i=this.get(t),s=null;t.renderTarget?e.isDepthTexture?s=this.get(t.depthTexture).texture:s=this.get(t.textures[0]).texture:e.isDepthTexture?s=this.textureUtils.getDepthBuffer(t.depth,t.stencil):s=this.context.getCurrentTexture();let r=this.get(e).texture;if(s.format!==r.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",s.format,r.format);return}let c;if(i.currentPass?(i.currentPass.end(),c=i.encoder):c=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),c.copyTextureToTexture({texture:s,origin:[n.x,n.y,0]},{texture:r},[n.z,n.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),i.currentPass){let{descriptor:a}=i;for(let l=0;l<a.colorAttachments.length;l++)a.colorAttachments[l].loadOp=Fe.Load;if(t.depth&&(a.depthStencilAttachment.depthLoadOp=Fe.Load),t.stencil&&(a.depthStencilAttachment.stencilLoadOp=Fe.Load),i.currentPass=c.beginRenderPass(a),i.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){let{x:l,y:u,width:h,height:d}=t.scissorValue;i.currentPass.setScissorRect(l,u,h,d)}}else this.device.queue.submit([c.finish()])}},A_=class extends Mr{constructor(e,t,n,i,s,r){super(e,t,n,i,s,r),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}},E_=class extends mh{constructor(){super(),this.addMaterial(Jp,"MeshPhongMaterial"),this.addMaterial(go,"MeshStandardMaterial"),this.addMaterial(am,"MeshPhysicalMaterial"),this.addMaterial(lm,"MeshToonMaterial"),this.addMaterial(jp,"MeshBasicMaterial"),this.addMaterial(Qp,"MeshLambertMaterial"),this.addMaterial($p,"MeshNormalMaterial"),this.addMaterial(hm,"MeshMatcapMaterial"),this.addMaterial(Wp,"LineBasicMaterial"),this.addMaterial(qp,"LineDashedMaterial"),this.addMaterial(fm,"PointsMaterial"),this.addMaterial(Zu,"SpriteMaterial"),this.addMaterial(mm,"ShadowMaterial"),this.addLight(dg,fa),this.addLight(Ug,pa),this.addLight(Bg,ma),this.addLight(dh,Mr),this.addLight(Vg,_s),this.addLight(Gg,ms),this.addLight(zg,_a),this.addLight(Og,A_),this.addToneMapping(LS,Od),this.addToneMapping(FS,Vd),this.addToneMapping(US,Gd),this.addToneMapping(BS,zd),this.addToneMapping(OS,kd),this.addToneMapping(VS,Hd)}},Eh=class extends Kg{constructor(e={}){let t;e.forceWebGL?t=Ah:(t=M_,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new Ah(e)));let n=new t(e);super(n,e),this.library=new E_,this.isWebGPURenderer=!0}};var kI=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,HI=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,WI=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,qI=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,XI=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,$I=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,YI=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,KI=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,ZI=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,jI=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,QI=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,JI=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,eD=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,tD=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,nD=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,iD=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,sD=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,rD=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,oD=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,aD=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,cD=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,lD=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,uD=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,hD=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,dD=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,fD=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,pD=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,mD=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,gD=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,_D=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,xD="gl_FragColor = linearToOutputTexel( gl_FragColor );",yD=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,vD=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,TD=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,SD=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,bD=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,MD=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,AD=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,ED=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,wD=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,RD=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,CD=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ND=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,PD=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,ID=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,DD=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,LD=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,FD=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,UD=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,BD=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,OD=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,VD=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,GD=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,zD=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,kD=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,HD=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,WD=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,qD=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,XD=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,$D=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,YD=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,KD=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,ZD=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,jD=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,QD=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,JD=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,eL=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,tL=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,nL=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,iL=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,sL=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,rL=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,oL=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,aL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,cL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,lL=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,uL=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,hL=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,dL=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,fL=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,pL=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,mL=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,gL=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,_L=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,xL=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,yL=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,vL=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,TL=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,SL=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,bL=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,ML=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,AL=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,EL=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,wL=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,RL=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,CL=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,NL=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,PL=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,IL=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,DL=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,LL=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,FL=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,UL=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,BL=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,OL=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,VL=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,GL=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,zL=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,kL=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,HL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,WL=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,qL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,XL=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,$L=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,YL=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,KL=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,ZL=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,jL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,QL=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,JL=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,eF=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,tF=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,nF=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iF=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sF=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rF=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,oF=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aF=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,cF=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,lF=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,uF=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,hF=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,dF=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fF=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,pF=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mF=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,gF=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,_F=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,xF=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,yF=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,vF=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,le={alphahash_fragment:kI,alphahash_pars_fragment:HI,alphamap_fragment:WI,alphamap_pars_fragment:qI,alphatest_fragment:XI,alphatest_pars_fragment:$I,aomap_fragment:YI,aomap_pars_fragment:KI,batching_pars_vertex:ZI,batching_vertex:jI,begin_vertex:QI,beginnormal_vertex:JI,bsdfs:eD,iridescence_fragment:tD,bumpmap_pars_fragment:nD,clipping_planes_fragment:iD,clipping_planes_pars_fragment:sD,clipping_planes_pars_vertex:rD,clipping_planes_vertex:oD,color_fragment:aD,color_pars_fragment:cD,color_pars_vertex:lD,color_vertex:uD,common:hD,cube_uv_reflection_fragment:dD,defaultnormal_vertex:fD,displacementmap_pars_vertex:pD,displacementmap_vertex:mD,emissivemap_fragment:gD,emissivemap_pars_fragment:_D,colorspace_fragment:xD,colorspace_pars_fragment:yD,envmap_fragment:vD,envmap_common_pars_fragment:TD,envmap_pars_fragment:SD,envmap_pars_vertex:bD,envmap_physical_pars_fragment:LD,envmap_vertex:MD,fog_vertex:AD,fog_pars_vertex:ED,fog_fragment:wD,fog_pars_fragment:RD,gradientmap_pars_fragment:CD,lightmap_pars_fragment:ND,lights_lambert_fragment:PD,lights_lambert_pars_fragment:ID,lights_pars_begin:DD,lights_toon_fragment:FD,lights_toon_pars_fragment:UD,lights_phong_fragment:BD,lights_phong_pars_fragment:OD,lights_physical_fragment:VD,lights_physical_pars_fragment:GD,lights_fragment_begin:zD,lights_fragment_maps:kD,lights_fragment_end:HD,logdepthbuf_fragment:WD,logdepthbuf_pars_fragment:qD,logdepthbuf_pars_vertex:XD,logdepthbuf_vertex:$D,map_fragment:YD,map_pars_fragment:KD,map_particle_fragment:ZD,map_particle_pars_fragment:jD,metalnessmap_fragment:QD,metalnessmap_pars_fragment:JD,morphinstance_vertex:eL,morphcolor_vertex:tL,morphnormal_vertex:nL,morphtarget_pars_vertex:iL,morphtarget_vertex:sL,normal_fragment_begin:rL,normal_fragment_maps:oL,normal_pars_fragment:aL,normal_pars_vertex:cL,normal_vertex:lL,normalmap_pars_fragment:uL,clearcoat_normal_fragment_begin:hL,clearcoat_normal_fragment_maps:dL,clearcoat_pars_fragment:fL,iridescence_pars_fragment:pL,opaque_fragment:mL,packing:gL,premultiplied_alpha_fragment:_L,project_vertex:xL,dithering_fragment:yL,dithering_pars_fragment:vL,roughnessmap_fragment:TL,roughnessmap_pars_fragment:SL,shadowmap_pars_fragment:bL,shadowmap_pars_vertex:ML,shadowmap_vertex:AL,shadowmask_pars_fragment:EL,skinbase_vertex:wL,skinning_pars_vertex:RL,skinning_vertex:CL,skinnormal_vertex:NL,specularmap_fragment:PL,specularmap_pars_fragment:IL,tonemapping_fragment:DL,tonemapping_pars_fragment:LL,transmission_fragment:FL,transmission_pars_fragment:UL,uv_pars_fragment:BL,uv_pars_vertex:OL,uv_vertex:VL,worldpos_vertex:GL,background_vert:zL,background_frag:kL,backgroundCube_vert:HL,backgroundCube_frag:WL,cube_vert:qL,cube_frag:XL,depth_vert:$L,depth_frag:YL,distanceRGBA_vert:KL,distanceRGBA_frag:ZL,equirect_vert:jL,equirect_frag:QL,linedashed_vert:JL,linedashed_frag:eF,meshbasic_vert:tF,meshbasic_frag:nF,meshlambert_vert:iF,meshlambert_frag:sF,meshmatcap_vert:rF,meshmatcap_frag:oF,meshnormal_vert:aF,meshnormal_frag:cF,meshphong_vert:lF,meshphong_frag:uF,meshphysical_vert:hF,meshphysical_frag:dF,meshtoon_vert:fF,meshtoon_frag:pF,points_vert:mF,points_frag:gF,shadow_vert:_F,shadow_frag:xF,sprite_vert:yF,sprite_frag:vF},k={common:{diffuse:{value:new q(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Q},alphaMap:{value:null},alphaMapTransform:{value:new Q},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Q}},envmap:{envMap:{value:null},envMapRotation:{value:new Q},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Q}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Q}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Q},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Q},normalScale:{value:new H(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Q},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Q}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Q}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Q}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new q(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new q(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Q},alphaTest:{value:0},uvTransform:{value:new Q}},sprite:{diffuse:{value:new q(16777215)},opacity:{value:1},center:{value:new H(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Q},alphaMap:{value:null},alphaMapTransform:{value:new Q},alphaTest:{value:0}}},lb={basic:{uniforms:vt([k.common,k.specularmap,k.envmap,k.aomap,k.lightmap,k.fog]),vertexShader:le.meshbasic_vert,fragmentShader:le.meshbasic_frag},lambert:{uniforms:vt([k.common,k.specularmap,k.envmap,k.aomap,k.lightmap,k.emissivemap,k.bumpmap,k.normalmap,k.displacementmap,k.fog,k.lights,{emissive:{value:new q(0)}}]),vertexShader:le.meshlambert_vert,fragmentShader:le.meshlambert_frag},phong:{uniforms:vt([k.common,k.specularmap,k.envmap,k.aomap,k.lightmap,k.emissivemap,k.bumpmap,k.normalmap,k.displacementmap,k.fog,k.lights,{emissive:{value:new q(0)},specular:{value:new q(1118481)},shininess:{value:30}}]),vertexShader:le.meshphong_vert,fragmentShader:le.meshphong_frag},standard:{uniforms:vt([k.common,k.envmap,k.aomap,k.lightmap,k.emissivemap,k.bumpmap,k.normalmap,k.displacementmap,k.roughnessmap,k.metalnessmap,k.fog,k.lights,{emissive:{value:new q(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:le.meshphysical_vert,fragmentShader:le.meshphysical_frag},toon:{uniforms:vt([k.common,k.aomap,k.lightmap,k.emissivemap,k.bumpmap,k.normalmap,k.displacementmap,k.gradientmap,k.fog,k.lights,{emissive:{value:new q(0)}}]),vertexShader:le.meshtoon_vert,fragmentShader:le.meshtoon_frag},matcap:{uniforms:vt([k.common,k.bumpmap,k.normalmap,k.displacementmap,k.fog,{matcap:{value:null}}]),vertexShader:le.meshmatcap_vert,fragmentShader:le.meshmatcap_frag},points:{uniforms:vt([k.points,k.fog]),vertexShader:le.points_vert,fragmentShader:le.points_frag},dashed:{uniforms:vt([k.common,k.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:le.linedashed_vert,fragmentShader:le.linedashed_frag},depth:{uniforms:vt([k.common,k.displacementmap]),vertexShader:le.depth_vert,fragmentShader:le.depth_frag},normal:{uniforms:vt([k.common,k.bumpmap,k.normalmap,k.displacementmap,{opacity:{value:1}}]),vertexShader:le.meshnormal_vert,fragmentShader:le.meshnormal_frag},sprite:{uniforms:vt([k.sprite,k.fog]),vertexShader:le.sprite_vert,fragmentShader:le.sprite_frag},background:{uniforms:{uvTransform:{value:new Q},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:le.background_vert,fragmentShader:le.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Q}},vertexShader:le.backgroundCube_vert,fragmentShader:le.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:le.cube_vert,fragmentShader:le.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:le.equirect_vert,fragmentShader:le.equirect_frag},distanceRGBA:{uniforms:vt([k.common,k.displacementmap,{referencePosition:{value:new M},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:le.distanceRGBA_vert,fragmentShader:le.distanceRGBA_frag},shadow:{uniforms:vt([k.lights,k.fog,{color:{value:new q(0)},opacity:{value:1}}]),vertexShader:le.shadow_vert,fragmentShader:le.shadow_frag}};lb.physical={uniforms:vt([lb.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Q},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Q},clearcoatNormalScale:{value:new H(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Q},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Q},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Q},sheen:{value:0},sheenColor:{value:new q(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Q},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Q},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Q},transmissionSamplerSize:{value:new H},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Q},attenuationDistance:{value:0},attenuationColor:{value:new q(0)},specularColor:{value:new q(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Q},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Q},anisotropyVector:{value:new H},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Q}}]),vertexShader:le.meshphysical_vert,fragmentShader:le.meshphysical_frag};var Xs=(1+Math.sqrt(5))/2,To=1/Xs,sU=[new M(-Xs,To,0),new M(Xs,To,0),new M(-To,0,Xs),new M(To,0,Xs),new M(0,Xs,-To),new M(0,Xs,To),new M(-1,1,-1),new M(1,1,-1),new M(-1,1,1),new M(1,1,1)];var rU=new Float32Array(16),oU=new Float32Array(9),aU=new Float32Array(4);var cU={[Ir]:Dr,[Lr]:Br,[Fr]:Or,[Pi]:Ur,[Dr]:Ir,[Br]:Lr,[Or]:Fr,[Ur]:Pi};var ub={type:"change"},Dx={type:"start"},db={type:"end"},Yh=new ls,hb=new Tt,TF=Math.cos(70*Hr.DEG2RAD),Ye=new M,Nt=2*Math.PI,_e={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},Ix=1e-6,Kh=class extends Er{constructor(e,t=null){super(e,t),this.state=_e.NONE,this.enabled=!0,this.target=new M,this.cursor=new M,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ai.ROTATE,MIDDLE:ai.DOLLY,RIGHT:ai.PAN},this.touches={ONE:ci.ROTATE,TWO:ci.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new M,this._lastQuaternion=new Bt,this._lastTargetPosition=new M,this._quat=new Bt().setFromUnitVectors(e.up,new M(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new xs,this._sphericalDelta=new xs,this._scale=1,this._panOffset=new M,this._rotateStart=new H,this._rotateEnd=new H,this._rotateDelta=new H,this._panStart=new H,this._panEnd=new H,this._panDelta=new H,this._dollyStart=new H,this._dollyEnd=new H,this._dollyDelta=new H,this._dollyDirection=new M,this._mouse=new H,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=bF.bind(this),this._onPointerDown=SF.bind(this),this._onPointerUp=MF.bind(this),this._onContextMenu=PF.bind(this),this._onMouseWheel=wF.bind(this),this._onKeyDown=RF.bind(this),this._onTouchStart=CF.bind(this),this._onTouchMove=NF.bind(this),this._onMouseDown=AF.bind(this),this._onMouseMove=EF.bind(this),this._interceptControlDown=IF.bind(this),this._interceptControlUp=DF.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(ub),this.update(),this.state=_e.NONE}update(e=null){let t=this.object.position;Ye.copy(t).sub(this.target),Ye.applyQuaternion(this._quat),this._spherical.setFromVector3(Ye),this.autoRotate&&this.state===_e.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=Nt:n>Math.PI&&(n-=Nt),i<-Math.PI?i+=Nt:i>Math.PI&&(i-=Nt),n<=i?this._spherical.theta=Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{let r=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=r!=this._spherical.radius}if(Ye.setFromSpherical(this._spherical),Ye.applyQuaternion(this._quatInverse),t.copy(this.target).add(Ye),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let r=null;if(this.object.isPerspectiveCamera){let c=Ye.length();r=this._clampDistance(c*this._scale);let a=c-r;this.object.position.addScaledVector(this._dollyDirection,a),this.object.updateMatrixWorld(),s=!!a}else if(this.object.isOrthographicCamera){let c=new M(this._mouse.x,this._mouse.y,0);c.unproject(this.object);let a=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=a!==this.object.zoom;let l=new M(this._mouse.x,this._mouse.y,0);l.unproject(this.object),this.object.position.sub(l).add(c),this.object.updateMatrixWorld(),r=Ye.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;r!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(r).add(this.object.position):(Yh.origin.copy(this.object.position),Yh.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Yh.direction))<TF?this.object.lookAt(this.target):(hb.setFromNormalAndCoplanarPoint(this.object.up,this.target),Yh.intersectPlane(hb,this.target))))}else if(this.object.isOrthographicCamera){let r=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),r!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>Ix||8*(1-this._lastQuaternion.dot(this.object.quaternion))>Ix||this._lastTargetPosition.distanceToSquared(this.target)>Ix?(this.dispatchEvent(ub),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?Nt/60*this.autoRotateSpeed*e:Nt/60/60*this.autoRotateSpeed}_getZoomScale(e){let t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Ye.setFromMatrixColumn(t,0),Ye.multiplyScalar(-e),this._panOffset.add(Ye)}_panUp(e,t){this.screenSpacePanning===!0?Ye.setFromMatrixColumn(t,1):(Ye.setFromMatrixColumn(t,0),Ye.crossVectors(this.object.up,Ye)),Ye.multiplyScalar(e),this._panOffset.add(Ye)}_pan(e,t){let n=this.domElement;if(this.object.isPerspectiveCamera){let i=this.object.position;Ye.copy(i).sub(this.target);let s=Ye.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*s/n.clientHeight,this.object.matrix),this._panUp(2*t*s/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;let n=this.domElement.getBoundingClientRect(),i=e-n.left,s=t-n.top,r=n.width,c=n.height;this._mouse.x=i/r*2-1,this._mouse.y=-(s/c)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);let t=this.domElement;this._rotateLeft(Nt*this._rotateDelta.x/t.clientHeight),this._rotateUp(Nt*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(Nt*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-Nt*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(Nt*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-Nt*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{let t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{let t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panStart.set(n,i)}}_handleTouchStartDolly(e){let t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,s=Math.sqrt(n*n+i*i);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{let n=this._getSecondPointerPosition(e),i=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._rotateEnd.set(i,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);let t=this.domElement;this._rotateLeft(Nt*this._rotateDelta.x/t.clientHeight),this._rotateUp(Nt*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{let t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){let t=this._getSecondPointerPosition(e),n=e.pageX-t.x,i=e.pageY-t.y,s=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);let r=(e.pageX+t.x)*.5,c=(e.pageY+t.y)*.5;this._updateZoomParameters(r,c)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new H,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){let t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){let t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}};function SF(o){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(o.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(o)&&(this._addPointer(o),o.pointerType==="touch"?this._onTouchStart(o):this._onMouseDown(o)))}function bF(o){this.enabled!==!1&&(o.pointerType==="touch"?this._onTouchMove(o):this._onMouseMove(o))}function MF(o){switch(this._removePointer(o),this._pointers.length){case 0:this.domElement.releasePointerCapture(o.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(db),this.state=_e.NONE;break;case 1:let e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function AF(o){let e;switch(o.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case ai.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(o),this.state=_e.DOLLY;break;case ai.ROTATE:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=_e.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=_e.ROTATE}break;case ai.PAN:if(o.ctrlKey||o.metaKey||o.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(o),this.state=_e.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(o),this.state=_e.PAN}break;default:this.state=_e.NONE}this.state!==_e.NONE&&this.dispatchEvent(Dx)}function EF(o){switch(this.state){case _e.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(o);break;case _e.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(o);break;case _e.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(o);break}}function wF(o){this.enabled===!1||this.enableZoom===!1||this.state!==_e.NONE||(o.preventDefault(),this.dispatchEvent(Dx),this._handleMouseWheel(this._customWheelEvent(o)),this.dispatchEvent(db))}function RF(o){this.enabled!==!1&&this._handleKeyDown(o)}function CF(o){switch(this._trackPointer(o),this._pointers.length){case 1:switch(this.touches.ONE){case ci.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(o),this.state=_e.TOUCH_ROTATE;break;case ci.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(o),this.state=_e.TOUCH_PAN;break;default:this.state=_e.NONE}break;case 2:switch(this.touches.TWO){case ci.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(o),this.state=_e.TOUCH_DOLLY_PAN;break;case ci.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(o),this.state=_e.TOUCH_DOLLY_ROTATE;break;default:this.state=_e.NONE}break;default:this.state=_e.NONE}this.state!==_e.NONE&&this.dispatchEvent(Dx)}function NF(o){switch(this._trackPointer(o),this.state){case _e.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(o),this.update();break;case _e.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(o),this.update();break;case _e.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(o),this.update();break;case _e.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(o),this.update();break;default:this.state=_e.NONE}}function PF(o){this.enabled!==!1&&o.preventDefault()}function IF(o){o.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function DF(o){o.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}var pU=p.BRDF_GGX,mU=p.BRDF_Lambert,gU=p.BasicShadowFilter,_U=p.Break,xU=p.Continue,yU=p.DFGApprox,vU=p.D_GGX,TU=p.Discard,SU=p.EPSILON,bU=p.F_Schlick,Ve=p.Fn,MU=p.INFINITY,Lx=p.If,fb=p.Loop,AU=p.NodeShaderStage,EU=p.NodeType,wU=p.NodeUpdateType,RU=p.NodeAccess,CU=p.PCFShadowFilter,NU=p.PCFSoftShadowFilter,PU=p.PI,IU=p.PI2,DU=p.Return,LU=p.Schlick_to_F0,FU=p.ScriptableNodeResources,UU=p.ShaderNode,BU=p.TBNViewMatrix,OU=p.VSMShadowFilter,VU=p.V_GGX_SmithCorrelated,GU=p.abs,zU=p.acesFilmicToneMapping,pb=p.acos,Ti=p.add,kU=p.addNodeElement,HU=p.agxToneMapping,WU=p.all,qU=p.alphaT,XU=p.and,$U=p.anisotropy,YU=p.anisotropyB,KU=p.anisotropyT,ZU=p.any,jU=p.append,QU=p.array,JU=p.arrayBuffer,e2=p.asin,t2=p.assign,n2=p.atan,i2=p.atan2,s2=p.atomicAdd,r2=p.atomicAnd,o2=p.atomicFunc,a2=p.atomicMax,c2=p.atomicMin,l2=p.atomicOr,u2=p.atomicStore,h2=p.atomicSub,d2=p.atomicXor,f2=p.atomicLoad,p2=p.attenuationColor,m2=p.attenuationDistance,g2=p.attribute,_2=p.attributeArray,x2=p.backgroundBlurriness,y2=p.backgroundIntensity,v2=p.backgroundRotation,T2=p.batch,S2=p.billboarding,b2=p.bitAnd,M2=p.bitNot,A2=p.bitOr,E2=p.bitXor,w2=p.bitangentGeometry,R2=p.bitangentLocal,C2=p.bitangentView,N2=p.bitangentWorld,P2=p.bitcast,I2=p.blendBurn,D2=p.blendColor,L2=p.blendDodge,F2=p.blendOverlay,U2=p.blendScreen,B2=p.blur,O2=p.bool,V2=p.buffer,G2=p.bufferAttribute,z2=p.bumpMap,k2=p.burn,H2=p.bvec2,W2=p.bvec3,q2=p.bvec4,X2=p.bypass,$2=p.cache,Y2=p.call,K2=p.cameraFar,Z2=p.cameraIndex,j2=p.cameraNear,Q2=p.cameraNormalMatrix,J2=p.cameraPosition,eB=p.cameraProjectionMatrix,tB=p.cameraProjectionMatrixInverse,nB=p.cameraViewMatrix,iB=p.cameraWorldMatrix,sB=p.cbrt,rB=p.cdl,oB=p.ceil,aB=p.checker,cB=p.cineonToneMapping,lB=p.clamp,uB=p.clearcoat,hB=p.clearcoatRoughness,dB=p.code,fB=p.color,pB=p.colorSpaceToWorking,mB=p.colorToDirection,gB=p.compute,_B=p.cond,xB=p.Const,yB=p.context,vB=p.convert,TB=p.convertColorSpace,SB=p.convertToTexture,So=p.cos,Zh=p.cross,bB=p.cubeTexture,mb=p.dFdx,gb=p.dFdy,MB=p.dashSize,AB=p.defaultBuildStages,EB=p.defaultShaderStages,wB=p.defined,RB=p.degrees,CB=p.deltaTime,NB=p.densityFog,PB=p.densityFogFactor,IB=p.depth,DB=p.depthPass,LB=p.difference,FB=p.diffuseColor,UB=p.directPointLight,BB=p.directionToColor,OB=p.dispersion,_b=p.distance,VB=p.div,GB=p.dodge,zB=p.dot,kB=p.drawIndex,HB=p.dynamicBufferAttribute,WB=p.element,qB=p.emissive,XB=p.equal,$B=p.equals,YB=p.equirectUV,xb=p.exp,KB=p.exp2,ZB=p.expression,jB=p.faceDirection,QB=p.faceForward,JB=p.faceforward,Hn=p.float,e3=p.floor,t3=p.fog,n3=p.fract,i3=p.frameGroup,s3=p.frameId,r3=p.frontFacing,o3=p.fwidth,a3=p.gain,c3=p.gapSize,l3=p.getConstNodeType,u3=p.getCurrentStack,h3=p.getDirection,d3=p.getDistanceAttenuation,f3=p.getGeometryRoughness,p3=p.getNormalFromDepth,m3=p.getParallaxCorrectNormal,g3=p.getRoughness,_3=p.getScreenPosition,x3=p.getShIrradianceAt,y3=p.getTextureIndex,v3=p.getViewPosition,T3=p.glsl,S3=p.glslFn,b3=p.grayscale,M3=p.greaterThan,A3=p.greaterThanEqual,E3=p.hash,w3=p.highpModelNormalViewMatrix,R3=p.highpModelViewMatrix,C3=p.hue,N3=p.instance,P3=p.instanceIndex,I3=p.instancedArray,D3=p.instancedBufferAttribute,L3=p.instancedDynamicBufferAttribute,F3=p.instancedMesh,U3=p.int,B3=p.inverseSqrt,O3=p.inversesqrt,V3=p.invocationLocalIndex,G3=p.invocationSubgroupIndex,z3=p.ior,k3=p.iridescence,H3=p.iridescenceIOR,W3=p.iridescenceThickness,q3=p.ivec2,X3=p.ivec3,$3=p.ivec4,Y3=p.js,K3=p.label,Z3=p.length,j3=p.lengthSq,Q3=p.lessThan,J3=p.lessThanEqual,eO=p.lightPosition,tO=p.lightTargetDirection,nO=p.lightTargetPosition,iO=p.lightViewPosition,sO=p.lightingContext,rO=p.lights,oO=p.linearDepth,aO=p.linearToneMapping,cO=p.localId,lO=p.globalId,uO=p.log,Fx=p.log2,hO=p.logarithmicDepthToViewZ,dO=p.loop,fO=p.luminance,pO=p.mediumpModelViewMatrix,mO=p.mat2,gO=p.mat3,bo=p.mat4,_O=p.matcapUV,xO=p.materialAO,yO=p.materialAlphaTest,vO=p.materialAnisotropy,TO=p.materialAnisotropyVector,SO=p.materialAttenuationColor,bO=p.materialAttenuationDistance,MO=p.materialClearcoat,AO=p.materialClearcoatNormal,EO=p.materialClearcoatRoughness,wO=p.materialColor,RO=p.materialDispersion,CO=p.materialEmissive,NO=p.materialIOR,PO=p.materialIridescence,IO=p.materialIridescenceIOR,DO=p.materialIridescenceThickness,LO=p.materialLightMap,FO=p.materialLineDashOffset,UO=p.materialLineDashSize,BO=p.materialLineGapSize,OO=p.materialLineScale,VO=p.materialLineWidth,GO=p.materialMetalness,zO=p.materialNormal,kO=p.materialOpacity,HO=p.materialPointSize,WO=p.materialReference,qO=p.materialReflectivity,XO=p.materialRefractionRatio,$O=p.materialRotation,YO=p.materialRoughness,KO=p.materialSheen,ZO=p.materialSheenRoughness,jO=p.materialShininess,QO=p.materialSpecular,JO=p.materialSpecularColor,eV=p.materialSpecularIntensity,tV=p.materialSpecularStrength,nV=p.materialThickness,iV=p.materialTransmission,Mo=p.max,sV=p.maxMipLevel,rV=p.metalness,es=p.min,yb=p.mix,oV=p.mixElement,vb=p.mod,aV=p.modInt,cV=p.modelDirection,lV=p.modelNormalMatrix,uV=p.modelPosition,hV=p.modelScale,dV=p.modelViewMatrix,fV=p.modelViewPosition,pV=p.modelViewProjection,mV=p.modelWorldMatrix,gV=p.modelWorldMatrixInverse,_V=p.morphReference,xV=p.mrt,sn=p.mul,yV=p.mx_aastep,vV=p.mx_cell_noise_float,TV=p.mx_contrast,SV=p.mx_fractal_noise_float,bV=p.mx_fractal_noise_vec2,MV=p.mx_fractal_noise_vec3,AV=p.mx_fractal_noise_vec4,EV=p.mx_hsvtorgb,wV=p.mx_noise_float,RV=p.mx_noise_vec3,CV=p.mx_noise_vec4,NV=p.mx_ramplr,PV=p.mx_ramptb,IV=p.mx_rgbtohsv,DV=p.mx_safepower,LV=p.mx_splitlr,FV=p.mx_splittb,UV=p.mx_srgb_texture_to_lin_rec709,BV=p.mx_transform_uv,OV=p.mx_worley_noise_float,VV=p.mx_worley_noise_vec2,GV=p.mx_worley_noise_vec3,zV=p.negate,kV=p.neutralToneMapping,HV=p.nodeArray,WV=p.nodeImmutable,qV=p.nodeObject,XV=p.nodeObjects,$V=p.nodeProxy,YV=p.normalFlat,KV=p.normalGeometry,ZV=p.normalLocal,jV=p.normalMap,QV=p.normalView,JV=p.normalWorld,eG=p.normalize,tG=p.not,nG=p.notEqual,iG=p.numWorkgroups,sG=p.objectDirection,rG=p.objectGroup,oG=p.objectPosition,aG=p.objectScale,cG=p.objectViewPosition,lG=p.objectWorldMatrix,Ux=p.oneMinus,uG=p.or,hG=p.orthographicDepthToViewZ,dG=p.oscSawtooth,fG=p.oscSine,pG=p.oscSquare,mG=p.oscTriangle,gG=p.output,_G=p.outputStruct,xG=p.overlay,yG=p.overloadingFn,vG=p.parabola,TG=p.parallaxDirection,SG=p.parallaxUV,bG=p.parameter,MG=p.pass,AG=p.passTexture,EG=p.pcurve,wG=p.perspectiveDepthToViewZ,RG=p.pmremTexture,CG=p.pointUV,NG=p.pointWidth,jh=p.positionGeometry,PG=p.positionLocal,IG=p.positionPrevious,DG=p.positionView,LG=p.positionViewDirection,FG=p.positionWorld,UG=p.positionWorldDirection,BG=p.posterize,Qh=p.pow,OG=p.pow2,VG=p.pow3,GG=p.pow4,zG=p.property,kG=p.radians,HG=p.rand,WG=p.range,qG=p.rangeFog,XG=p.rangeFogFactor,$G=p.reciprocal,YG=p.reference,KG=p.referenceBuffer,ZG=p.reflect,jG=p.reflectVector,QG=p.reflectView,JG=p.reflector,ez=p.refract,tz=p.refractVector,nz=p.refractView,iz=p.reinhardToneMapping,sz=p.remainder,Tb=p.remap,rz=p.remapClamp,oz=p.renderGroup,az=p.renderOutput,cz=p.rendererReference,lz=p.rotate,uz=p.rotateUV,hz=p.roughness,dz=p.round,fz=p.rtt,pz=p.sRGBTransferEOTF,mz=p.sRGBTransferOETF,gz=p.sampler,_z=p.saturate,xz=p.saturation,yz=p.screen,vz=p.screenCoordinate,Tz=p.screenSize,Sz=p.screenUV,bz=p.scriptable,Mz=p.scriptableValue,Bx=p.select,Az=p.setCurrentStack,Ez=p.shaderStages,wz=p.shadow,Rz=p.shadowPositionWorld,Cz=p.sharedUniformGroup,Nz=p.shapeCircle,Pz=p.sheen,Iz=p.sheenRoughness,Dz=p.shiftLeft,Lz=p.shiftRight,Fz=p.shininess,Uz=p.sign,$s=p.sin,Bz=p.sinc,Oz=p.skinning,Vz=p.skinningReference,Jh=p.smoothstep,Gz=p.smoothstepElement,zz=p.specularColor,kz=p.specularF90,Hz=p.spherizeUV,Wz=p.split,qz=p.spritesheetUV,Xz=p.sqrt,$z=p.stack,Yz=p.step,Kz=p.storage,Zz=p.storageBarrier,jz=p.storageObject,Qz=p.storageTexture,Jz=p.string,ek=p.struct,Wn=p.sub,tk=p.subgroupIndex,nk=p.subgroupSize,ik=p.tan,sk=p.tangentGeometry,rk=p.tangentLocal,ok=p.tangentView,ak=p.tangentWorld,ck=p.temp,lk=p.texture,uk=p.texture3D,hk=p.textureBarrier,dk=p.textureBicubic,fk=p.textureCubeUV,pk=p.textureLoad,mk=p.textureSize,gk=p.textureStore,_k=p.thickness,xk=p.threshold,yk=p.time,vk=p.timerDelta,Tk=p.timerGlobal,Sk=p.timerLocal,bk=p.toOutputColorSpace,Mk=p.toWorkingColorSpace,Ak=p.toneMapping,Ek=p.toneMappingExposure,wk=p.toonOutlinePass,Rk=p.transformDirection,Ck=p.transformNormal,Sb=p.transformNormalToView,Nk=p.transformedBentNormalView,Pk=p.transformedBitangentView,Ik=p.transformedBitangentWorld,Dk=p.transformedClearcoatNormalView,Lk=p.transformedNormalView,Fk=p.transformedNormalWorld,Uk=p.transformedTangentView,Bk=p.transformedTangentWorld,Ok=p.transmission,Vk=p.transpose,Gk=p.tri,zk=p.tri3,kk=p.triNoise3D,Hk=p.triplanarTexture,Wk=p.triplanarTextures,qk=p.trunc,Xk=p.tslFn,$k=p.uint,LF=p.uniform,Yk=p.uniformArray,Kk=p.uniformGroup,Zk=p.uniforms,jk=p.userData,Qk=p.uv,Jk=p.uvec2,e4=p.uvec3,t4=p.uvec4,n4=p.Var,i4=p.varying,s4=p.varyingProperty,r4=p.vec2,ts=p.vec3,bb=p.vec4,o4=p.vectorComponents,a4=p.velocity,c4=p.vertexColor,l4=p.vertexIndex,u4=p.vibrance,h4=p.viewZToLogarithmicDepth,d4=p.viewZToOrthographicDepth,f4=p.viewZToPerspectiveDepth,p4=p.viewport,m4=p.viewportBottomLeft,g4=p.viewportCoordinate,_4=p.viewportDepthTexture,x4=p.viewportLinearDepth,y4=p.viewportMipTexture,v4=p.viewportResolution,T4=p.viewportSafeUV,S4=p.viewportSharedTexture,b4=p.viewportSize,M4=p.viewportTexture,A4=p.viewportTopLeft,E4=p.viewportUV,w4=p.wgsl,R4=p.wgslFn,C4=p.workgroupArray,N4=p.workgroupBarrier,P4=p.workgroupId,I4=p.workingToColorSpace,D4=p.xor;var ed=Ve(([o,e,t,n])=>{var i=n.add(o.mul(12)).mod(12),s=e.mul(es(t,Wn(1,t)));return t.sub(s.mul(Mo(-1,es(es(i.sub(3),Wn(9,i)),1))))});ed.setLayout({name:"hslHelper",type:"float",inputs:[{name:"h",type:"float"},{name:"s",type:"float"},{name:"l",type:"float"},{name:"n",type:"float"}]});var FF=Ve(([o,e,t])=>{o=o.fract().add(1).fract(),e=e.clamp(0,1),t=t.clamp(0,1);var n=ed(o,e,t,0),i=ed(o,e,t,8),s=ed(o,e,t,4);return ts(n,i,s)});FF.setLayout({name:"hsl",type:"vec3",inputs:[{name:"h",type:"float"},{name:"s",type:"float"},{name:"l",type:"float"}]});var B4=Ve(([o])=>{var e=Hn(o.x).toVar(),t=Hn(o.y).toVar(),n=Hn(o.z).toVar(),i=Mo(e,Mo(t,n)).toVar(),s=es(e,es(t,n)).toVar(),r=Hn(0).toVar(),c=Hn(0).toVar(),a=Ti(i,s).div(2);return Lx(s.notEqual(i),()=>{let l=Wn(i,s).toVar();c.assign(Bx(a.lessThanEqual(.5),l.div(Ti(s,i)),l.div(Wn(2,Ti(s,i))))),Lx(i.equal(e),()=>{r.assign(Wn(t,n).div(l).add(Bx(t.lessThanEqual(n),6,0)))}).ElseIf(i.equal(t),()=>{r.assign(Wn(n,e).div(l).add(2))}).Else(()=>{r.assign(Wn(e,t).div(l).add(4))}),r.divAssign(6)}),ts(r,c,a)});var td=Ve(([o,e])=>ts($s(e).mul($s(o)),So(o),So(e).mul($s(o))));td.setLayout({name:"spherical",type:"vec3",inputs:[{name:"phi",type:"float"},{name:"theta",type:"float"}]});var O4=Ve(([o,e])=>{var t=UF(e);return BF(o,t)}),UF=Ve(([o])=>{var e=So(o.x.div(2)),t=So(o.y.div(2)),n=So(o.z.div(2)),i=$s(o.x.div(2)),s=$s(o.y.div(2)),r=$s(o.z.div(2));return bb(Ti(sn(i,t,n),sn(e,s,r)),Wn(sn(e,s,n),sn(i,t,r)),Ti(sn(e,t,r),sn(i,s,n)),Wn(sn(e,t,n),sn(i,s,r)))}),BF=Ve(([o,e])=>{var t=Zh(e,o).mul(2).toVar();return Ti(o,t.mul(e.w),Zh(e.xyz,t))}),V4=Ve(([o,e,t,n,i])=>(o=Tb(o,e,t,0,1),o=Qh(2,sn(o,Fx(i.div(n))).add(Fx(n))),o)),G4=Ve(([o])=>o.dot(ts(12.9898,78.233,-97.5123)).sin().mul(43758.5453).fract().mul(2).sub(1)),OF=Ve(([o])=>{var e=o.cos().toVar(),t=o.sin().toVar();return bo(1,0,0,0,0,e,t,0,0,t.negate(),e,0,0,0,0,1)}),VF=Ve(([o])=>{var e=o.cos().toVar(),t=o.sin().toVar();return bo(e,0,t.negate(),0,0,1,0,0,t,0,e,0,0,0,0,1)}),GF=Ve(([o])=>{var e=o.cos().toVar(),t=o.sin().toVar();return bo(e,t,0,0,t.negate(),e,0,0,0,0,1,0,0,0,0,1)}),z4=Ve(([o])=>{var e=OF(o.x),t=VF(o.y),n=GF(o.z);return t.mul(e).mul(n)}),k4=Ve(([o])=>bo(o.x,0,0,0,0,o.y,0,0,0,0,o.z,0,0,0,0,1)),H4=Ve(([o])=>bo(1,0,0,0,0,1,0,0,0,0,1,0,o.x,o.y,o.z,1)),zF=Ve(([o,e,t,n])=>{var i=td(e.x,e.y).mul(n).toVar(),s=t.sub(i.div(2)).sub(o).dot(i).div(i.dot(i)).negate();return Jh(0,1,s)}),W4=Ve(o=>{var e=zF(jh,o.selectorAngles,o.selectorCenter,o.selectorWidth).sub(.5).mul(2).abs().oneMinus().pow(.25).negate().mul(o.selectorShow);return ts(0,e,e)}),q4=Ve(([o])=>{var e=mb(o),t=gb(o);return Sb(Zh(e,t).normalize())});function Mb(o){for(var e of Object.keys(o))typeof o[e]=="number"?o[e]=Hn(o[e]):o[e]instanceof q?o[e]=ts(o[e].r,o[e].g,o[e].b):o[e]instanceof M&&(o[e]=ts(o[e].x,o[e].y,o[e].z));return o}var kF=(1+5**.5)/2,nd=Ve(o=>{o=Mb({...nd.defaults,...o});var e=Qh(10,o.count).toVar(),t=jh.normalize().toVar(),n=Ux(t.y).mul(e).sub(1).div(2),i=Mo(10,e.pow(.5)),s=n.sub(i).floor().clamp(0,e),r=n.add(i).floor().clamp(0,e),c=Hn(1).toVar();fb(r.sub(s),({i:h})=>{var d=Ti(h,s),f=vb(sn(2*Math.PI/kF,d),2*Math.PI),m=pb(Ux(Hn(d).mul(2).add(1).div(e))),g=td(m,f);c.assign(es(c,_b(t,g)))});var a=xb(o.size.mul(5).sub(5)).toVar(),l=o.blur.pow(4).toVar(),u=Jh(a.sub(l),a.add(l),c);return yb(o.color,o.background,u)});nd.defaults={$name:"Polka dots",count:2,size:.5,blur:.25,color:new q(0),background:new q(16777215)};var Ox,ns,Ao,el,Ab,Vx;ns=new Eh({antialias:!0});ns.useLegacyLights=!1;ns.setPixelRatio(window.devicePixelRatio);ns.setSize(window.innerWidth,window.innerHeight);ns.setAnimationLoop(wb);Ox=document.getElementById("threejs-container");Ox.innerHTML="";Ox.appendChild(ns.domElement);Ao=new si;Ao.background=new q(16777215);el=new qe(60,window.innerWidth/window.innerHeight,1,100);el.position.set(5,2.5,5);el.lookAt(0,0,0);var Eb=new Kh(el,ns.domElement);Eb.enableDamping=!0;var HF=new _s(10066329);Ao.add(HF);var WF=new ms(16777215,0,.9);Ao.add(WF);var qF=new Tr(2,12);Vx=new go({color:13421772,roughness:.5,metalness:0});Vx.colorNode=nd({count:2,size:.6,blur:.22,color:new q(0),background:new q(16777215)});Ab=new Vt(qF,Vx);Ao.add(Ab);function wb(){requestAnimationFrame(wb),Eb.update(),ns.render(Ao,el)}})();
/*! Bundled license information:

three/build/three.core.js:
  (**
   * @license
   * Copyright 2010-2025 Three.js Authors
   * SPDX-License-Identifier: MIT
   *)

three/build/three.webgpu.js:
  (**
   * @license
   * Copyright 2010-2025 Three.js Authors
   * SPDX-License-Identifier: MIT
   *)

three/build/three.module.js:
  (**
   * @license
   * Copyright 2010-2025 Three.js Authors
   * SPDX-License-Identifier: MIT
   *)

three/build/three.tsl.js:
  (**
   * @license
   * Copyright 2010-2025 Three.js Authors
   * SPDX-License-Identifier: MIT
   *)
*/
//# sourceMappingURL=bundle.js.map
